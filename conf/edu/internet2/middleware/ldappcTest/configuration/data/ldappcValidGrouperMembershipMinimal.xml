<?xml version="1.0" encoding="utf-8"?>

<!-- 
    * This template describes all of the available configuration options for
    * Ldappc, and can be used as a starting point when configuring your 
    * particular instance. Many of the elements are optional so only those 
    * necessary for your situation need be defined. 
    *
    * It is important to note that the XML schema used to validate this file
    * requires the elements to be in the order presented here.
-->

<!-- 
    * <ldappc> defines the configuration used for provisioning. It contains
    * the elements defined below.
    *
    *     <grouper> - This optional element contains the configuration elements
    *        needed for provisioning Grouper data.
    *
    *     <signet> - This optional element contains the configuration elements 
    *        needed for provisioning Signet data.
    *
    *     <source-subject-identifiers> - This required element contains the data
    *        necessary for locating subjects in the LDAP directory.
    *
    *     <ldap> - This required element contains the data necessary for 
    *        connecting with LDAP directory.
    *
    * Althought both <grouper> and <signet> are optional, either one or both
    * must be defined within <ldappc>.
-->
<ldappc>

    <!-- 
        * <grouper> is an optional element that contains the elements
        * specific to provisioning data from Grouper. Note, if <grouper>
        * is NOT defined, then <signet> must be. <grouper> contains the 
        * following elements.
        *
        *   <group-queries> - This required element defines which groups are 
        *      selected for the provisioning.
        *
        *   <groups> - This optional element defines the configuration
        *      elements necessary for provisioning groups.
        *
        *   <memberships> - This optional element defines the configuration
        *      elements necessary for provisioning memberships.
        *
        * Although both <groups> and <memberships> are optional, either one or
        * both must be defined within <grouper>.
    -->
    <grouper><!-- 0 or 1 allowed -->

        <!-- 
            * <group-queries> is a required element identifying the 
            * queries used to select the groups used during provisioning.
            * The set of groups created by the union of the results of each query
            * determine the groups used for provisioning. It contains the following
            * elements.
            *
            *    <subordinate-stem-queries>   - This optional element selects all
            *       groups that are subordinate to anyone of the naming 
            *       stems identified in its <stem-list> element.
            *
            *    <attribute-matching-queries> - This optional element selects all 
            *       groups having an attribute containing the same value
            *       as anyone of the attribute name/value pairs identified in its 
            *       <attribute-list> element.
            *
            * Although both <subordinate-stem-queries> and <attribute-matching-queries>
            * are optional, either one or both must be defined within <grouper>.
        -->
        <group-queries><!-- exactly 1 required -->

            <!--
                * <attribute-matching-queries> is a optional element defining a
                * list of attribute name/value pairs such that any group having
                * one or more attributes with the given value is selected for 
                * provisioning. It contains the following element.
                *
                *    <attribute-list> - This required element defines the list of 
                *       attributes.
                *
                * <attribute-list> contains one or more of the following element.
                *
                *    <attribute> - This required element defines the attribute
                *       name and value.
                *
                * <attribute> defines an attribute name/value pair using the 
                * following attributes.
                *
                *    name  - Defines the attribute name.
                *
                *    value - Defines the attribute value.
            -->
            <attribute-matching-queries><!-- 0 or 1 allowed -->

                <attribute-list><!-- exactly 1 required -->

                    <attribute name="attribute1"
                        value="attributeValue1" /><!-- 1 or more required -->

                    <attribute name="attribute2"
                        value="attributeValue2" /><!-- 1 or more required -->

                </attribute-list>

            </attribute-matching-queries>

        </group-queries>

        <!-- 
            * <memberships> is an optional element defining how memberships
            * are provisioned.  This element is REQUIRED if Memberships are 
            * being provisioned. <memberships> contains the following element.
            *
            *   <member-groups-list> - This required element defines how the
            *      list of groups to which a member belongs is maintained on
            *      the members LDAP entry.
            *                         
        -->
        <memberships><!--  0 or 1 allowed -->

            <!-- 
                * <member-groups-list> is a required element defining the 
                * attribute of provisioned group members LDAP entries that will
                * list all the groups to which they belong. 
                *
                *    list-object-class - Optional attribute defining the
                *       object class the Member's entry must have to support
                *       the group list. Please note that if this object class 
                *       has required attributes not populated by the provisioning
                *       process, then an error may occur.
                *
                *    list-attribute - Defines the LDAP entry attribute in which
                *       to store group list (e.g., groupList).
                *
                *    naming-attribute - Defines the group naming attribute to use
                *       when creating the list of groups for a member (e.g., "name" ).
            -->
            <member-groups-list list-attribute="mglListAttribute"
                naming-attribute="mglNamingAttribute" /><!-- exactly 1 required -->

        </memberships>

    </grouper>

    <!-- 
        *
        * <source-subject-identifiers> is a required element identifying by
        * Subject Source how a Subject's LDAP entry is located. It contains
        * one or more of the following element.
        *
        *    <source-subject-identifier> - This required element identifies
        *       for a Subject Source how to locate a Subject's LDAP entry.
        *       One of these elements is to be defined for each Source.
    -->
    <source-subject-identifiers><!-- exactly 1 required -->

        <!-- 
            *
            * <source-subject-identifier> is a required element that identifies
            * for a given Subject Source the Subject naming attribute to be used for 
            * identifying Subjects in the directory, and an LDAP search filter
            * that will uniquely identify Subjects for the Source using the
            * given naming attribute value. It requires two attributes that define
            * the Subject Source and the Subject naming attribute.
            *
            *   source - The name of the Subject Source (e.g., "g:gsa")
            *
            *   subject-attribute - The name of the Subject naming attribute to
            *      be used (e.g., "account")
            * 
            * <source-subject-identifier> contains the following element.
            * 
            *     <ldap-search> - This required element identifies the LDAP search
            *        criteria for finding a Subject's entry.
        -->
        <!-- 
            *
            * <ldap-search> is a required element containing a parameterized
            * LDAP search filter that uniquely identifies a Subject from the
            * Subject Source. It has three required attributes defined below.
            *
            *   base - Identifies the DN of the context or object to search
            *      (e.g., cn=tom,dc=example,dc=edu).
            *
            *   scope - Identifies the scope of the search.  The valid values
            *      are, ignoring case, the names of the JNDI scope constants
            *      defined in the class javax.naming.directory.SearchContext.
            *      These are object_scope, onelevel_scope, and subtree_scope.
            *
            *   filter - Parameterized search filter (e.g., (&(uid={0})(objectclass=ucperson)))
            *      The string "{0}" will be replaced by the value of Subject's
            *      attribute identified by subject-attribute in
            *      source-subject-identifier element.
        -->

        <source-subject-identifier source="source1"
            subject-attribute="subjectAttr1">
            <!-- 1 or more required -->
            <ldap-search base="ldapSearchBase1" scope="object_scope"
                filter="ldapSearchFilter1" />
            <!-- exactly 1 required -->
        </source-subject-identifier>

        <source-subject-identifier source="source2"
            subject-attribute="subjectAttr2">
            <!-- 1 or more required -->
            <ldap-search base="ldapSearchBase2" scope="subtree_scope"
                filter="ldapSearchFilter2" />
            <!-- exactly 1 required -->
        </source-subject-identifier>

    </source-subject-identifiers>


    <!-- 
        * <ldap> is a required element containing the information necessary to
        * connect with the directory being populated. It contains the following
        * element.
        *
        *   <context> - This require element defines the parameters necessary
        *      to establish a JNDI LDAP context.
        *
    -->
    <ldap><!-- Exactly 1 required -->

        <!-- 
            * <context> is a required element holding the parameters necessary
            * to establish a JNDI LDAP context. It contains the following element.
            *
            *    <parameters-list> - This required element contains the list of 
            *       parameters needed to establish a JNDI LDAP context.
            *
            * <paramters-list> contains one or more of the follow element.
            *
            *    <parameter> - This required element holds a parameter name/value
            *       pair.
            *
            * The <parameter>'s necessary to establish a JNDI LDAP context are
            * listed below along with a description of the expected value. Note
            * the parameter names must be the same, ignoring case, as  the
            * equivalent JNDI constant defined in the class javax.naming.LdapContext
            * (e.g., a parameter name of provider_url for javax.naming.LdapContext.PROVIDER_URL).
            *
            *   initial_context_factory - Fully qualified class name of a context
            *      factory (e.g., com.sun.jndi.ldap.LdapCtxFactory).
            *
            *   provider_url - URL for the LDAP provider
            *      (e.g., ldap://localhost:389/o=JNDITutorial).
            *
            *   security_authentication - Value of "none", "simple", "strong", or a 
            *      provider-specific string (e.g., simple).
            *
            *   security_principal - Specifies the name of the user/program doing
            *      the authentication (e.g., "cn=S. User,ou=NewHires,o=JNDITutorial").
            *
            *   security_credentials - Specifies the credentials of the user/program 
            *      doing the authentication (e.g., mysecret).
        -->
        <context><!-- Exactly 1 required -->

            <parameter-list><!-- 0 or 1 allowed -->

                <!-- 1 or more <parameter> elements are required within <parameter-list> -->
                <parameter name="initial_context_factory"
                    value="initContextFactory" />

                <parameter name="provider_url" value="providerUrl" />

                <parameter name="security_authentication"
                    value="securityAuthentication" />

                <parameter name="security_principal"
                    value="securityPrincipal" />

                <parameter name="security_credentials"
                    value="securityCredentials" />

            </parameter-list>

        </context>

    </ldap>

</ldappc>
