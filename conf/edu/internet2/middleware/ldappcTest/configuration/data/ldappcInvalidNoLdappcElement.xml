<?xml version="1.0" encoding="utf-8"?>

<!-- 
    * This is a valid configuration file except that there is no "ldappc" element.
-->
<Xldappc>

    <!-- 
        * <signet> is an optional element that contains the elements specific to
        * provisioning information from Signet. Note, if <signet> is NOT defined,
        * then <grouper> must be. <signet> contains the following elements.
        *
        *   <permissions-listing> - This required element defines how permissions
        *      are stored when provisioned.
        *
        *   <permissions-queries> - This optional element defines additional
        *      criteria for determining which permissions are provisioned.
        *
    -->
    <signet><!-- 0 or 1 allowed -->

        <!-- 
            * <permissions-listing> is a required element that defines how
            * provisioned permissions are stored in a Subject's LDAP entry.
            * The method storing provisioned permissions is wholly defined by
            * the following attributes.
            *
            *   stored-as - Defines how the permissions are stored. Its value
            *      must be one of "string" or "eduPermission".
            *
            *   string-object-class - Optional attribute defining the object 
            *      class to add to the Member's subject LDAP entry in order to
            *      support the string-attribute. Please note that if this object
            *      class has required attributes not populated by the 
            *      provisioning process, then an error may occur.
            *
            *   string-attribute - Optional attribute defining the LDAP entry
            *      attribute in which to store permissions if stored-as is set
            *      to "string" (e.g., permissionStrings).  As implied this
            *      attribute is required if stored-as is "string".
            *
            *   string-prefix - Optional attribute defining the prefix to use
            *      when storing permissions as strings.
        -->
        <permissions-listing stored-as="string"
            string-attribute="stringAttribute"
            string-prefix="stringPrefix" /><!-- Exactly 1 required -->

    </signet>

    <!-- 
        *
        * <source-subject-identifiers> is a required element identifying by
        * Subject Source how a Subject's LDAP entry is located. It contains
        * one or more of the following element.
        *
        *    <source-subject-identifier> - This required element identifies
        *       for a Subject Source how to locate a Subject's LDAP entry.
        *       One of these elements is to be defined for each Source.
    -->
    <source-subject-identifiers><!-- exactly 1 required -->

        <!-- 
            *
            * <source-subject-identifier> is a required element that identifies
            * for a given Subject Source the Subject naming attribute to be used for 
            * identifying Subjects in the directory, and an LDAP search filter
            * that will uniquely identify Subjects for the Source using the
            * given naming attribute value. It requires two attributes that define
            * the Subject Source and the Subject naming attribute.
            *
            *   source - The name of the Subject Source (e.g., "g:gsa")
            *
            *   subject-attribute - The name of the Subject naming attribute to
            *      be used (e.g., "account")
            * 
            * <source-subject-identifier> contains the following element.
            * 
            *     <ldap-search> - This required element identifies the LDAP search
            *        criteria for finding a Subject's entry.
        -->
        <!-- 
            *
            * <ldap-search> is a required element containing a parameterized
            * LDAP search filter that uniquely identifies a Subject from the
            * Subject Source. It has three required attributes defined below.
            *
            *   base - Identifies the DN of the context or object to search
            *      (e.g., cn=tom,dc=example,dc=edu).
            *
            *   scope - Identifies the scope of the search.  The valid values
            *      are, ignoring case, the names of the JNDI scope constants
            *      defined in the class javax.naming.directory.SearchContext.
            *      These are object_scope, onelevel_scope, and subtree_scope.
            *
            *   filter - Parameterized search filter (e.g., (&(uid={0})(objectclass=ucperson)))
            *      The string "{0}" will be replaced by the value of Subject's
            *      attribute identified by subject-attribute in
            *      source-subject-identifier element.
        -->

        <source-subject-identifier source="source1"
            subject-attribute="subjectAttr1">
            <!-- 1 or more required -->
            <ldap-search base="ldapSearchBase1" scope="object_scope"
                filter="ldapSearchFilter1" />
            <!-- exactly 1 required -->
        </source-subject-identifier>

        <source-subject-identifier source="source2"
            subject-attribute="subjectAttr2">
            <!-- 1 or more required -->
            <ldap-search base="ldapSearchBase2" scope="subtree_scope"
                filter="ldapSearchFilter2" />
            <!-- exactly 1 required -->
        </source-subject-identifier>

    </source-subject-identifiers>


    <!-- 
        * <ldap> is a required element containing the information necessary to
        * connect with the directory being populated. It contains the following
        * element.
        *
        *   <context> - This require element defines the parameters necessary
        *      to establish a JNDI LDAP context.
        *
    -->
    <ldap><!-- Exactly 1 required -->

        <!-- 
            * <context> is a required element holding the parameters necessary
            * to establish a JNDI LDAP context. It contains the following element.
            *
            *    <parameters-list> - This required element contains the list of 
            *       parameters needed to establish a JNDI LDAP context.
            *
            * <paramters-list> contains one or more of the follow element.
            *
            *    <parameter> - This required element holds a parameter name/value
            *       pair.
            *
            * The <parameter>'s necessary to establish a JNDI LDAP context are
            * listed below along with a description of the expected value. Note
            * the parameter names must be the same, ignoring case, as  the
            * equivalent JNDI constant defined in the class javax.naming.LdapContext
            * (e.g., a parameter name of provider_url for javax.naming.LdapContext.PROVIDER_URL).
            *
            *   initial_context_factory - Fully qualified class name of a context
            *      factory (e.g., com.sun.jndi.ldap.LdapCtxFactory).
            *
            *   provider_url - URL for the LDAP provider
            *      (e.g., ldap://localhost:389/o=JNDITutorial).
            *
            *   security_authentication - Value of "none", "simple", "strong", or a 
            *      provider-specific string (e.g., simple).
            *
            *   security_principal - Specifies the name of the user/program doing
            *      the authentication (e.g., "cn=S. User,ou=NewHires,o=JNDITutorial").
            *
            *   security_credentials - Specifies the credentials of the user/program 
            *      doing the authentication (e.g., mysecret).
        -->
        <context><!-- Exactly 1 required -->

            <parameter-list><!-- 0 or 1 allowed -->

                <!-- 1 or more <parameter> elements are required within <parameter-list> -->
                <parameter name="initial_context_factory"
                    value="initContextFactory" />

                <parameter name="provider_url" value="providerUrl" />

                <parameter name="security_authentication"
                    value="securityAuthentication" />

                <parameter name="security_principal"
                    value="securityPrincipal" />

                <parameter name="security_credentials"
                    value="securityCredentials" />

            </parameter-list>

        </context>

    </ldap>

</Xldappc>
