#
# Grouper Configuration
# $Id: grouper.properties,v 1.24 2005-12-15 06:31:11 blair Exp $
#

# Use this interface for access privileges
privileges.access.interface           = edu.internet2.middleware.grouper.GrouperAccessAdapter
# Use this interface for naming privileges
privileges.naming.interface           = edu.internet2.middleware.grouper.GrouperNamingAdapter

# If set to _true_, the ALL subject will be granted that privilege on
# each new group that is created.  
groups.create.grant.all.admin         = false
groups.create.grant.all.optin         = false
groups.create.grant.all.optout        = false
groups.create.grant.all.read          = true
groups.create.grant.all.update        = false
groups.create.grant.all.view          = true

# If set to _true_, the ALL subject will be granted that privilege on
# each new stem that is created.  
stems.create.grant.all.create         = false
stems.create.grant.all.stem           = false

# Control whether the addition and deletion of both immediate and
# effective groups memberships are logged in the event log.  If
# using the _GrouperAccessAdapter_ this will include granted and
# revoked access privileges.
memberships.log.group.effective.add   = true
memberships.log.group.effective.del   = true

# If using _GrouperNamingAdapter_, control whether the granting and
# revoking of naming privileges are logged in the event log.
memberships.log.stem.effective.add    = true
memberships.log.stem.effective.del    = true


#
# EXPERIMENTAL
#

# A wheel group allows you to enable non-GrouperSystem subjects to act
# like a root user when interacting with the registry.
#
# Set to _true_ if you want to use a wheel group
groups.wheel.use                      = false
# Set to the _name_ of the group you want to treat as the wheel group.
# The members of this group will be treated as a root user.
#
# You will need to create your wheel group.
groups.wheel.group                    = your:wheel:group

