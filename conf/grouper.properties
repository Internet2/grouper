#
# Grouper Configuration
# $Id: grouper.properties,v 1.34 2007-08-09 18:55:21 blair Exp $
#

#
# NOTES
# =====
#
# 20070809: Subject caching is now controlled in "grouper.ehcache.xml".
#

# Use this interface implementation for access privileges
privileges.access.interface           = edu.internet2.middleware.grouper.GrouperAccessAdapter
# Use this interface implementation for naming privileges
privileges.naming.interface           = edu.internet2.middleware.grouper.GrouperNamingAdapter

# Use the following interfaces for caching access and naming privileges.
#
# Grouper includes three `PrivilegeCache` implementations:
# * "edu.internet2.middleware.grouper.internal.cache.NoCachePrivilegeCache"
#   No caching performed
# * "edu.internet2.middleware.grouper.internal.cache.SimplePrivilegeCache"
#   Caches results but flushes all cached entries upon any update
# * "edu.internet2.middleware.grouper.internal.cache.SimpleWheelPrivilegeCache"
#   Same as "SimplePrivilegeCache"  but with marginally) better support for using a wheel group.
#
privileges.access.cache.interface     = edu.internet2.middleware.grouper.internal.cache.SimpleWheelPrivilegeCache
privileges.naming.cache.interface     = edu.internet2.middleware.grouper.internal.cache.SimpleWheelPrivilegeCache

# If set to _true_, the ALL subject will be granted that privilege on
# each new group that is created.  
groups.create.grant.all.admin         = false
groups.create.grant.all.optin         = false
groups.create.grant.all.optout        = false
groups.create.grant.all.read          = true
groups.create.grant.all.update        = false
groups.create.grant.all.view          = true

# If set to _true_, the ALL subject will be granted that privilege on
# each new stem that is created.  
stems.create.grant.all.create         = false
stems.create.grant.all.stem           = false

# Control whether the addition and deletion of effective groups memberships
#  are logged in the event log.  If using the _GrouperAccessAdapter_ this 
# will include granted and revoked effective access privileges.
memberships.log.group.effective.add   = true
memberships.log.group.effective.del   = true

# If using _GrouperNamingAdapter_, control whether the granting and
# revoking of effective naming privileges are logged in the event log.
memberships.log.stem.effective.add    = true
memberships.log.stem.effective.del    = true

# A wheel group allows you to enable non-GrouperSystem subjects to act
# like a root user when interacting with the registry.
#
# Set to _true_ if you want to use a wheel group
groups.wheel.use                      = false
#
# Set to the _name_ of the group you want to treat as the wheel group.
# The members of this group will be treated as root-like users.
#
# You will need to create your wheel group.
groups.wheel.group                    = etc:wheel

#
# Specify DAO implementation to be used.
#
# Grouper includes one DAO implementation:
# * "edu.internet2.middleware.grouper.internal.dao.hibernate.HibernateDAOFactory"
#   Default.  Uses Hibernate2.
#
dao.factory                           = edu.internet2.middleware.grouper.internal.dao.hibernate.HibernateDAOFactory

