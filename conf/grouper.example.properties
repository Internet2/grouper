#
# Grouper Configuration
# $Id: grouper.example.properties,v 1.6 2008-07-10 00:46:54 mchyzer Exp $
#

#
# NOTES
# =====
#
# 20070809: Subject caching is now controlled in "grouper.ehcache.xml".
#

# Use this interface implementation for access privileges
privileges.access.interface           = edu.internet2.middleware.grouper.GrouperAccessAdapter
# Use this interface implementation for naming privileges
privileges.naming.interface           = edu.internet2.middleware.grouper.GrouperNamingAdapter

# Use the following interfaces for caching access and naming privileges.
#
# Grouper includes three `PrivilegeCache` implementations:
# * "edu.internet2.middleware.grouper.internal.cache.NoCachePrivilegeCache"
#   No caching performed
# * "edu.internet2.middleware.grouper.internal.cache.SimplePrivilegeCache"
#   Caches results but flushes all cached entries upon any update
# * "edu.internet2.middleware.grouper.internal.cache.SimpleWheelPrivilegeCache"
#   Same as "SimplePrivilegeCache"  but with marginally) better support for using a wheel group.
#
privileges.access.cache.interface     = edu.internet2.middleware.grouper.internal.cache.NoCachePrivilegeCache
privileges.naming.cache.interface     = edu.internet2.middleware.grouper.internal.cache.NoCachePrivilegeCache

# If set to _true_, the ALL subject will be granted that privilege on
# each new group that is created.  
groups.create.grant.all.admin         = false
groups.create.grant.all.optin         = false
groups.create.grant.all.optout        = false
groups.create.grant.all.read          = true
groups.create.grant.all.update        = false
groups.create.grant.all.view          = true

# If set to _true_, the ALL subject will be granted that privilege on
# each new stem that is created.  
stems.create.grant.all.create         = false
stems.create.grant.all.stem           = false

# Control whether the addition and deletion of effective groups memberships
#  are logged in the event log.  If using the _GrouperAccessAdapter_ this 
# will include granted and revoked effective access privileges.
memberships.log.group.effective.add   = true
memberships.log.group.effective.del   = true

# If using _GrouperNamingAdapter_, control whether the granting and
# revoking of effective naming privileges are logged in the event log.
memberships.log.stem.effective.add    = true
memberships.log.stem.effective.del    = true

# A wheel group allows you to enable non-GrouperSystem subjects to act
# like a root user when interacting with the registry.
#
# Set to _true_ if you want to use a wheel group
groups.wheel.use                      = false
#
# Set to the _name_ of the group you want to treat as the wheel group.
# The members of this group will be treated as root-like users.
#
# You will need to create your wheel group.
groups.wheel.group                    = etc:sysadmingroup

#
# Specify DAO implementation to be used.
#
# Grouper includes two DAO implementations:
# * "edu.internet2.middleware.grouper.internal.dao.hibernate.HibernateDAOFactory"
#   Default.  Uses Hibernate2.
# * "edu.internet2.middleware.grouper.internal.dao.hib3.Hib3DAOFactory"
#   Experimental Hibernate3 support.
#
dao.factory = edu.internet2.middleware.grouper.internal.dao.hib3.Hib3DAOFactory

# Set this to true for setters not to cause insert/update SQL
# This is in certain places like Group.setName()
# If you set to true, you need to make sure all affected setters are followed by group.store()
# See the changelog for details.
# This defaults to false.  If false (or default) then the store() methods are no-ops
# Note: this will probably default to true and be removed from grouper.properties
# in a release coming out soon (e.g. v1.5)
grouper.setters.dont.cause.queries = true

# whitelist (allow) and blacklist (deny) for db data or object deletes.  
# if a listing is in the whitelist (allow), it will be allowed to delete db
# if a listing is in the blacklist (deny), it will be denied from deleting db
# multiple inputs can be entered with .0, .1, .2, etc.  These numbers must be sequential, starting with 0
db.change.allow.user.0=grouper3
db.change.allow.url.0=jdbc:mysql://localhost:3306/grouper3
db.change.allow.user.1=grouper1
db.change.allow.url.1=jdbc:mysql://localhost:3306/grouper1

db.change.deny.user.0=grouper2
db.change.deny.url.0=jdbc:mysql://localhost:3306/grouper2

###################################
## Hooks
## You can register multiple classes for one hook base class by comma separating the hooks implementations
## You can also register hooks at runtime with: 
## GrouperHookType.addHookManual("hooks.group.class", YourSchoolGroupHooks2.class);
###################################

#implement a group hook by extending edu.internet2.middleware.grouper.hooks.GroupHooks
#hooks.group.class=edu.yourSchool.it.YourSchoolGroupHooks,edu.yourSchool.it.YourSchoolGroupHooks2

#implement a grouper lifecycle hook by extending edu.internet2.middleware.grouper.hooks.LifecycleHooks
#hooks.lifecycle.class=edu.yourSchool.it.YourSchoolLifecycleHooks

#implement a membership hook by extending edu.internet2.middleware.grouper.hooks.MembershipHooks
#hooks.membership.class=edu.yourSchool.it.YourSchoolMembershipHooks

#implement a member hook by extending edu.internet2.middleware.grouper.hooks.MemberHooks
#hooks.member.class=edu.yourSchool.it.YourSchoolMemberHooks

#implement a stem hook by extending edu.internet2.middleware.grouper.hooks.StemHooks
#hooks.stem.class=edu.yourSchool.it.YourSchoolStemHooks

#implement a composite hook by extending edu.internet2.middleware.grouper.hooks.CompositeHooks
#hooks.composite.class=edu.yourSchool.it.YourSchoolCompositeHooks

#implement a field hook by extending edu.internet2.middleware.grouper.hooks.FieldHooks
#hooks.field.class=edu.yourSchool.it.YourSchoolFieldHooks

#implement a grouperSession hook by extending edu.internet2.middleware.grouper.hooks.GrouperSessionHooks
#hooks.grouperSession.class=edu.yourSchool.it.YourSchoolGrouperSessionHooks

#implement a groupType hook by extending edu.internet2.middleware.grouper.hooks.GroupTypeHooks
#hooks.groupType.class=edu.yourSchool.it.YourSchoolGroupTypeHooks

#implement a groupTypeTuple hook by extending edu.internet2.middleware.grouper.hooks.GroupTypeTupleHooks
#hooks.groupTypeTuple.class=edu.yourSchool.it.YourSchoolGroupTypeTupleHooks

