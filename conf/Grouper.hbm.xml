<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping
    PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">

<hibernate-mapping package="edu.internet2.middleware.grouper">

  <class name="GrouperAttribute" table="grouper_attribute" mutable="true">
    <composite-id access="field">
      <key-property name="groupKey"   type="string" column="groupKey"/>
      <key-property name="groupField" type="string" column="groupField"/>
    </composite-id>
    <property name="groupFieldValue" type="string"/>
  </class>

  <class name="GrouperField" table="grouper_field" mutable="false">
    <cache usage="read-only"/>
    <id name="groupField" type="string" unsaved-value="null" >
      <generator class="assigned"/>
    </id>
    <property name="readPriv"   type="string" not-null="true"/>
    <property name="writePriv"  type="string" not-null="true"/>
    <property name="isList"     type="string" not-null="true"/>
  </class>

  <class name="Group" table="grouper_group" mutable="true">
    <id name="groupKey" type="string" unsaved-value="null">
      <generator class="assigned"/>
    </id>
    <discriminator column="classType" type="string"/>
    <property name="groupID"        type="string" not-null="true"/>
    <property name="createTime"     type="string"/>
    <property name="createSubject"  type="string"/>
    <property name="createSource"   type="string"/>
    <property name="modifyTime"     type="string"/>
    <property name="modifySubject"  type="string"/>
    <property name="modifySource"   type="string"/>
    <property name="groupComment"   type="string"/>
    <subclass name="GrouperGroup"/>
    <subclass name="GrouperStem"/>
  </class>

  <class name="GrouperList" table="grouper_list" mutable="true">
    <id name="listKey" type="string" unsaved-value="null">
      <generator class="assigned"/>
    </id>
    <property name="groupKey"   type="string" column="groupKey"/>
    <property name="groupField" type="string" column="groupField"/>
    <property name="memberKey"  type="string" column="memberKey"/>
    <property name="chainKey"   type="string" column="chainKey"/>
    <property name="viaKey"     type="string" column="viaKey"/>
  </class>

  <class name="GrouperMember" table="grouper_member">
    <id name="memberKey" type="string" unsaved-value="null">
      <generator class="assigned"/>
    </id>
    <property name="memberID"       type="string"/>
    <property name="subjectID"      type="string"/>
    <property name="subjectSource"  type="string"/>
    <property name="subjectTypeID"  type="string"/>
  </class>

  <class name="GrouperSchema" table="grouper_schema" mutable="true">
    <composite-id access="field">
      <key-property name="groupKey"   type="string" column="groupKey"/>
      <key-property name="groupType"  type="string" column="groupType"/>
    </composite-id>
  </class>

  <class name="GrouperSession" table="grouper_session">
    <id name="sessionID" type="string" unsaved-value="null" >
      <generator class="assigned"/>
    </id>
    <property name="memberID"   type="string" not-null="true"/>
    <property name="startTime"  type="string" not-null="true"/>
  </class>

  <class name="GrouperType" table="grouper_type" mutable="false">
    <cache usage="read-only"/>
    <id name="groupType" type="string" unsaved-value="null" >
      <generator class="assigned"/>
    </id>
  </class>

  <class name="GrouperTypeDef" table="grouper_typeDef" mutable="false">
    <cache usage="read-only"/>
    <composite-id access="field">
      <key-property name="groupType"  type="string" column="groupType"/>
      <key-property name="groupField" type="string" column="groupField"/>
    </composite-id>
  </class>

  <class name="MemberVia" table="grouper_MemberVia">
    <composite-id access="field">
      <key-property name="chainKey" type="string"   column="chainKey"/>
      <key-property name="chainIdx" type="integer"  column="chainIdx"/>
      <key-property name="listKey"  type="string"   column="listKey"/>
    </composite-id>
  </class>

  <query name="Group.by.name.and.type"><![CDATA[
    select n.groupKey from 
      GrouperAttribute n, GrouperSchema schema where
        n.groupField      = 'name'      and
        n.groupFieldValue = ?           and
        schema.groupType  = ?           and
        n.groupKey        = schema.groupKey
  ]]></query>

  <query name="Group.by.name.fuzzy"><![CDATA[
    select distinct a.groupKey 
      from GrouperAttribute a where
      (
        (
          a.groupField = 'name' and
          lower(a.groupFieldValue) like lower(?)
        ) or
        (
          a.groupField = 'displayName' and
          lower(a.groupFieldValue) like lower(?)
        ) or
        (
          a.groupField = 'displayExtension' and
          lower(a.groupFieldValue) like lower(?)
        )
      ) 
  ]]></query>

  <query name="Group.key.by.stem.and.extn.and.type"><![CDATA[
    select s.groupKey from 
      GrouperAttribute s, GrouperAttribute e, GrouperSchema schema where
        s.groupField      = 'stem'      and
        s.groupFieldValue = ?           and
        e.groupField      = 'extension' and
        e.groupFieldValue = ?           and
        s.groupKey        = e.groupKey  and
        schema.groupType  = ?           and
        s.groupKey        = schema.groupKey
  ]]></query>

  <query name="GrouperAttribute.by.key"><![CDATA[
    from GrouperAttribute where groupKey = ?
  ]]></query>

  <query name="GrouperAttribute.by.key.and.field"><![CDATA[
    from GrouperAttribute where 
      groupKey    = ?     and
      groupField  = ?
  ]]></query>

  <query name="GrouperAttribute.by.name"><![CDATA[
    from GrouperAttribute      where 
      groupField      = 'name' and
      groupFieldValue = ?
  ]]></query>

  <query name="GrouperField.all"><![CDATA[
    from GrouperField
  ]]></query>

  <query name="Group.by.created.after"><![CDATA[
    from Group where createTime > ?
  ]]></query>

  <query name="Group.by.created.before"><![CDATA[
    from Group where createTime < ?
  ]]></query>

  <query name="Group.by.id"><![CDATA[
    from Group where groupID = ?
  ]]></query>

  <query name="Group.key.by.id"><![CDATA[
    select g.groupKey from Group g where g.groupID = ?
  ]]></query>

  <query name="Group.key.child.group.of.stem"><![CDATA[
    select s.groupKey from 
      GrouperAttribute s, GrouperSchema schema where
        s.groupField      = 'stem'    and
        s.groupFieldValue = ?         and
        schema.groupType  != 'naming' and
        s.groupKey = schema.groupKey
  ]]></query>

  <query name="Group.key.child.stem.of.stem"><![CDATA[
    select s.groupKey from 
      GrouperAttribute s, GrouperSchema schema where
        s.groupField      = 'stem'    and
        s.groupFieldValue = ?         and
        schema.groupType  = 'naming'  and
        s.groupKey = schema.groupKey
  ]]></query>

<!-- 
TODO For some reason I'm not convinced this query is correct.  
-->
  <query name="Group.key.all.children"><![CDATA[
    select distinct a.groupKey from
      GrouperAttribute a where
        a.groupField        =     'stem'  and
        (
          a.groupFieldValue =     ?       or
          a.groupFieldValue like  ?
        )                                     
  ]]></query>

  <query name="Group.by.modified.after"><![CDATA[
    from Group where modifyTime > ?
  ]]></query>

  <query name="Group.by.modified.before"><![CDATA[
    from Group where modifyTime < ?
  ]]></query>

  <query name="Group.subject.search"><![CDATA[
    select distinct g.groupKey from
      Group g, GrouperAttribute a, GrouperSchema s where
        (
          (
            a.groupField      =     'stem' and
            a.groupFieldValue like  ?
          ) or
          (
            a.groupField      =     'extension' and
            a.groupFieldValue like  ?
          ) or
          (
            a.groupField      =     'displayextension' and
            a.groupFieldValue like  ?
          ) or
          (
            a.groupField      =     'name' and
            a.groupFieldValue like  ?
          ) or
          (
            a.groupField      =     'displayname' and
            a.groupFieldValue like  ?
          )
        ) 
        and
        g.groupKey  =   a.groupKey  and
        g.groupKey  =   s.groupKey  and
        s.groupType !=  'naming'    
  ]]></query>

  <query name="Group.subject.search.by.id"><![CDATA[
    select distinct g.groupKey from
      Group g, GrouperAttribute a, GrouperSchema s where
        (
          (
            a.groupField      =     'name' and
            a.groupFieldValue like  ?
          ) or
          (
            a.groupField      =     'displayname' and
            a.groupFieldValue like  ?
          ) or
          (
            g.groupID = ?
          )
        ) 
        and
        g.groupKey  =   a.groupKey  and
        g.groupKey  =   s.groupKey  and
        s.groupType !=  'naming'    
  ]]></query>

  <query name="GrouperList.by.group"><![CDATA[
      from GrouperList where groupKey = ?
  ]]></query>

  <query name="GrouperList.by.group.and.list"><![CDATA[
    from GrouperList          where
      groupKey    = ?         and
      memberKey   is not null and
      groupField  = ?
  ]]></query>

  <query name="GrouperList.by.group.and.member.and.list.and.is.eff"><![CDATA[
    from GrouperList          where
      groupKey    = ?         and
      memberKey   = ?         and
      groupField  = ?         and
      viaKey      is not null 
  ]]></query>

  <query name="GrouperList.by.group.and.member.and.list.and.is.imm"><![CDATA[
    from GrouperList          where
      groupKey    = ?         and
      memberKey   = ?         and
      groupField  = ?         and
      viaKey      is null 
  ]]></query>

  <query name="GrouperList.as.key.by.group.and.member.and.list"><![CDATA[
    select l.listKey from GrouperList l where
      l.groupKey    = ? and
      l.memberKey   = ? and
      l.groupField  = ?
  ]]></query>

  <query name="GrouperList.by.group.and.list.and.is.eff"><![CDATA[
    from GrouperList          where
      groupKey    = ?         and
      memberKey   is not null and
      groupField  = ?         and
      viaKey      is not null 
  ]]></query>

  <query name="GrouperList.by.group.and.list.and.is.imm"><![CDATA[
    from GrouperList          where
      groupKey    = ?         and
      memberKey   is not null and
      groupField  = ?         and
      viaKey      is null 
  ]]></query>

  <query name="GrouperList.by.list"><![CDATA[
    from GrouperList          where
      groupKey    is not null and
      memberKey   is not null and
      groupField  = ?
  ]]></query>

  <query name="GrouperList.by.list.and.is.eff"><![CDATA[
    from GrouperList          where
      groupKey    is not null and
      memberKey   is not null and
      groupField  = ?         and
      viaKey      is not null 
  ]]></query>

  <query name="GrouperList.by.list.and.is.imm"><![CDATA[
    from GrouperList          where
      groupKey    is not null and
      memberKey   is not null and
      groupField  = ?         and
      viaKey      is null 
  ]]></query>

  <query name="GrouperList.by.member"><![CDATA[
    from GrouperList          where
      groupKey    is not null and
      memberKey   = ?         
  ]]></query>

  <query name="GrouperList.by.member.and.list"><![CDATA[
    from GrouperList          where
      groupKey    is not null and
      memberKey   = ?         and
      groupField  = ?
  ]]></query>

  <query name="GrouperList.by.member.and.list.and.is.eff"><![CDATA[
    from GrouperList          where
      groupKey    is not null and
      memberKey   = ?         and
      groupField  = ?         and
      viaKey      is not null 
  ]]></query>

  <query name="GrouperList.by.member.and.list.and.is.imm"><![CDATA[
    from GrouperList          where
      groupKey    is not null and
      memberKey   = ?         and
      groupField  = ?         and
      viaKey      is null 
  ]]></query>

  <query name="GrouperMember.by.id"><![CDATA[
    from GrouperMember where memberID = ?
  ]]></query>

  <query name="GrouperMember.by.subjectid.and.typeid"><![CDATA[
    from GrouperMember  where 
      subjectID     = ? and
      subjectTypeID = ?
  ]]></query>

  <query name="GrouperSchema.by.key"><![CDATA[
    from GrouperSchema where groupKey = ?
  ]]></query>

  <query name="GrouperSchema.by.type"><![CDATA[
    from GrouperSchema where groupType = ?
  ]]></query>

  <query name="GrouperSchema.by.key.and.type"><![CDATA[
    from GrouperSchema where 
      groupKey  = ?    and
      groupType = ?
  ]]></query>

  <query name="GrouperSession.by.id"><![CDATA[
    from GrouperSession where sessionID = ?
  ]]></query>

  <query name="GrouperType.all"><![CDATA[
    from GrouperType
  ]]></query>

  <query name="GrouperTypeDef.all"><![CDATA[
    from GrouperTypeDef
  ]]></query>

  <query name="MemberVia.by.key"><![CDATA[
    from MemberVia where 
      chainKey = ? 
      order by chainIdx asc
  ]]></query>

  <query name="MemberVia.by.list.and.first"><![CDATA[
    from MemberVia  where
      chainIdx  = 0 and
      listKey   = ?
  ]]></query>

</hibernate-mapping>

