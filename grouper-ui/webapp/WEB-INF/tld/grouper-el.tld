<?xml version="1.0" encoding="ISO-8859-1" ?>
<taglib xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee/web-jsptaglibrary_2_0.xsd" version="2.0">

  <description>Grouper GUI library</description>
  <display-name>Grouper GUI library</display-name>
  <tlib-version>1.0</tlib-version>
  <short-name>grouper</short-name>
  <uri>http://internet2.edu/grouper/gui</uri>

  <tag>
    <description>
      Abbreviate with a more button and display all in textarea
    </description>
    <name>abbreviateTextarea</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperAbbreviateTextareaTag
    </tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        cols of textarea
        </description>
      <name>cols</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
       rows of textarea
        </description>
      <name>rows</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        number of chars to show
        </description>
      <name>showCharCount</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        text to show
        </description>
      <name>text</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>

  </tag>

  <tag>
    <description>
      Creates a dhtmlx combobox
    </description>
    <name>combobox</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperComboboxTag
    </tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        id and class of elements, and name of combobox. Make this unique in app
        </description>
      <name>id</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        width, int, means pixels
        </description>
      <name>width</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        the operation to call when filtering
        </description>
      <name>filterOperation</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        the default text which should appear in the combo box when drawn
        </description>
      <name>comboDefaultText</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        the default value (will be submitted) which should appear in the combo box when drawn
        </description>
      <name>comboDefaultValue</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        send more form element names to the filter operation, comma separated
        </description>
      <name>additionalFormElementNames</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>

  </tag>

  <tag>
    <description>
      Creates a dojo combobox
    </description>
    <name>combobox2</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperComboboxTag2</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        id and class of elements, and name of combobox. Make this unique in page.
        e.g. personPicker.  The id of the tag will be personPickerId, name will be
        personPickerName.  Will generate a QueryReadStore too... 
        </description>
      <name>idBase</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        style, could include the width of the textfield
        </description>
      <name>style</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        class to use when drawing the control.  default is claro.  should be a dojo class theme, e.g.  claro, tundra, nihilo and soria
        </description>
      <name>classCss</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        if there should be a down arrow to click.  Default to false.  Generally this is useful only for 
        combos with less then a few hundred options
        </description>
      <name>hasDownArrow</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        search delay in ms defaults to 500
        </description>
      <name>searchDelay</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        the operation to call when filtering, relative to this page url to call
        </description>
      <name>filterOperation</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        the default value (will be submitted) which should appear in the combo box when drawn.  Will lookup the label via ajax
        </description>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        send more form element names to the filter operation, comma separated
        </description>
      <name>additionalFormElementNames</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>

  </tag>

  <tag>
    <description>
      Config form element
    </description>
    <name>configFormElement</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.ConfigFormElement
    </tag-class>
    <body-content>empty</body-content>
    
    <attribute>
      <description>
      	Config id for the element. It is used to generate name and id on the html field.  
      </description>
      <name>configId</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
       value to render inside the html field.
        </description>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
        Default value to append to the helper text.
        </description>
      <name>helperTextDefaultValue</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
        Number of levels to indent
        </description>
      <name>indent</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
      	Is the field read only  
      </description>
      <name>readOnly</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
      	Is the field required  
      </description>
      <name>required</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
      	Should the field be shown? default is true.
      </description>
      <name>shouldShow</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>

    <attribute>
      <description>
      	Should the EL checkbox be shown? default is true.
      </description>
      <name>shouldShowElCheckbox</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
      	Is the value of type expression language. Default is false.
      </description>
      <name>hasExpressionLanguage</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
      	helper text that shows under the html element
      </description>
      <name>helperText</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
      	Label for the field
      </description>
      <name>label</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
       Standard form element type from enum ConfigItemFormElement
        </description>
      <name>formElementType</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
        list of multikeys for dropdown
        </description>
      <name>valuesAndLabels</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
        list of multikeys for checkboxes
        </description>
      <name>checkboxAttributes</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
        ajax callback (on a dropdown)
        </description>
      <name>ajaxCallback</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
 
  </tag>
  
  <tag>
    <description>
      Prints out stem or folder location
    </description>
    <name>groupBreadcrumb</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GroupBreadcrumbTag
    </tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        Show current location label, defaults true
        </description>
      <name>showCurrentLocationLabel</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        Show leaf node, default true
        </description>
      <name>showLeafNode</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>

    <attribute>
      <description>
        Name of groupName or groupDisplayName
        </description>
      <name>groupName</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        Text in the label if not simpleMembershipUpdate.find.browse.here
        </description>
      <name>label</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        Show tooltips on folders
        </description>
      <name>showGrouperTooltips</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  
  <tag>
    <name>message</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperMessageTag</tag-class>
    <description>
        Maps key to localized message and performs parametric replacement, or just prints message
    </description>
    
    <attribute>
        <name>ignoreTooltipStyle</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>value</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>valueTooltipKey</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>valueTooltip</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>key</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>tooltipDisable</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>bundle</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>var</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>scope</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>tooltipRef</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>useNewTermContext</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>escapeSingleQuotes</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <description>
      Prints out paging labels or buttons
    </description>
    <name>paging</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperPagingTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        Ajax operation to call to refresh the list when a button is clicked
        </description>
      <name>refreshOperation</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        true for summary or false for buttons
        </description>
      <name>showSummaryOrButtons</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        name of pager (should be unique in the whole app)
        </description>
      <name>pagingName</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <description>
      Prints out paging labels or buttons, ui v2
    </description>
    <name>paging2</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperPagingTag2</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        form name must be unique on page, note, the id of the form will be this name with Id appended to the end
        </description>
      <name>formName</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        if there are extra form ids to submit with the paging, put it here
        </description>
      <name>ajaxFormIds</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        Ajax operation to call to refresh the list when a button is clicked
        </description>
      <name>refreshOperation</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        gui paging object has page number etc
      </description>
      <name>guiPaging</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <description>
      Performance gate.  Make an entry into a performance logger as screen draws
    </description>
    <name>performanceTimingGate</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperPerformanceTimingGateTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        Registered label must be expected
        </description>
      <name>label</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        key of timing gate should show up once in the operation being timed
        </description>
      <name>key</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <description>
      Prints out a subject icon
    </description>
    <name>subjectIcon</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.SubjectIconTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        Subject
        </description>
      <name>subject</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        Gui Subject
        </description>
      <name>guiSubject</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <name>param</name>
    <description>
        Supplies an argument for parametric replacement to a containing
        &lt;message&gt; tag
    </description>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperParamTag</tag-class>
    <body-content>JSP</body-content>
    <attribute>
        <name>value</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
    <tag>
    <name>infodot</name>
    <description>
        This will generate an infodot image which when clicked will hide/show some instructions
    </description>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperInfodotTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
        <name>hideShowHtmlId</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  
  <tag>
    <description>
      Creates a dhtmlx menu. If a context menu, you need something to attach the context click to,
      e.g.
      &lt;a id="advancedLink" href="#" class="smallLink" onclick="this.oncontextmenu(event);
      return false"&gt;Advanced&lt;/a&gt; </description>
    <name>menu</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperMenuTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
      <description>
        the id of the HTML element of the menu
        </description>
      <name>menuId</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        when events occur (onclick), then that operation is called via ajax
        </description>
      <name>operation</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        the operation called to define the structure of the menu
        </description>
      <name>structureOperation</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        true if context menu, false if not
        </description>
      <name>contextMenu</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <description>
        the jquery handle (e.g. #someId) which this menu should be attached to. note
        that any element you are attaching to must have an id attribute defined. Note
        this is not needed if this isnt a context menu
        </description>
      <name>contextZoneJqueryHandle</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>

  
    <tag>
    <name>subtitle</name>
    <!--  description>
        This will generate an infodot image which when clicked will hide/show some instructions
    </description -->
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperSubtitleTag</tag-class>
    <attribute>
      <name>infodotValue</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>key</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>label</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>param1</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>param2</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <name>title</name>
    <description>
      This will generate a title, and perhaps an infodot
    </description>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperTitleTag</tag-class>
    <attribute>
      <name>infodotValue</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>key</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>label</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>param1</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
      <name>param2</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
    <tag>
    <name>tooltip</name>
    <!--  description>
        This will generate an onmouseover which is a tooltip in an html element (e.g. image)
    </description -->
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperTooltipTag</tag-class>
    <body-content>empty</body-content>
    <attribute>
        <name>key</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>param1</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>param2</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
    <tag>
    <name>hideShowTarget</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperHideShowTarget</tag-class>
    <body-content>empty</body-content>
    <attribute>
        <name>hideShowHtmlId</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>showInitially</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
    <attribute>
        <name>omitStyle</name>
        <required>false</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  <tag>
    <name>browserPage</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperBrowserPage</tag-class>
    <body-content>empty</body-content>
    <attribute>
        <name>jspName</name>
        <required>true</required>
        <rtexprvalue>true</rtexprvalue>
    </attribute>
  </tag>
  
  <tag>
    <description>
      Provisioning object metadata item form element
    </description>
    <name>provisioningMetadataItemFormElement</name>
    <tag-class>edu.internet2.middleware.grouper.ui.tags.GrouperProvisioningObjectMetadataItemFormElement</tag-class>
    <body-content>empty</body-content>
    
    <attribute>
      <description>
        name for the field
        </description>
      <name>name</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>value to render inside the html field.</description>
      <name>value</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Object</type>
    </attribute>
    
    <attribute>
      <description>
      	Is the field required  
      </description>
      <name>required</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
      	Is the field read only  
      </description>
      <name>readOnly</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
      	description key that shows under the html element
      </description>
      <name>descriptionKey</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
      	Label key for the field
      </description>
      <name>labelKey</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
       Standard form element type from enum ConfigItemFormElement
        </description>
      <name>formElementType</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
        list of multikeys for dropdown
        </description>
      <name>valuesAndLabels</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
    
    <attribute>
      <description>
        ajax callback (on a dropdown)
        </description>
      <name>ajaxCallback</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
    </attribute>
 
  </tag>
  
  
  <function>
    <description>
      Abbreviate something if necessary.  3rd arg is if should put a tooltip in it with span tag.
      4th arg is if should escape html, probably should always be true
    </description>
    <name>abbreviate</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String abbreviate(java.lang.String, int, boolean, boolean)</function-signature>
    <example>
      ${grouper:abbreviate(something.somewhere, 20, true, true)}
    </example>
  </function>
  <function>
    <description>
      concat two strings
    </description>
    <name>concat2</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String concat2(java.lang.Object, java.lang.Object)</function-signature>
    <example>
      ${grouper:concat2(something.somewhere, 20)}
    </example>
  </function>
  <function>
    <description>
      concat three strings
    </description>
    <name>concat3</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String concat3(java.lang.Object, java.lang.Object, java.lang.Object)</function-signature>
    <example>
      ${grouper:concat3(30, something.somewhere, 20)}
    </example>
  </function>
  <function>
    <description>
      Escapes HTML/XML ( ampersand, lessthan, greater than, double quote)
    </description>
    <name>escapeHtml</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String escapeHtml(java.lang.String)
    </function-signature>
    <example>
      ${grouper:escapeHtml(someVar.someField)}
    </example>
  </function>
  
  <function>
    <description>
      Replace dot with underscore
    </description>
    <name>replaceDotWithUnderscore</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String replaceDotWithUnderscore(java.lang.String)
    </function-signature>
    <example>
      ${grouper:replaceDotWithUnderscore(someVar.someField)}
    </example>
  </function>
  
  <function>
    <description>
      Escapes XML ( ampersand, lessthan, greater than, double quote), and single quote with slash
    </description>
    <name>escapeJavascript</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String escapeJavascript(java.lang.String)
    </function-signature>
    <example>
      &lt;a onclick="alert('${grouper:escapeJavascript('somestuff')}'); return false;" ...
    </example>
  </function>
  <function>
    <description>
      Escapes URL
    </description>
    <name>escapeUrl</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String escapeUrl(java.lang.String)
    </function-signature>
    <example>
      &lt;a href="${grouper:escapeUrl(something)}" ...
    </example>
  </function>

  <function>
    <description>
      Formats a long date to a date for the screen based on the user's locale
    </description>
    <name>formatDateLong</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String formatDateLong(java.lang.Long)
    </function-signature>
    <example>
      ${grouper:formatDateLong(someGroup.createdOn)}
    </example>
  </function>

  <function>
    <description>
      If the string is null or blank
    </description>
    <name>isBlank</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>boolean isBlank(java.lang.String)
    </function-signature>
    <example>
      ${grouper:isBlank(someVar.someField)}
    </example>
  </function>

  <function>
    <description>
      If the user using the app has a certain privilege (or privilege that implies that privilege) on an object
    </description>
    <name>canHavePrivilege</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>boolean canHavePrivilege(edu.internet2.middleware.grouper.misc.GrouperObject, java.lang.String)
    </function-signature>
    <example>
      &lt;c:if test="${grouper:canHavePrivilege(owner, "ADMIN")}"&gt;
    </example>
  </function>

  <function>
    <description>
      Prints out appropriate styles (or none) for hide show. Note this will
      print a semi colon at end if something printed.
      Pass in the name of the hide show and
      whether or not it needs to show when showing.
    </description>
    <name>hideShowStyle</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String hideShowStyle(java.lang.String, boolean)
    </function-signature>
    <example>
      &lt;div style="${grouper:hideShowStyle('someName', true)}" ...
    </example>
  </function>
  <function>
    <description>
      Prints out appropriate button text for hide show.
      Pass in the name of the
      hide show.
    </description>
    <name>hideShowButtonText</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String hideShowButtonText(java.lang.String)</function-signature>
    <example>
      &lt;a href="#" onclick="onclick="return guiHideShow(event,
      'hideShowName');"&gt;${grouper:hideShowButtonText('hideShowName')}&lt;/a&gt;
    </example>
  </function>
  <function>
    <description>
      Capitalize fully a string, split by whitespace
    </description>
    <name>capitalizeFully</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String capitalizeFully(java.lang.String)
    </function-signature>
    <example>
      &lt;img alt="${grouper:capitalizeFully('some string')}" ...
    </example>
  </function>
  
   <function>
    <description>
      Change the title of the page. Use the externalized prefix. Pass in the externalized key of the title suffix.
    </description>
    <name>title</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String title(java.lang.String)
    </function-signature>
    <example>
      ${grouper:title('page.title.externalized.key')}
    </example>
  </function>
  
  <function>
    <description>
      Change the title of the page. Use the key and the text provided. 
    </description>
    <name>titleFromKeyAndText</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String titleFromKeyAndText(java.lang.String, java.lang.String)
    </function-signature>
    <example>
      ${grouper:titleFromKeyAndText('page.title.externalized.key', grouperRequestContainer.groupContainer.guiGroup.group.displayExtension)}
    </example>
  </function>
  
  <function>
    <description>
      Prints out a message from the nav bundle. String is the key, then boolean
      for if escape HTML,
      and then boolean for if escaping HTML, if single quotes should be
      escaped
    </description>
    <name>message</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String message(java.lang.String, boolean, boolean)
    </function-signature>
    <example>
      &lt;img alt="${grouper:message('some.key', true, false)}" ...
    </example>
  </function>
  <function>
    <description>
      Take in a member id, and return the gui subject label short 2 format for the subject
    </description>
    <name>subjectStringLabelShort2fromMemberId</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String subjectStringLabelShort2fromMemberId(java.lang.String)
    </function-signature>
    <example>
      ${grouper:subjectStringLabelShort2fromMemberId(group.creatorUuid)}
    </example>
  </function>
  <function>
    <description>
      Take a string that has parts that we zipped and base64, and unbase 64 and un-gzip
    </description>
    <name>zipUnBase64UnGzip</name>
    <function-class>edu.internet2.middleware.grouper.ui.tags.GrouperUiFunctions
    </function-class>
    <function-signature>String zipUnBase64UnGzip(java.lang.String)
    </function-signature>
    <example>
      ${grouper:zipUnBase64UnGzip(group.getError())}
    </example>
  </function>
  
</taglib>
