<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping
    PUBLIC "-//Hibernate/Hibernate Mapping DTD//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-2.0.dtd">

<!--
  Copyright 2004-2005 University Corporation for Advanced Internet Development, Inc.
  Copyright 2004-2005 The University Of Chicago

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0 

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!-- $Id: Stem.hbm.xml,v 1.2 2005-11-11 18:32:07 blair Exp $ -->

<hibernate-mapping package="edu.internet2.middleware.grouper">
  <class name="Stem" table="grouper_stems">

    <meta attribute="class-description">
A namespace within the Groups Registry.
@author blair christensen.
    </meta>
    <meta attribute="implement-equals">true</meta>
    <meta attribute="session-method">HibernateHelper.getSession();</meta>

    <!-- id -->
    <id name="id" 
        type="string" 
        unsaved-value="null"
    >
      <meta attribute="use-in-tostring">false</meta>
      <column name="id" sql-type="char(32)"/>
      <generator class="uuid.hex"/>
    </id>
    <!-- id -->
    <!-- version -->
<!--
    <version name="version"/>
-->
    <!-- version -->


    <!-- child_groups -->
<!-- 
TODO Disabled for now until I feel like dealing with this problem
     again.  Worst case I can find them easy enough on my own if
     need be.  Cascading updates may be another issue.
    <set  name="child_groups"
          inverse="true"
          cascade="save-update"
    >
      <meta attribute="field-description">
Get child groups.
      </meta>
      <key column="group_id"/>
      <one-to-many class="edu.internet2.middleware.grouper.Group"/>
    </set>
-->
    <!-- child_groups -->

    <!-- child_stems -->
<!-- 
TODO Disabled for now until I feel like dealing with this problem
     again.  Worst case I can find them easy enough on my own if
     need be.  Cascading updates may be another issue.
    <set name="child_stems" 
         inverse="true"
         cascade="save-update"
    >
      <meta attribute="field-description">
Get child stems.
      </meta>
      <key column="parent_stem"/>
      <one-to-many class="edu.internet2.middleware.grouper.Stem"/>
    </set>
-->
    <!-- child_stems -->

    <!-- creator_id -->
    <many-to-one
      name="creator_id"
      class="edu.internet2.middleware.grouper.Member" 
    >
      <meta attribute="field-description">
Get creator.
      </meta>
      <meta attribute="finder-method">findByCreator</meta>
      <meta attribute="use-in-equals">true</meta>
      <meta attribute="use-in-tostring">true</meta>
      <column name="creator_id" sql-type="char(64)"/>
    </many-to-one>
    <!-- creator_id -->

    <!-- create_source -->
    <property 
      name="create_source"
      type="string"
      length="255"
    >
      <meta attribute="field-description">
Get create source.
      </meta>
    </property>
    <!-- create_source -->

    <!-- create_time -->
    <property 
      name="create_time"
      type="long"
      not-null="true"
      update="false"
    >
      <meta attribute="field-description">
Get create time.
      </meta>
    </property>
    <!-- create_time -->

    <!-- description -->
    <property 
      name="stem_description"
      type="string"
      length="1024"
    >
      <meta attribute="field-description">
Get description.
      </meta>
    </property>
    <!-- description -->

    <!-- display_extension -->
    <property
      name="display_extension"
      type="string"
      length="255"
    >
      <meta attribute="field-description">
Get displayExtension.
      </meta>
    </property>
    <!-- display_extension -->

    <!-- display_name -->
    <property
      name="display_name"
      type="string"
      length="255"
    >
      <meta attribute="field-description">
Get displayName.
      </meta>
      <meta attribute="use-in-tostring">true</meta>
    </property>
    <!-- display_name -->

    <!-- extension -->
    <property
      name="stem_extension"
      type="string"
      length="255"
    >
      <meta attribute="field-description">
Get extension.
      </meta>
    </property>
    <!-- extension -->

    <!-- modifier_id -->
    <many-to-one
      name="modifier_id"
      class="edu.internet2.middleware.grouper.Member" 
    >
      <meta attribute="field-description">
Get modifier.
      </meta>
      <meta attribute="finder-method">findByModifier</meta>
      <meta attribute="use-in-equals">true</meta>
      <meta attribute="use-in-tostring">true</meta>
      <column name="modifier_id" sql-type="char(64)"/>
    </many-to-one>
    <!-- modifier_id -->

    <!-- modify_source -->
    <property 
      name="modify_source"
      type="string"
      length="255"
    >
      <meta attribute="field-description">
Get modify source.
      </meta>
    </property>
    <!-- modify_source -->

    <!-- modify_time -->
    <!-- modify_time -->
    <property 
      name="modify_time"
      type="long"
    >
      <meta attribute="class-description">
Get last modify time.
      </meta>
    </property>
    <!-- modify_time -->

    <!-- name -->
    <property
      name="stem_name"
      type="string"
      length="255"
    >
      <meta attribute="field-description">
Get name.
      </meta>
      <meta attribute="use-in-tostring">true</meta>
    </property>
    <!-- name -->

    <!-- parent_stem -->
    <!-- TODO I'll resolve this later -->
    <property name="parent_stem"
              type="string"
              not-null="true"
    >
      <column name="parent_stem" 
              sql-type="char(64)" 
      />
    </property>
    <!-- parent_stem -->

    <!-- stem_id -->
    <property 
      name="stem_id"
      type="string"
      length="64"
      not-null="true"
      unique="true"
    >
      <meta attribute="field-description">
Get UUID.
      </meta>
      <meta attribute="finder-method">findByStemId</meta>
      <meta attribute="use-in-equals">true</meta>
      <meta attribute="use-in-tostring">true</meta>
    </property>
    <!-- stem_id -->

  </class>
</hibernate-mapping>

