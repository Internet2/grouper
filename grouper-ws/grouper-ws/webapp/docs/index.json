{
  "swagger" : "2.0",
  "info" : {
    "description" : "Grouper Web Service operations.  Substitute vX_Y_AAA with the client version, e.g. v4_0_001.  Note: the base URL and authentication are institution specific.",
    "version" : "v4",
    "title" : "Grouper Web Services"
  },
  "host" : "grouper.institution.edu",
  "tags" : [ {
    "name" : "Grouper",
    "description" : "Integrate with the Grouper registry"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/grouper-ws/servicesRest/vA_A_MAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Acknowledge message",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "acknowledgeMessage",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMessageAcknowledgeResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_A_MEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Add member",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "addMember",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAddMemberResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_A_MEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Add member lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "addMemberLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "Id path in UI, groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "subjectSourceId",
          "in" : "formData",
          "description" : "the Id of the subjectSource of the person to be added",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "subjectIdentifier",
          "in" : "formData",
          "description" : "subjectIdentifier of entity to be added, mutually exclusive with subjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "subjectId",
          "in" : "formData",
          "description" : "subjectId of entity to be added, mutually exclusive with subjectIdentifier, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "fieldName",
          "in" : "formData",
          "description" : "If the member should be added to a certain field membership of the group",
          "required" : false,
          "type" : "String",
          "x-example" : "members, optin, optout, read, admin, update, view, groupAttrRead, groupAttrUpdate"
        }, {
          "name" : "enabledTime",
          "in" : "formData",
          "description" : "date this membership will be enabled (for future provisioning): yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "disabledTime",
          "in" : "formData",
          "description" : "date this membership will be disabled (for future provisioning): yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "addExternalSubjectIfNotFound",
          "in" : "formData",
          "description" : "T or F (default F), if this is a search by id or identifier, with no source, or the external source,and the subject is not found, then add an external subject (if the user is allowed) defaults to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAddMemberLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_D_ACF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attribute def actions",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributeDefActions",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefAssignActionResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_D_ANF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attribute def name inheritance",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributeDefNameInheritance",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributeDefNameInheritanceResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_D_ANL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attribute def name inheritance lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributeDefNameInheritanceLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "assign",
          "in" : "formData",
          "description" : "T to assign, F to remove assingment",
          "required" : true,
          "type" : "String",
          "x-example" : "F"
        }, {
          "name" : "attributeDefNameUuid",
          "in" : "formData",
          "description" : "Id of attributeDefName which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameName",
          "required" : true,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "attributeDefNameName",
          "in" : "formData",
          "description" : "name of attributeDefName which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameId",
          "required" : true,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        }, {
          "name" : "relatedAttributeDefNameUuid",
          "in" : "formData",
          "description" : "id of attribute def name to add or remove from inheritance from the container, mutually exclusive with relatedAttributeDefNameName",
          "required" : true,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "relatedAttributeDefNameName",
          "in" : "formData",
          "description" : "name of attribute def name to add or remove from inheritance from the container, mutually exclusive with relatedAttributeDefNameId",
          "required" : true,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributeDefNameInheritanceResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_E_ATF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attributes",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributes",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_E_ATG" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attributes batch",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributesBatch",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributesBatchResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_E_ATL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attributes lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "delegatable",
          "in" : "formData",
          "description" : "really only for permissions, if the assignee can delegate to someone else. TRUE|FALSE|GRANT. defaults to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "attributeAssignType",
          "in" : "formData",
          "description" : "Type of owner, from enum AttributeAssignType, e.g.group, member, stem, any_mem, imm_mem, attr_def, group_asgn, mem_asgn,stem_asgn, any_mem_asgn, imm_mem_asgn, attr_def_asgn ",
          "required" : false,
          "type" : "String",
          "x-example" : "group"
        }, {
          "name" : "wsAttributeDefNameId",
          "in" : "formData",
          "description" : "attribute def Uuid to assign to the owner, mutually exclusive with wsAttributeDefNameName",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsAttributeDefNameName",
          "in" : "formData",
          "description" : "name of attributeDefName which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameId",
          "required" : false,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        }, {
          "name" : "attributeAssignOperation",
          "in" : "formData",
          "description" : "operation to perform for attribute on owners, from enum AttributeAssignOperationassign_attr, add_attr, remove_attr",
          "required" : false,
          "type" : "String",
          "x-example" : "add_attr"
        }, {
          "name" : "attributeAssignValueOperation",
          "in" : "formData",
          "description" : "operation to perform for attribute value on attributeassignments: assign_value, add_value, remove_value, replace_values",
          "required" : false,
          "type" : "String",
          "x-example" : "assign_value"
        }, {
          "name" : "wsAttributeAssignId",
          "in" : "formData",
          "description" : "if you know the assign id you want, put id here",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsOwnerGroupName",
          "in" : "formData",
          "description" : "is name of the group to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "wsOwnerGroupId",
          "in" : "formData",
          "description" : "is id of the group to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsOwnerStemName",
          "in" : "formData",
          "description" : "is name of the stem to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        }, {
          "name" : "wsOwnerStemId",
          "in" : "formData",
          "description" : "is id of the stem to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        }, {
          "name" : "valueId",
          "in" : "formData",
          "description" : "If removing, and id is specified, will only remove values with that id",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "valueSystem",
          "in" : "formData",
          "description" : "is value to add, assign, remove, etc",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "valueFormatted",
          "in" : "formData",
          "description" : "is value to add, assign, remove, etc though not implemented yet",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignmentNotes",
          "in" : "formData",
          "description" : "notes on the assignment (optional)",
          "required" : false,
          "type" : "String"
        }, {
          "name" : "assignmentEnabledTime",
          "in" : "formData",
          "description" : "enabled time, or null for enabled now",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "assignmentDisabledTime",
          "in" : "formData",
          "description" : "disabled time, or null for not disabled",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "action",
          "in" : "formData",
          "description" : "to assign, or assign is the default if blank",
          "required" : false,
          "type" : "String",
          "x-example" : "assign"
        }, {
          "name" : "wsOwnerSubjectSourceId",
          "in" : "formData",
          "description" : "the Id of the subjectSource of subject to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "wsOwnerSubjectIdentifier",
          "in" : "formData",
          "description" : "subjectIdentifier of the subject to look in, mutually exclusive with wsOwnerSubjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "wsOwnerSubjectId",
          "in" : "formData",
          "description" : "subjectId of subject to look in, mutually exclusive with wsOwnerSubjectIdentifier, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "wsOwnerMembershipId",
          "in" : "formData",
          "description" : "to query attributes on immediate membership",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "wsOwnerMembershipAnyGroupName",
          "in" : "formData",
          "description" : "to query attributes in 'any' membership which is on immediate or effective membership",
          "required" : false,
          "type" : "String",
          "x-example" : "this:group:name"
        }, {
          "name" : "wsOwnerMembershipAnyGroupId",
          "in" : "formData",
          "description" : "to query attributes in 'any' membership which is on immediate or effective membership",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsOwnerMembershipAnySubjectId",
          "in" : "formData",
          "description" : "to query attributes in 'any' membership which is on immediate or effective membership",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsOwnerMembershipAnySubjectSourceId",
          "in" : "formData",
          "description" : "to query attributes in 'any' membership which is on immediate or effective membership",
          "required" : false,
          "type" : "String",
          "x-example" : "myInsitutionPeople"
        }, {
          "name" : "wsOwnerMembershipAnySubjectSourceId",
          "in" : "formData",
          "description" : "to query attributes in 'any' membership which is on immediate or effective membership",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "wsOwnerAttributeDefName",
          "in" : "formData",
          "description" : "to query attributes assigned on attribute def",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "wsOwnerAttributeDefId",
          "in" : "formData",
          "description" : "to query attributes assigned on attribute def",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsOwnerAttributeAssignId",
          "in" : "formData",
          "description" : "for assignment on assignment",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributesLiteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_G_PRF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign grouper privileges",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignGrouperPrivileges",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignGrouperPrivilegesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_G_PRL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign grouper privileges lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignGrouperPrivilegesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "subjectSourceId",
          "in" : "formData",
          "description" : "the Id of the subjectSource of the entity to have privileges assigned",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "subjectIdentifier",
          "in" : "formData",
          "description" : "subjectIdentifier of entity to have privileges assigned, mutually exclusive with subjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "subjectId",
          "in" : "formData",
          "description" : "subjectId of entity to have privileges assigned, mutually exclusive with subjectIdentifier, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "Id path in UI, groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return.If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated)",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "subjectSourceId",
          "in" : "formData",
          "description" : "the Id of the subjectSource of the person to assign privileges",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "subjectIdentifier",
          "in" : "formData",
          "description" : "subjectIdentifier of entity to have privileges assigned, mutually exclusive with subjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "subjectId",
          "in" : "formData",
          "description" : "subjectId of entity to have privileges assigned, mutually exclusive with subjectIdentifier, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "privilegeName",
          "in" : "formData",
          "description" : "Name of the privilege",
          "required" : false,
          "type" : "String",
          "x-example" : "for groups: read, view, update, admin, optin, optout, groupAttrRead, groupAttrUpdate.  for stems: create, stemAttrRead, stemAdmin, stemView, stemAttrUpdate"
        }, {
          "name" : "privilegeType",
          "in" : "formData",
          "description" : "Type of privilege, (e.g. access for groups and naming for stems)",
          "required" : false,
          "type" : "String",
          "x-example" : "access"
        }, {
          "name" : "stemUuid",
          "in" : "formData",
          "description" : "Id in UI, stemUuid search by stem uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "Id path in UI, stemName search by stem name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        }, {
          "name" : "allowed",
          "in" : "formData",
          "description" : "T|F is this is allowing the privilege, or denying it",
          "required" : true,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignGrouperPrivilegesLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_H_PRF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign permissions",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignPermissions",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignPermissionsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_H_PRL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign permissions lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignPermissionsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "permissionType",
          "in" : "formData",
          "description" : "is role or role_subject from the PermissionType enum",
          "required" : false,
          "type" : "String",
          "x-example" : "role"
        }, {
          "name" : "permissionDefNameName",
          "in" : "formData",
          "description" : "attribute def name to assign to the owner",
          "required" : true,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "permissionDefNameId",
          "in" : "formData",
          "description" : "attribute def id to assign to the owner",
          "required" : true,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "permissionAssignmentOperation",
          "in" : "formData",
          "description" : "operation to perform for permission on role or subject, from enum PermissionAssignOperation: assign_permission, remove_permission",
          "required" : false,
          "type" : "String",
          "x-example" : "assign_permission"
        }, {
          "name" : "assignmentNotes",
          "in" : "formData",
          "description" : "notes on the assignment (optional)",
          "required" : false,
          "type" : "String"
        }, {
          "name" : "assignmentEnabledTime",
          "in" : "formData",
          "description" : "enabled time, or null for enabled now",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "assignmentDisabledTime",
          "in" : "formData",
          "description" : "disabled time, or null for not disabled",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "delegatable",
          "in" : "formData",
          "description" : "really only for permissions, if the assignee can delegate to someone else. TRUE|FALSE|GRANT. defaults to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "wsAttributeAssignId",
          "in" : "formData",
          "description" : "if you know the assign id you want, put id here. lookup to remove etc",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "roleName",
          "in" : "formData",
          "description" : "is name of group to assign to for permissionType 'role'",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "roleId",
          "in" : "formData",
          "description" : "is id of group to assign to for permissionType 'role'",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "subjectRoleName",
          "in" : "formData",
          "description" : "is role name if assigning to subject, in the context of a role (for permissionType \"subject_role\")",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "subjectRoleId",
          "in" : "formData",
          "description" : "is role id if assigning to subject, in the context of a role (for permissionType \"subject_role\")",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "subjectRoleSubjectSourceId",
          "in" : "formData",
          "description" : "is subject source id if assigning to subject, in the context of a role (for permissionType \"subject_role\")",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "subjectRoleSubjectIdentifier",
          "in" : "formData",
          "description" : "is subject identifier if assigning to subject, in the context of a role (for permissionType \"subject_role\")",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "subjectRoleSubjectId",
          "in" : "formData",
          "description" : "is subject id if assigning to subject, in the context of a role (for permissionType \"subject_role\")",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "action",
          "in" : "formData",
          "description" : "to assign, or assign is the default if blank",
          "required" : false,
          "type" : "String",
          "x-example" : "assign"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        }, {
          "name" : "disallowed",
          "in" : "formData",
          "description" : "T or F if the permission is disallowed",
          "required" : false,
          "type" : "String",
          "x-example" : "T"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignPermissionsLiteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_I_DEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_I_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def delete lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefDeleteLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "wsNameOfAttributeDef",
          "in" : "formData",
          "description" : "name of attribute def to be deleted",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "wsIdOfAttributeDef",
          "in" : "formData",
          "description" : "Id of attribute def to be deleted",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsIdIndexOfAttributeDef",
          "in" : "formData",
          "description" : "Id index of attribute def to be deleted",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefDeleteLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_J_DEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def name delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefNameDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefNameDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_J_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def name delete lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefNameDeleteLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "attributeDefNameUuid",
          "in" : "formData",
          "description" : "Id of attributeDefName which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameName",
          "required" : true,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "attributeDefNameName",
          "in" : "formData",
          "description" : "name of attributeDefName which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameId",
          "required" : true,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefNameDeleteLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_K_SAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def name save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefNameSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefNameSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_K_SAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def name save lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefNameSaveLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "attributeDefNameLookupUuid",
          "in" : "formData",
          "description" : "Id of attributeDefName to edit, which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameLookupName",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "attributeDefNameLookupName",
          "in" : "formData",
          "description" : "Lookup name of attributeDefName which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameLookupUuId",
          "required" : false,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        }, {
          "name" : "attributeDefLookupUuid",
          "in" : "formData",
          "description" : "to lookup the attributeDef (mutually exclusive with attributeDefName)",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "attributeDefLookupName",
          "in" : "formData",
          "description" : "to lookup the attributeDef (mutually exclusive with attributeDefUuid)",
          "required" : false,
          "type" : "String",
          "x-example" : "some:folder:attributes:myAttributeDef"
        }, {
          "name" : "attributeDefNameUuid",
          "in" : "formData",
          "description" : "Id of attributeDefName which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameName",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "attributeDefNameName",
          "in" : "formData",
          "description" : "name of attributeDefName which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameId",
          "required" : false,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        }, {
          "name" : "saveMode",
          "in" : "formData",
          "description" : "if the save should be constrained to INSERT, UPDATE, or INSERT_OR_UPDATE (default)",
          "required" : false,
          "type" : "String",
          "x-example" : "INSERT"
        }, {
          "name" : "displayExtension",
          "in" : "formData",
          "description" : "display name of the attributeDefName, empty will be ignored",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "of the attributeDefName, empty will be ignored",
          "required" : false,
          "type" : "String"
        }, {
          "name" : "createParentStemsIfNotExist",
          "in" : "formData",
          "description" : "T or F (default F) if parent stems should be created if not exist",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefNameSaveLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_L_SAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_L_SAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def save lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefSaveLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "attributeDefLookupUuid",
          "in" : "formData",
          "description" : "to lookup the attributeDef (mutually exclusive with attributeDefName)",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "attributeDefLookupName",
          "in" : "formData",
          "description" : "to lookup the attributeDef (mutually exclusive with attributeDefUuid)",
          "required" : false,
          "type" : "String",
          "x-example" : "some:folder:attributes:myAttributeDef"
        }, {
          "name" : "createParentStemsIfNotExist",
          "in" : "formData",
          "description" : "T or F (default F) if parent stems should be created if not exist",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "saveMode",
          "in" : "formData",
          "description" : "if the save should be constrained to INSERT, UPDATE, or INSERT_OR_UPDATE (default)",
          "required" : false,
          "type" : "String",
          "x-example" : "INSERT"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "of the attributeDef, empty will be ignored",
          "required" : false,
          "type" : "String"
        }, {
          "name" : "valueType",
          "in" : "formData",
          "description" : "what type of value on assignments: AttributeDefValueType: e.g. integer, timestamp, string, floating, marker, memberId",
          "required" : false,
          "type" : "String",
          "x-example" : "marker"
        }, {
          "name" : "multiValued",
          "in" : "formData",
          "description" : "T or F, if has values, if can assign multiple values to one assignment",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "multiAssignable",
          "in" : "formData",
          "description" : "T of F for if can be assigned multiple times to one object",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "attributeDefType",
          "in" : "formData",
          "description" : "null for all, or specify an AttributeDefType e.g. attr, limit, service, type, limit, perm",
          "required" : false,
          "type" : "String",
          "x-example" : "attr"
        }, {
          "name" : "assignToStemAssignment",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToStem",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToMemberAssignment",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToMember",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToImmediateMembershipAssignment",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToImmediateMembership",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToGroupAssignment",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToGroup",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToEffectiveMembershipAssignment",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToEffectiveMembership",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToAttributeDefAssignment",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "assignToAttributeDef",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefSaveLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vD_M_EMF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Delete member",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "deleteMember",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsDeleteMemberResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vD_M_EML" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Delete member lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "deleteMemberLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "subjectSourceId",
          "in" : "formData",
          "description" : "the Id of the subjectSource of the entitity to be deleted",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "subjectIdentifier",
          "in" : "formData",
          "description" : "subjectIdentifier of entity to be deleted, mutually exclusive with subjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "subjectId",
          "in" : "formData",
          "description" : "subjectId of entity to be deleted, mutually exclusive with subjectIdentifier, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "Id path in UI, groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        }, {
          "name" : "fieldName",
          "in" : "formData",
          "description" : "If the member should be deleted from a certain field membership of the group",
          "required" : false,
          "type" : "String",
          "x-example" : "members, optin, optout, read, admin, update, view, groupAttrRead, groupAttrUpdate"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsDeleteMemberLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vE_G_TEM" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Execute GSH template",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "executeGshTemplate",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGshTemplateExecResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vE_S_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "External subject delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "externalSubjectDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsExternalSubjectDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vE_S_SAV" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "External subject save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "externalSubjectSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsExternalSubjectSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_A_DNF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find attribute def names",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findAttributeDefNames",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindAttributeDefNamesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_A_DNL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find attribute def names lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findAttributeDefNamesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "sortString",
          "in" : "formData",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension",
          "required" : false,
          "type" : "String",
          "x-example" : "name | displayName | extension | displayExtension"
        }, {
          "name" : "ascending",
          "in" : "formData",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "subjectSourceId",
          "in" : "formData",
          "description" : "the Id of the subjectSource of the entity",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "subjectIdentifier",
          "in" : "formData",
          "description" : "subjectIdentifier of entity, mutually exclusive with subjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "subjectId",
          "in" : "formData",
          "description" : "subjectId of entity, mutually exclusive with subjectIdentifier, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "attributeAssignType",
          "in" : "formData",
          "description" : "Type of owner, from enum AttributeAssignType, e.g.group, member, stem, any_mem, imm_mem, attr_def, group_asgn, mem_asgn,stem_asgn, any_mem_asgn, imm_mem_asgn, attr_def_asgn ",
          "required" : false,
          "type" : "String",
          "x-example" : "group"
        }, {
          "name" : "attributeDefNameUuid",
          "in" : "formData",
          "description" : "to lookup an attribute def name by id, mutually exclusive with attributeDefNameName",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "attributeDefNameName",
          "in" : "formData",
          "description" : "to lookup an attribute def name by name, mutually exclusive with attributeDefNameId",
          "required" : false,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        }, {
          "name" : "wsInheritanceSetRelation",
          "in" : "formData",
          "description" : "if there is one wsAttributeDefNameLookup, and this is specified, then findthe attribute def names which are related to the lookup by this relation, e.g. IMPLIED_BY_THIS,IMPLIED_BY_THIS_IMMEDIATE, THAT_IMPLY_THIS, THAT_IMPLY_THIS_IMMEDIATE",
          "required" : false,
          "type" : "String",
          "x-example" : "IMPLIED_BY_THIS"
        }, {
          "name" : "scope",
          "in" : "formData",
          "description" : "search string with % as wildcards will search name, display name, description",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "splitScope",
          "in" : "formData",
          "description" : "T or F, if T will split the scope by whitespace, and find attribute def names with each token.e.g. if you have a scope of \"pto permissions\", and split scope T, it will returnschool:apps:pto_app:internal:the_permissions:whatever",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "scope",
          "in" : "formData",
          "description" : "is a DB pattern that will have % appended to it, or null for all",
          "required" : false,
          "type" : "String",
          "x-example" : "school:whatever:parent"
        }, {
          "name" : "splitScope",
          "in" : "formData",
          "description" : "T or F, if T will split the scope by whitespace, and find attribute def names with each token.e.g. if you have a scope of \"pto permissions\", and split scope T, it will return school:apps:pto_app:internal:the_permissions:whatever",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "uuidOfAttributeDef",
          "in" : "formData",
          "description" : "find names associated with this attribute definition, mutually exclusive with nameOfAttributeDef",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "nameOfAttributeDef",
          "in" : "formData",
          "description" : "find names associated with this attribute definition, mutually exclusive with idOfAttributeDef",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "attributeAssignType",
          "in" : "formData",
          "description" : "where can the attribute definition be assigned, e.g. any_mem, any_mem_asgn, attr_def,attr_def_asgn, group, group_asgn, imm_mem, imm_mem_asgn, mem_asgn, member, stem, stem_asgn ",
          "required" : false,
          "type" : "String",
          "x-example" : "group"
        }, {
          "name" : "attributeDefType",
          "in" : "formData",
          "description" : "null for all, or specify an AttributeDefType e.g. attr, limit, service, type, limit, perm",
          "required" : false,
          "type" : "String",
          "x-example" : "attr"
        }, {
          "name" : "attributeDefNameUuid",
          "in" : "formData",
          "description" : "to lookup an attribute def name by id, mutually exclusive with attributeDefNameName",
          "required" : true,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "attributeDefNameName",
          "in" : "formData",
          "description" : "to lookup an attribute def name by name, mutually exclusive with attributeDefNameName",
          "required" : true,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        }, {
          "name" : "serviceRole",
          "in" : "formData",
          "description" : "to filter attributes that a user has a certain role",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindAttributeDefNamesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_A_DSF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find attribute defs",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findAttributeDefs",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindAttributeDefsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_A_DSL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find attribute defs lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findAttributeDefsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "sortString",
          "in" : "formData",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension",
          "required" : false,
          "type" : "String",
          "x-example" : "name | displayName | extension | displayExtension"
        }, {
          "name" : "ascending",
          "in" : "formData",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "privilegeName",
          "in" : "formData",
          "description" : "Name of the privilege",
          "required" : false,
          "type" : "String",
          "x-example" : "for groups: read, view, update, admin, optin, optout, groupAttrRead, groupAttrUpdate.  for stems: create, stemAttrRead, stemAdmin, stemView, stemAttrUpdate"
        }, {
          "name" : "scope",
          "in" : "formData",
          "description" : "search string with % as wildcards will search name, display name, description",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "splitScope",
          "in" : "formData",
          "description" : "T or F, if T will split the scope by whitespace, and find attribute def names with each token.e.g. if you have a scope of \"pto permissions\", and split scope T, it will returnschool:apps:pto_app:internal:the_permissions:whatever",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "uuidOfAttributeDef",
          "in" : "formData",
          "description" : "find attribute defs associated with this attribute def uuid, mutually exclusive with nameOfAttributeDef",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "nameOfAttributeDef",
          "in" : "formData",
          "description" : "find attribute defs associated with this attribute def name, mutually exclusive with idOfAttributeDef",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "idIndexOfAttributeDef",
          "in" : "formData",
          "description" : "find attribute defs associated with this attribute def id index",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "stemScope",
          "in" : "formData",
          "description" : "is if in this stem, or in any stem underneath. You must pass stemScope if you pass a stem",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "parentStemId",
          "in" : "formData",
          "description" : "will return sattribute defs in this stem",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "findbyUuidOrName",
          "in" : "formData",
          "description" : "!!",
          "required" : false,
          "type" : "String",
          "x-example" : "!"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindAttributeDefsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_E_SUB" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find external subjects",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findExternalSubjects",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindExternalSubjectsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_G_UPF/groups" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find groups",
        "description" : "<b>Sample 1</b>: Find by substring in a folder<br /><pre>POST /grouper-ws/servicesRest/v2_6_001/groups<br />{<br>  &quot;WsRestFindGroupsRequest&quot;:{<br>    &quot;wsQueryFilter&quot;:{<br>      &quot;queryFilterType&quot;:&quot;FIND_BY_GROUP_NAME_APPROXIMATE&quot;,<br>      &quot;stemName&quot;:&quot;aStem&quot;,<br>      &quot;groupName&quot;:&quot;aGr&quot;<br>    }<br>  }<br>}</pre>",
        "operationId" : "findGroups",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WsRestFindGroupsRequestWrapper"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapper"
            }
          },
          "400" : {
            "description" : "INVALID_QUERY",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          },
          "404" : {
            "description" : "STEM_NOT_FOUND",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          },
          "500" : {
            "description" : "EXCEPTION",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_G_UPL/groups" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find groups lite",
        "description" : "<b>Sample 1</b>: Find by substring in a folder<br /><pre>POST /grouper-ws/servicesRest/v2_6_001/groups<br /><b>wsLiteObjectType</b>=WsRestFindGroupsLiteRequest&amp;<b>groupName</b>=aGr&amp;<b>queryFilterType</b>=FIND_BY_GROUP_NAME_APPROXIMATE&amp;<b>stemName</b>=aStem</pre>",
        "operationId" : "findGroupsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "queryFilterType",
          "in" : "formData",
          "description" : "findGroupType is the WsQueryFilterType enum for which type of find is happening: e.g. FIND_BY_GROUP_UUID, FIND_BY_GROUP_NAME_EXACT, FIND_BY_STEM_NAME, FIND_BY_APPROXIMATE_ATTRIBUTE, FIND_BY_ATTRIBUTE,  FIND_BY_GROUP_NAME_APPROXIMATE, FIND_BY_TYPE, AND, OR, MINUS",
          "required" : false,
          "type" : "String",
          "x-example" : "FIND_BY_GROUP_UUID | FIND_BY_GROUP_NAME_EXACT | FIND_BY_STEM_NAME | FIND_BY_APPROXIMATE_ATTRIBUTE | FIND_BY_ATTRIBUTE | FIND_BY_GROUP_NAME_APPROXIMATE | FIND_BY_TYPE | AND | OR | MINUS"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "Will return groups only in this stem (by name)",
          "required" : false,
          "type" : "String",
          "x-example" : "some:parent:folder:name"
        }, {
          "name" : "stemNameScope",
          "in" : "formData",
          "description" : "if searching by stem, ONE_LEVEL is for one level, ALL_IN_SUBTREE will return all in sub tree. Default is ALL_IN_SUBTREE",
          "required" : false,
          "type" : "String",
          "x-example" : "ONE_LEVEL | ALL_IN_SUBTREE"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "groupAttributeName",
          "in" : "formData",
          "description" : "This is the attribute name, or null for search all attributes.  This could be a legacy attribute or an attributeDefName of a string valued attribute",
          "required" : false,
          "type" : "String",
          "x-example" : "some:attribute:name"
        }, {
          "name" : "groupAttributeValue",
          "in" : "formData",
          "description" : "The attribute value to filter on if querying by attribute and value",
          "required" : false,
          "type" : "String",
          "x-example" : "someValue"
        }, {
          "name" : "groupTypeName",
          "in" : "formData",
          "description" : "not implemented",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "sortString",
          "in" : "formData",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension",
          "required" : false,
          "type" : "String",
          "x-example" : "name | displayName | extension | displayExtension"
        }, {
          "name" : "ascending",
          "in" : "formData",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "typeOfGroups",
          "in" : "formData",
          "description" : "Comma separated type of groups can be an enum of TypeOfGroup, e.g. group, role, entity",
          "required" : false,
          "type" : "String",
          "x-example" : "group|role|entity"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "enabled",
          "in" : "formData",
          "description" : "enabled is A for all, T or null for enabled only, F for disabled",
          "required" : false,
          "type" : "String",
          "x-example" : "A|T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapper"
            }
          },
          "400" : {
            "description" : "INVALID_QUERY",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          },
          "404" : {
            "description" : "STEM_NOT_FOUND",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          },
          "500" : {
            "description" : "EXCEPTION",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_S_EMF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find stems",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findStems",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindStemsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_S_EML" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find stems lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findStemsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "stemUuid",
          "in" : "formData",
          "description" : "Id in UI, stemUuid search by stem uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "Id path in UI, stemName search by stem name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        }, {
          "name" : "stemAttributeName",
          "in" : "formData",
          "description" : "if searching by attribute, this is name,or null for all attributes",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "stemAttributeValue",
          "in" : "formData",
          "description" : "if searching by attribute, this is the value",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "parentStemName",
          "in" : "formData",
          "description" : "will return stems in this stem. can be used with various query types",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        }, {
          "name" : "parentStemNameScope",
          "in" : "formData",
          "description" : "if searching by stem, ONE_LEVEL is for one level,ALL_IN_SUBTREE will return all in sub tree. Required ifsearching by stem",
          "required" : false,
          "type" : "String",
          "x-example" : "ONE_LEVEL"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "stemQueryFilterType",
          "in" : "formData",
          "description" : "findStemType is the WsFindStemType enum for whichtype of find is happening: e.g.FIND_BY_STEM_UUID, FIND_BY_STEM_NAME, FIND_BY_PARENT_STEM_NAME, FIND_BY_APPROXIMATE_ATTRIBUTE, FIND_BY_STEM_NAME_APPROXIMATEAND, OR, MINUS;",
          "required" : false,
          "type" : "String",
          "x-example" : "FIND_BY_STEM_NAME"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindStemsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_AAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get attribute assign actions",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAttributeAssignActions",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAttributeAssignActionsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_ABF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get attribute assignments",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAttributeAssignments",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAttributeAssignmentsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_ABL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get attribute assign actions lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAttributeAssignActionsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "action",
          "in" : "formData",
          "description" : "action to query, or none to query all actions",
          "required" : false,
          "type" : "String",
          "x-example" : "read"
        }, {
          "name" : "wsNameOfAttributeDef",
          "in" : "formData",
          "description" : "find assignActions in this attribute def",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "wsIdOfAttributeDef",
          "in" : "formData",
          "description" : "find assignActions in this attribute def",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsIdIndexOfAttributeDef",
          "in" : "formData",
          "description" : "find assignActions in this attribute def",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAttributeAssignActionsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_AEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get audit entries",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAuditEntries",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAuditEntriesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_AEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get audit entries lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAuditEntriesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pointInTimeFrom",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "pointInTimeTo",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "ascending",
          "in" : "formData",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "sortString",
          "in" : "formData",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension",
          "required" : false,
          "type" : "String",
          "x-example" : "name | displayName | extension | displayExtension"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAuditEntriesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_GPL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get grouper privileges lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getGrouperPrivilegesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        }, {
          "name" : "privilegeName",
          "in" : "formData",
          "description" : "Name of the privilege",
          "required" : false,
          "type" : "String",
          "x-example" : "for groups: read, view, update, admin, optin, optout, groupAttrRead, groupAttrUpdate.  for stems: create, stemAttrRead, stemAdmin, stemView, stemAttrUpdate"
        }, {
          "name" : "privilegeType",
          "in" : "formData",
          "description" : "Type of privilege, (e.g. access for groups and naming for stems)",
          "required" : false,
          "type" : "String",
          "x-example" : "access"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetGrouperPrivilegesLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_GRF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get groups",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getGroups",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetGroupsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_GRL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get groups lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getGroupsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "enabled",
          "in" : "formData",
          "description" : "enabled is A for all, T or null for enabled only, F for disabled",
          "required" : false,
          "type" : "String",
          "x-example" : "A|T|F"
        }, {
          "name" : "fieldName",
          "in" : "formData",
          "description" : "If the member is added to a certain field membership of the group",
          "required" : false,
          "type" : "String",
          "x-example" : "members, optin, optout, read, admin, update, view, groupAttrRead, groupAttrUpdate"
        }, {
          "name" : "pointInTimeFrom",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "pointInTimeTo",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "memberFilter",
          "in" : "formData",
          "description" : "can be All(default), Effective (non immediate), Immediate (direct),Composite (if composite group with group math (union, minus,etc)",
          "required" : false,
          "type" : "String",
          "x-example" : "Effective"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        }, {
          "name" : "scope",
          "in" : "formData",
          "description" : "is a DB pattern that will have % appended to it, or null for all",
          "required" : false,
          "type" : "String",
          "x-example" : "school:whatever:parent"
        }, {
          "name" : "stemScope",
          "in" : "formData",
          "description" : "is ONE_LEVEL if in this stem, or ALL_IN_SUBTREE for any stem underneath. You must pass stemScope if you pass a stem",
          "required" : false,
          "type" : "String",
          "x-example" : "ONE_LEVEL"
        }, {
          "name" : "subjectSourceId",
          "in" : "formData",
          "description" : "the Id of the subjectSource to be added",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "subjectIdentifier",
          "in" : "formData",
          "description" : "subjectIdentifier to be added, mutually exclusive with subjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "subjectId",
          "in" : "formData",
          "description" : "subjectId to be added, mutually exclusive with subjectIdentifier, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "stemUuid",
          "in" : "formData",
          "description" : "Id in UI, stemUuid search by stem uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "Id path in UI, stemName search by stem name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetGroupsLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_MEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get memebers",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getMembers",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetMembersResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_MEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get members lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getMembersLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "fieldName",
          "in" : "formData",
          "description" : "If the member is part of a certain field membership of the group",
          "required" : false,
          "type" : "String",
          "x-example" : "members, optin, optout, read, admin, update, view, groupAttrRead, groupAttrUpdate"
        }, {
          "name" : "pointInTimeFrom",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "pointInTimeTo",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "memberFilter",
          "in" : "formData",
          "description" : "can be All(default), Effective (non immediate), Immediate (direct),Composite (if composite group with group math (union, minus,etc)",
          "required" : false,
          "type" : "String",
          "x-example" : "Effective"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetMembersLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_MSF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get memberships",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getMemberships",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetMembershipsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_MSL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get memberships lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getMembershipsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "enabled",
          "in" : "formData",
          "description" : "enabled is A for all, T or null for enabled only, F for disabled",
          "required" : false,
          "type" : "String",
          "x-example" : "A|T|F"
        }, {
          "name" : "fieldName",
          "in" : "formData",
          "description" : "If the member is added to a certain field membership of the group",
          "required" : false,
          "type" : "String",
          "x-example" : "members, optin, optout, read, admin, update, view, groupAttrRead, groupAttrUpdate"
        }, {
          "name" : "fieldType",
          "in" : "formData",
          "description" : "is the type of field to look at",
          "required" : false,
          "type" : "String",
          "x-example" : "list (default, memberships),access (privs on groups), attribute_def (privs on attribute definitions), naming (privs on folders)"
        }, {
          "name" : "pointInTimeFrom",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "pointInTimeTo",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "sourceId",
          "in" : "formData",
          "description" : "sourceId of subject to search for memberships, or null to not restrict",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "sourceIds",
          "in" : "formData",
          "description" : "are comma separated sourceIds",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson, schoolIndividual"
        }, {
          "name" : "subjectIdentifier",
          "in" : "formData",
          "description" : "Identifier of subject to search for memberships, or null to not restrict",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "subjectId",
          "in" : "formData",
          "description" : "Id of subject to search for memberships, or null to not restrict",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "wsMemberFilter",
          "in" : "formData",
          "description" : "can be All(default), Effective (non immediate), Immediate (direct),Composite",
          "required" : false,
          "type" : "String",
          "x-example" : "Effective"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        }, {
          "name" : "scope",
          "in" : "formData",
          "description" : "is a sql like string which will have a percent % concatenated to the end for groupnames to search in (or stem names)",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "Name of stem to limit the search to (in or under)",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        }, {
          "name" : "stemUuid",
          "in" : "formData",
          "description" : "Id of stem to limit the search to (in or under)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "stemScope",
          "in" : "formData",
          "description" : "is ONE_LEVEL if in this stem, or ALL_IN_SUBTREE for any stem underneath. You must pass stemScope if you pass a stem",
          "required" : false,
          "type" : "String",
          "x-example" : "ONE_LEVEL"
        }, {
          "name" : "membershipIds",
          "in" : "formData",
          "description" : "comma separated list of membershipIds to retrieve",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "ownerStemUuid",
          "in" : "formData",
          "description" : "if looking for privileges on stems, put the stem uuid here",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "ownerStemName",
          "in" : "formData",
          "description" : "if looking for privileges on stems, put the stem name to look for here",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        }, {
          "name" : "nameOfOwnerAttributeDef",
          "in" : "formData",
          "description" : "if looking for privileges on attribute definitions, put the name of the attribute definition here",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "ownerAttributeDefUuid",
          "in" : "formData",
          "description" : "if looking for privileges on attribute definitions, put the uuid of the attribute definition here",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "serviceRole",
          "in" : "formData",
          "description" : "to filter attributes that a user has a certain role",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "serviceId",
          "in" : "formData",
          "description" : "if filtering by users in a service, then this is the service to look in, mutually exclusive with serviceName",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "serviceName",
          "in" : "formData",
          "description" : "if filtering by users in a service, then this is the service to look in, mutually exclusive with serviceId",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "sortString",
          "in" : "formData",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension",
          "required" : false,
          "type" : "String",
          "x-example" : "name | displayName | extension | displayExtension"
        }, {
          "name" : "ascending",
          "in" : "formData",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageSizeForMember",
          "in" : "formData",
          "description" : "Page size if paging in the members part",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumberForMember",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging for the mebers part",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "sortStringForMember",
          "in" : "formData",
          "description" : "must be an hql query field, e.g.can sort on uuid, subjectId, sourceId, sourceString0, sortString1, sortString2, sortString3, sortString4, name, descriptionin the members part",
          "required" : false,
          "type" : "String",
          "x-example" : "name | displayName | extension | displayExtensionForMember"
        }, {
          "name" : "ascendingForMember",
          "in" : "formData",
          "description" : "T or null for ascending, F for descending for members  part.  If you pass true or false, must pass a sort string",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursorForMember",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging for members part",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorFieldForMember",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging in members part",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldTypeForMember",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp, in members part",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrievedForMember",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pointInTimeFrom",
          "in" : "formData",
          "description" : "To query permissions at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "pointInTimeTo",
          "in" : "formData",
          "description" : "To query permission at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "pointInTimeRetrieve",
          "in" : "formData",
          "description" : "true means retrieve point in time records",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetMembershipsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_PAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get permission assignments",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getPermissionAssignments",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetPermissionAssignmentsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_PAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get permission assignments lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getPermissionAssignmentsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includePermissionDetail",
          "in" : "formData",
          "description" : "T or F for if the permission details should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "action",
          "in" : "formData",
          "description" : "to assign, or assign is the default if blank",
          "required" : false,
          "type" : "String",
          "x-example" : "assign"
        }, {
          "name" : "wsAttributeDefNameId",
          "in" : "formData",
          "description" : "attribute def Uuid to assign to the owner, mutually exclusive with wsAttributeDefNameName",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsAttributeDefNameName",
          "in" : "formData",
          "description" : "name of attributeDefName which is the container for the inherited attribute def names, mutually exclusive with attributeDefNameId",
          "required" : false,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        }, {
          "name" : "wsAttributeDefName",
          "in" : "formData",
          "description" : "find assignments in this attribute def",
          "required" : false,
          "type" : "String",
          "x-example" : "some:folder:attributes:nameOfMyAttributeDef"
        }, {
          "name" : "wsAttributeDefId",
          "in" : "formData",
          "description" : "find assignments in this attribute def",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "roleName",
          "in" : "formData",
          "description" : "Id of role to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "roleId",
          "in" : "formData",
          "description" : "Name of role to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "wsSubjectSourceId",
          "in" : "formData",
          "description" : "the Id of the subjectSource of the person to be added",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "wsSubjectIdentifier",
          "in" : "formData",
          "description" : "Identifier of subject to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "wsSubjectId",
          "in" : "formData",
          "description" : "Id of subject to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "wsSubjectId",
          "in" : "formData",
          "description" : "Id of subject to look in",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "includeAttributeDefNames",
          "in" : "formData",
          "description" : "T or F for if attributeDefName objects should be returned",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeAttributeAssignments",
          "in" : "formData",
          "description" : "T or F for if attributeDefName objects should be returned",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeAssignmentsOnAssignments",
          "in" : "formData",
          "description" : "if this is not querying assignments on assignments directly, but the assignmentsand assignments on those assignments should be returned, enter true. default to false.",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeAttributeAssignments",
          "in" : "formData",
          "description" : "T or F for if attributeDefName objects should be returned",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        }, {
          "name" : "enabled",
          "in" : "formData",
          "description" : "enabled is A for all, T or null for enabled only, F for disabled",
          "required" : false,
          "type" : "String",
          "x-example" : "A|T|F"
        }, {
          "name" : "pointInTimeFrom",
          "in" : "formData",
          "description" : "To query permissions at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "pointInTimeTo",
          "in" : "formData",
          "description" : "To query permissions at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "immediateOnly",
          "in" : "formData",
          "description" : "T of F (defaults to F) if we should filter out non immediate permissions",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "permissionType",
          "in" : "formData",
          "description" : "are we looking for role permissions or subject permissions? fromenum PermissionType: role, or role_subject. defaults to role_subject permissions",
          "required" : false,
          "type" : "String",
          "x-example" : "role"
        }, {
          "name" : "permissionProcessor",
          "in" : "formData",
          "description" : "if we should find the best answer, or process limits, etc. From the enumPermissionProcessor. example values are: FILTER_REDUNDANT_PERMISSIONS,FILTER_REDUNDANT_PERMISSIONS_AND_PROCESS_LIMITS, FILTER_REDUNDANT_PERMISSIONS_AND_ROLES,FILTER_REDUNDANT_PERMISSIONS_AND_ROLES_AND_PROCESS_LIMITS, PROCESS_LIMITS",
          "required" : false,
          "type" : "String",
          "x-example" : "PROCESS_LIMITS"
        }, {
          "name" : "limitEnvVarName0",
          "in" : "formData",
          "description" : "limitEnvVars if processing limits, pass in a set of limits. The name is thename of the variable, and the value is the value. Note, you can typecast thevalues by putting a valid type in parens in front of the param name",
          "required" : false,
          "type" : "String",
          "x-example" : "(int)amount"
        }, {
          "name" : "limitEnvVarValue0",
          "in" : "formData",
          "description" : "first limit env var value",
          "required" : false,
          "type" : "String",
          "x-example" : "50"
        }, {
          "name" : "limitEnvVarType0",
          "in" : "formData",
          "description" : "first limit env var type",
          "required" : false,
          "type" : "String",
          "x-example" : "int"
        }, {
          "name" : "limitEnvVarName1",
          "in" : "formData",
          "description" : "second limit env var name",
          "required" : false,
          "type" : "String",
          "x-example" : "amount"
        }, {
          "name" : "limitEnvVarValue1",
          "in" : "formData",
          "description" : "second limit env var value",
          "required" : false,
          "type" : "String",
          "x-example" : "50"
        }, {
          "name" : "limitEnvVarType1",
          "in" : "formData",
          "description" : "second limit env var type",
          "required" : false,
          "type" : "String",
          "x-example" : "int"
        }, {
          "name" : "includeLimits",
          "in" : "formData",
          "description" : "T or F (default to F) for if limits should be returned with the results.Note that the attributeDefs, attributeDefNames, and attributeAssignments will be added to those lists",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetPermissionAssignmentsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_SUF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get subjects",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getSubjects",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetSubjectsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_SUL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get subjects lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getSubjectsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "sourceId",
          "in" : "formData",
          "description" : "the Id of the subject to be found",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "subjectIdentifier",
          "in" : "formData",
          "description" : "Identifier of the subject to be found, mutually exclusive with subjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "subjectId",
          "in" : "formData",
          "description" : "Id of subject to be found, mutually exclusive with subjectIdentifier, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "fieldName",
          "in" : "formData",
          "description" : "If the entity added to a certain field membership of the group",
          "required" : false,
          "type" : "String",
          "x-example" : "members, optin, optout, read, admin, update, view, groupAttrRead, groupAttrUpdate"
        }, {
          "name" : "searchString",
          "in" : "formData",
          "description" : "free form string query to find a list of subjects (exact behavior depends on source)",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "sourceIds",
          "in" : "formData",
          "description" : "are comma separated sourceIds for a searchString",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "wsMemberFilter",
          "in" : "formData",
          "description" : "can be All(default), Effective (non immediate), Immediate (direct),Composite (if composite group with group math (union, minus,etc)",
          "required" : false,
          "type" : "String",
          "x-example" : "Effective"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetSubjectsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_R_DEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Group delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "groupDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGroupDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_R_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Group delete lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "groupDeleteLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "Id path in UI, groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGroupDeleteLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_R_SAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Group save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "groupSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGroupSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_R_SAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Group save lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "groupSaveLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "Id path in UI, groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "saveMode",
          "in" : "formData",
          "description" : "if the save should be constrained to INSERT, UPDATE, or INSERT_OR_UPDATE (default)",
          "required" : false,
          "type" : "String",
          "x-example" : "INSERT"
        }, {
          "name" : "groupLookupUuid",
          "in" : "formData",
          "description" : "the uuid of the group to edit (mutually exclusive with groupLookupName)",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "groupLookupName",
          "in" : "formData",
          "description" : "the name of the group to edit (mutually exclusive with groupLookupUuid)",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "displayExtension",
          "in" : "formData",
          "description" : "display name of the group, empty will be ignored",
          "required" : false,
          "type" : "String"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "descirption of the group, empty will be ignored",
          "required" : false,
          "type" : "String"
        }, {
          "name" : "enabledTime",
          "in" : "formData",
          "description" : "date this will be enabled (for future provisioning): yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "disabledTime",
          "in" : "formData",
          "description" : "date this will be disabled (for future provisioning): yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "typeOfGroup1",
          "in" : "formData",
          "description" : "type of group can be an enum of TypeOfGroup, e.g. group, role, entity",
          "required" : false,
          "type" : "String",
          "x-example" : "entity"
        }, {
          "name" : "alternateName",
          "in" : "formData",
          "description" : "the alternate name of the group",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:othername"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGroupSaveLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vH_M_EMF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Has member",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "hasMember",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsHasMemberResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vH_M_EML" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Has member lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "hasMemberLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "Id in UI, groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "Id path in UI, groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        }, {
          "name" : "fieldName",
          "in" : "formData",
          "description" : "is if the Group.hasMember() method with field is to be called",
          "required" : false,
          "type" : "String",
          "x-example" : "members, optin, optout, read, admin, update, view, groupAttrRead, groupAttrUpdate"
        }, {
          "name" : "pointInTimeFrom",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "pointInTimeTo",
          "in" : "formData",
          "description" : "To query members at a certain point in time or time range in the past, set this valueand/or the value of pointInTimeTo. This parameter specifies the start of the rangeof the point in time query. If this is specified but pointInTimeTo is not specified,then the point in time query range will be from the time specified to now.Format: yyyy/MM/dd HH:mm:ss.SSS",
          "required" : false,
          "type" : "String",
          "x-example" : "1970/01/01 00:00:00.000"
        }, {
          "name" : "memberFilter",
          "in" : "formData",
          "description" : "can be All(default), Effective (non immediate), Immediate (direct),Composite (if composite group with group math (union, minus,etc)",
          "required" : false,
          "type" : "String",
          "x-example" : "Effective"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsHasMemberLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vM_C_SUF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Member change subject",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "memberChangeSubject",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMemberChangeSubjectResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vM_C_SUL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Member change subject lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "memberChangeSubjectLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeSubjectDetail",
          "in" : "formData",
          "description" : "If the subject detail should be returned (anything more than ID), default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "deleteOldMember",
          "in" : "formData",
          "description" : "T/F or TRUE/FALSE (Case sensitive) true means delete subject that was changed, false means keep, defaults to true",
          "required" : false,
          "type" : "String",
          "x-example" : "T"
        }, {
          "name" : "oldSubjectSourceId",
          "in" : "formData",
          "description" : "the old Id of the subjectSource of the person to be added, recommended",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "oldSubjectIdentifier",
          "in" : "formData",
          "description" : "Old subjectIdentifier of entity to be added, mutually exclusive with subjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "oldsubjectId",
          "in" : "formData",
          "description" : "Old subjectId of entity to be added, mutually exclusive with subjectIdentifier, one of the two is required (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "newSubjectSourceId",
          "in" : "formData",
          "description" : "the new Id of the subjectSource of the person to be added, recommended",
          "required" : false,
          "type" : "String",
          "x-example" : "schoolPerson"
        }, {
          "name" : "newSubjectIdentifier",
          "in" : "formData",
          "description" : "New subjectIdentifier of entity to be added, mutually exclusive with subjectId, one of the two is required",
          "required" : false,
          "type" : "String",
          "x-example" : "subjIdent0"
        }, {
          "name" : "newSubjectId",
          "in" : "formData",
          "description" : "New subjectId of entity to be added, mutually exclusive with subjectIdentifier, one of the two is required (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "subjectAttributeNames",
          "in" : "formData",
          "description" : "are the additional subject attributes (data) to return. If blank, whatever is configured in the grouper-ws.properties will be sent (comma separated). Only certain attributes are configured to be allowed to be retrieved",
          "required" : false,
          "type" : "String",
          "x-example" : "lastName, middleName"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMemberChangeSubjectLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vR_C_MES" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Receive message",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "receiveMessage",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMessageResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_E_MES" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Send message",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "sendMessage",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMessageResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_T_DEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Stem delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "stemDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsStemDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_T_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Stem delete lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "stemDeleteLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "stemUuid",
          "in" : "formData",
          "description" : "Id in UI, stemUuid search by stem uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "Id path in UI, stemName search by stem name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsStemDeleteLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_T_SAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Stem save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "stemSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsStemSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_T_SAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Stem save lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "stemSaveLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "stemUuid",
          "in" : "formData",
          "description" : "Id in UI, stemUuid search by stem uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "Id path in UI, stemName search by stem name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        }, {
          "name" : "displayExtension",
          "in" : "formData",
          "description" : "display name of the stem",
          "required" : false,
          "type" : "String",
          "x-example" : "!!"
        }, {
          "name" : "description",
          "in" : "formData",
          "description" : "descirption of the stem, empty will be ignored",
          "required" : false,
          "type" : "String"
        }, {
          "name" : "saveMode",
          "in" : "formData",
          "description" : "if the save should be constrained to INSERT, UPDATE, or INSERT_OR_UPDATE (default)",
          "required" : false,
          "type" : "String",
          "x-example" : "INSERT"
        }, {
          "name" : "stemLookupUuid",
          "in" : "formData",
          "description" : "the uuid of the stem to save (mutually exclusive with stemLookupName), null for insert",
          "required" : false,
          "type" : "String",
          "x-example" : "a1b2c3d4"
        }, {
          "name" : "stemLookupName",
          "in" : "formData",
          "description" : "the name of the stam to save (mutually exclusive with stemLookupUuid), null for insert",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsStemSaveLiteResult"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "WsAddMemberLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wsGroupAssigned" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAddMemberResult" : {
      "type" : "object",
      "properties" : {
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAddMemberResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAddMemberResult"
          }
        },
        "wsGroupAssigned" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAssignAttributeBatchResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssignValueResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignValueResult"
          }
        },
        "changed" : {
          "type" : "string"
        },
        "valuesChanged" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "string"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        }
      }
    },
    "WsAssignAttributeDefNameInheritanceResults" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAssignAttributeResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssignValueResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignValueResult"
          }
        },
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        },
        "changed" : {
          "type" : "string"
        },
        "valuesChanged" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "string"
        }
      }
    },
    "WsAssignAttributesBatchResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsAssignAttributeBatchResultArray" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAssignAttributeBatchResult"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsStems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "wsMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMembership"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsAssignAttributesLiteResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        },
        "wsAttributeAssignResult" : {
          "$ref" : "#/definitions/WsAssignAttributeResult"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "wsMembership" : {
          "$ref" : "#/definitions/WsMembership"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsAssignAttributesResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsAttributeAssignResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAssignAttributeResult"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsStems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "wsMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMembership"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsAssignGrouperPrivilegesLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "params" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "allowed" : {
          "type" : "string"
        },
        "privilegeName" : {
          "type" : "string"
        },
        "privilegeType" : {
          "type" : "string"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsAssignGrouperPrivilegesResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "params" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "allowed" : {
          "type" : "string"
        },
        "privilegeName" : {
          "type" : "string"
        },
        "privilegeType" : {
          "type" : "string"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsAssignGrouperPrivilegesResults" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAssignGrouperPrivilegesResult"
          }
        }
      }
    },
    "WsAssignPermissionResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        },
        "changed" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "string"
        }
      }
    },
    "WsAssignPermissionsLiteResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        },
        "wsPermissionAssignResult" : {
          "$ref" : "#/definitions/WsAssignPermissionResult"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsAssignPermissionsResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsAssignPermissionResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAssignPermissionResult"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsAttributeAssign" : {
      "type" : "object",
      "properties" : {
        "disallowed" : {
          "type" : "string"
        },
        "attributeAssignActionType" : {
          "type" : "string"
        },
        "attributeAssignDelegatable" : {
          "type" : "string"
        },
        "attributeAssignActionId" : {
          "type" : "string"
        },
        "attributeAssignActionName" : {
          "type" : "string"
        },
        "attributeAssignType" : {
          "type" : "string"
        },
        "attributeDefNameId" : {
          "type" : "string"
        },
        "attributeDefNameName" : {
          "type" : "string"
        },
        "attributeDefId" : {
          "type" : "string"
        },
        "attributeDefName" : {
          "type" : "string"
        },
        "wsAttributeAssignValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignValue"
          }
        },
        "createdOn" : {
          "type" : "string"
        },
        "disabledTime" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "string"
        },
        "enabledTime" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "lastUpdated" : {
          "type" : "string"
        },
        "notes" : {
          "type" : "string"
        },
        "ownerAttributeAssignId" : {
          "type" : "string"
        },
        "ownerAttributeDefId" : {
          "type" : "string"
        },
        "ownerAttributeDefName" : {
          "type" : "string"
        },
        "ownerGroupId" : {
          "type" : "string"
        },
        "ownerGroupName" : {
          "type" : "string"
        },
        "ownerMemberId" : {
          "type" : "string"
        },
        "ownerMemberSubjectId" : {
          "type" : "string"
        },
        "ownerMemberSourceId" : {
          "type" : "string"
        },
        "ownerMembershipId" : {
          "type" : "string"
        },
        "ownerStemId" : {
          "type" : "string"
        },
        "ownerStemName" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeAssignActionTuple" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string"
        },
        "attributeDefId" : {
          "type" : "string"
        },
        "nameOfAttributeDef" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeAssignValue" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "valueSystem" : {
          "type" : "string"
        },
        "valueFormatted" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeAssignValueResult" : {
      "type" : "object",
      "properties" : {
        "changed" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "string"
        },
        "wsAttributeAssignValue" : {
          "$ref" : "#/definitions/WsAttributeAssignValue"
        }
      }
    },
    "WsAttributeDef" : {
      "type" : "object",
      "properties" : {
        "idIndex" : {
          "type" : "string"
        },
        "extension" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeDefType" : {
          "type" : "string"
        },
        "multiAssignable" : {
          "type" : "string"
        },
        "multiValued" : {
          "type" : "string"
        },
        "valueType" : {
          "type" : "string"
        },
        "assignToAttributeDef" : {
          "type" : "string"
        },
        "assignToAttributeDefAssignment" : {
          "type" : "string"
        },
        "assignToEffectiveMembership" : {
          "type" : "string"
        },
        "assignToEffectiveMembershipAssignment" : {
          "type" : "string"
        },
        "assignToGroup" : {
          "type" : "string"
        },
        "assignToGroupAssignment" : {
          "type" : "string"
        },
        "assignToImmediateMembership" : {
          "type" : "string"
        },
        "assignToImmediateMembershipAssignment" : {
          "type" : "string"
        },
        "assignToMember" : {
          "type" : "string"
        },
        "assignToMemberAssignment" : {
          "type" : "string"
        },
        "assignToStem" : {
          "type" : "string"
        },
        "assignToStemAssignment" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeDefActionOperationPerformed" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeDefAssignActionResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefActionOperationPerformed"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAttributeDefDeleteLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        }
      }
    },
    "WsAttributeDefDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAttributeDefDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAttributeDefName" : {
      "type" : "object",
      "properties" : {
        "idIndex" : {
          "type" : "string"
        },
        "extension" : {
          "type" : "string"
        },
        "displayExtension" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeDefId" : {
          "type" : "string"
        },
        "attributeDefName" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeDefNameDeleteLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        }
      }
    },
    "WsAttributeDefNameDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAttributeDefNameDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefNameDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAttributeDefNameSaveLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        }
      }
    },
    "WsAttributeDefNameSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAttributeDefNameSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefNameSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAttributeDefSaveLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        }
      }
    },
    "WsAttributeDefSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAttributeDefSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAuditEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "actionName" : {
          "type" : "string"
        },
        "auditCategory" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string"
        },
        "auditEntryColumns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAuditEntryColumn"
          }
        }
      }
    },
    "WsAuditEntryColumn" : {
      "type" : "object",
      "properties" : {
        "label" : {
          "type" : "string"
        },
        "valueInt" : {
          "type" : "string"
        },
        "valueString" : {
          "type" : "string"
        }
      }
    },
    "WsDeleteMemberLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "WsDeleteMemberResult" : {
      "type" : "object",
      "properties" : {
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsDeleteMemberResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsDeleteMemberResult"
          }
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "WsExternalSubject" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "institution" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "searchStringLower" : {
          "type" : "string"
        },
        "vettedEmailAddresses" : {
          "type" : "string"
        },
        "wsExternalSubjectAttributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsExternalSubjectAttribute"
          }
        }
      }
    },
    "WsExternalSubjectAttribute" : {
      "type" : "object",
      "properties" : {
        "attributeValue" : {
          "type" : "string"
        },
        "attributeSystemName" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      }
    },
    "WsExternalSubjectDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsExternalSubject" : {
          "$ref" : "#/definitions/WsExternalSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsExternalSubjectDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsExternalSubjectDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsExternalSubjectSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsExternalSubject" : {
          "$ref" : "#/definitions/WsExternalSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsExternalSubjectSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsExternalSubjectSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsFindAttributeDefNamesResults" : {
      "type" : "object",
      "properties" : {
        "attributeDefNameResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "attributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsFindAttributeDefsResults" : {
      "type" : "object",
      "properties" : {
        "attributeDefResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsFindExternalSubjectsResults" : {
      "type" : "object",
      "properties" : {
        "externalSubjectResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsExternalSubject"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsFindGroupsResults" : {
      "type" : "object",
      "properties" : {
        "groupResults" : {
          "type" : "array",
          "description" : "has 0 to many groups that match the query",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "resultMetadata" : {
          "description" : "Result code, if success, status code, result message",
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "description" : "Server version, millis elapsed on server, and warnings",
          "$ref" : "#/definitions/WsResponseMeta"
        }
      },
      "description" : "Groups returned from the group find query"
    },
    "WsFindGroupsResultsWrapper" : {
      "type" : "object",
      "properties" : {
        "WsFindGroupsResults" : {
          "description" : "Identifies the response for findGroups",
          "$ref" : "#/definitions/WsFindGroupsResults"
        }
      },
      "description" : "Response body when a findGroups is successful"
    },
    "WsFindGroupsResultsWrapperError" : {
      "type" : "object",
      "properties" : {
        "WsFindGroupsResults" : {
          "description" : "Identifies the response for findGroups",
          "$ref" : "#/definitions/WsResultsError"
        }
      },
      "description" : "Response body when not successful contains error message and metadata"
    },
    "WsFindStemsResults" : {
      "type" : "object",
      "properties" : {
        "stemResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetAttributeAssignActionsResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssignActionTuples" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignActionTuple"
          }
        },
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetAttributeAssignmentsResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsStems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "wsMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMembership"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsGetAuditEntriesResults" : {
      "type" : "object",
      "properties" : {
        "wsAuditEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAuditEntry"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetGrouperPrivilegesLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "privilegeResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGrouperPrivilegeResult"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "params" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        }
      }
    },
    "WsGetGroupsLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsGetGroupsResult" : {
      "type" : "object",
      "properties" : {
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsGetGroupsResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGetGroupsResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetMembersLiteResult" : {
      "type" : "object",
      "properties" : {
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsGetMembersResult" : {
      "type" : "object",
      "properties" : {
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsGetMembersResults" : {
      "type" : "object",
      "properties" : {
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGetMembersResult"
          }
        }
      }
    },
    "WsGetMembershipsResults" : {
      "type" : "object",
      "properties" : {
        "wsMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMembership"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsStems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetPermissionAssignmentsResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsPermissionAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsPermissionAssign"
          }
        },
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsGetSubjectsResults" : {
      "type" : "object",
      "properties" : {
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        }
      }
    },
    "WsGroup" : {
      "type" : "object",
      "properties" : {
        "extension" : {
          "type" : "string",
          "example" : "someGroup",
          "description" : "System extension of group, the part to the right of last colon in name.  This is the 'ID' in the UI"
        },
        "typeOfGroup" : {
          "type" : "string",
          "example" : "group | role | entity",
          "description" : "type of group can be an enum of TypeOfGroup, e.g. group, role, entity"
        },
        "displayExtension" : {
          "type" : "string",
          "example" : "Some group",
          "description" : "Display extension of group, the part to the right of last colon in display name.  This is the 'Name' in the UI"
        },
        "description" : {
          "type" : "string",
          "example" : "This group was created 1/2/2019 by John Smith for the Math department.",
          "description" : "Description field of group should contain documentation about the group"
        },
        "displayName" : {
          "type" : "string",
          "example" : "Applications:My app:Some group",
          "description" : "Fully qualified display name of the group ('Path' in the UI).  This contains all display extensions of parent folders separated by colons"
        },
        "name" : {
          "type" : "string",
          "example" : "app:myApp:someGroup",
          "description" : "Fully qualified system name of the group ('ID Path' in the UI).  This contains all the system extensions of parent folders separated by colons"
        },
        "uuid" : {
          "type" : "string",
          "example" : "abc123",
          "description" : "This is the unique unchanging opaque identifier of this group (max 40 chars)"
        },
        "alternateName" : {
          "type" : "string",
          "example" : "some:alternate:name",
          "description" : "If there is an alternate name assigned to this group, it will be listed here"
        },
        "detail" : {
          "description" : "If requested, these are the detail results of the group",
          "$ref" : "#/definitions/WsGroupDetail"
        },
        "idIndex" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Integer ID for object"
        },
        "enabled" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "if the group is enabled, T or F"
        },
        "enabledTime" : {
          "type" : "string",
          "example" : "2022/04/21 20:17:42.987",
          "description" : "Timestamp this group is enabled: yyyy/MM/dd HH:mm:ss.SSS"
        },
        "disabledTime" : {
          "type" : "string",
          "example" : "2021/03/15 18:41:18.123",
          "description" : "Timestamp this group is disabled: yyyy/MM/dd HH:mm:ss.SSS"
        }
      },
      "description" : "Result of one group being retrieved"
    },
    "WsGroupDeleteLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        }
      }
    },
    "WsGroupDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsGroupDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroupDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGroupDetail" : {
      "type" : "object",
      "properties" : {
        "hasComposite" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "if this group has a composite member, T|F"
        },
        "leftGroup" : {
          "description" : "Left group if this is a composite owner (note, detail will never be there in the leftGroup wsGroup)",
          "$ref" : "#/definitions/WsGroup"
        },
        "rightGroup" : {
          "description" : "Right group if this is a composite owner (note, detail will never be there in the rightGroup wsGroup)",
          "$ref" : "#/definitions/WsGroup"
        },
        "typeNames" : {
          "type" : "array",
          "description" : "Legacy types for this group, comma-separated",
          "items" : {
            "type" : "string"
          }
        },
        "attributeNames" : {
          "type" : "array",
          "description" : "Attribute names, not including the ones listed in the group result or detail",
          "items" : {
            "type" : "string"
          }
        },
        "attributeValues" : {
          "type" : "array",
          "description" : "Attribute values, not including the ones listed in the group result or detail",
          "items" : {
            "type" : "string"
          }
        },
        "compositeType" : {
          "type" : "string",
          "example" : "UNION | COMPLEMENT | INTERSECTION",
          "description" : "If this is a composite group, this is the composite type: UNION, COMPLEMENT, INTERSECTION"
        },
        "params" : {
          "type" : "array",
          "description" : "NA",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "createSubjectId" : {
          "type" : "string",
          "example" : "12345678",
          "description" : "ID of the subject that created this group"
        },
        "createTime" : {
          "type" : "string",
          "example" : "2021/03/15 18:41:18.123",
          "description" : "Create time in format: yyyy/mm/dd hh24:mi:ss.SSS"
        },
        "isCompositeFactor" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "If a composite member of another group 'T', else 'F'.  A composite group is composed of two groups and a set operator (stored in the grouper_composites table) (e.g. complement, intersection). A composite group has no immediate members. All subjects in a composite group are effective members."
        },
        "modifySource" : {
          "type" : "string",
          "example" : "NA",
          "description" : "Not used"
        },
        "modifySubjectId" : {
          "type" : "string",
          "example" : "12345678",
          "description" : "ID of the subject that last modified this group's attributes"
        },
        "modifyTime" : {
          "type" : "string",
          "example" : "2021/03/15 18:41:18.123",
          "description" : "Last modified time for this group. yyyy/mm/dd hh24:mi:ss.SSS"
        }
      },
      "description" : "Detail of group if requested from user"
    },
    "WsGroupLookup" : {
      "type" : "object",
      "properties" : {
        "idIndex" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Integer ID for object"
        },
        "uuid" : {
          "type" : "string",
          "example" : "abc123",
          "description" : "UUID of the group to find ('UUID' from the UI)"
        },
        "groupName" : {
          "type" : "string",
          "example" : "some:group:name",
          "description" : "Group system name ('ID path' on UI) to search for, not the display name"
        }
      },
      "description" : "Template to lookup a group: groupName, uuid, and idIndex are mutually exclusive."
    },
    "WsGroupSaveLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        }
      }
    },
    "WsGroupSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsGroupSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroupSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGrouperPrivilegeResult" : {
      "type" : "object",
      "properties" : {
        "allowed" : {
          "type" : "string"
        },
        "ownerSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "privilegeName" : {
          "type" : "string"
        },
        "privilegeType" : {
          "type" : "string"
        },
        "revokable" : {
          "type" : "string"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsGshOutputLine" : {
      "type" : "object",
      "properties" : {
        "messageType" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        }
      }
    },
    "WsGshTemplateExecResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "transaction" : {
          "type" : "boolean"
        },
        "gshValidationLines" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGshValidationLine"
          }
        },
        "gshOutputLines" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGshOutputLine"
          }
        },
        "gshScriptOutput" : {
          "type" : "string"
        },
        "gshExitCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "wsOutput" : {
          "type" : "object"
        }
      }
    },
    "WsGshValidationLine" : {
      "type" : "object",
      "properties" : {
        "inputName" : {
          "type" : "string"
        },
        "validationText" : {
          "type" : "string"
        }
      }
    },
    "WsHasMemberLiteResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsHasMemberResult"
          }
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsHasMemberResult" : {
      "type" : "object",
      "properties" : {
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsHasMemberResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsHasMemberResult"
          }
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsMemberChangeSubjectLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wsSubjectNew" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsSubjectOld" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsMemberChangeSubjectResult" : {
      "type" : "object",
      "properties" : {
        "wsSubjectNew" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "wsSubjectOld" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsMemberChangeSubjectResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMemberChangeSubjectResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsMembership" : {
      "type" : "object",
      "properties" : {
        "membershipId" : {
          "type" : "string"
        },
        "immediateMembershipId" : {
          "type" : "string"
        },
        "listName" : {
          "type" : "string"
        },
        "listType" : {
          "type" : "string"
        },
        "membershipType" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "string"
        },
        "enabledTime" : {
          "type" : "string"
        },
        "disabledTime" : {
          "type" : "string"
        },
        "memberId" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "ownerStemId" : {
          "type" : "string"
        },
        "ownerStemName" : {
          "type" : "string"
        },
        "ownerIdOfAttributeDef" : {
          "type" : "string"
        },
        "ownerNameOfAttributeDef" : {
          "type" : "string"
        },
        "subjectId" : {
          "type" : "string"
        },
        "subjectSourceId" : {
          "type" : "string"
        },
        "groupName" : {
          "type" : "string"
        },
        "createTime" : {
          "type" : "string"
        }
      }
    },
    "WsMessage" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "fromMemberId" : {
          "type" : "string"
        },
        "messageBody" : {
          "type" : "string"
        }
      }
    },
    "WsMessageAcknowledgeResults" : {
      "type" : "object",
      "properties" : {
        "queueOrTopicName" : {
          "type" : "string"
        },
        "messageSystemName" : {
          "type" : "string"
        },
        "messageIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsMessageResults" : {
      "type" : "object",
      "properties" : {
        "queueOrTopicName" : {
          "type" : "string"
        },
        "messageSystemName" : {
          "type" : "string"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMessage"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsParam" : {
      "type" : "object",
      "properties" : {
        "paramName" : {
          "type" : "string",
          "description" : "Parameter name"
        },
        "paramValue" : {
          "type" : "string",
          "description" : "Parameter value"
        }
      },
      "description" : "Name value pairs"
    },
    "WsPermissionAssign" : {
      "type" : "object",
      "properties" : {
        "limits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsPermissionLimit"
          }
        },
        "detail" : {
          "$ref" : "#/definitions/WsPermissionAssignDetail"
        },
        "action" : {
          "type" : "string"
        },
        "permissionType" : {
          "type" : "string"
        },
        "attributeDefNameId" : {
          "type" : "string"
        },
        "attributeDefNameName" : {
          "type" : "string"
        },
        "attributeDefId" : {
          "type" : "string"
        },
        "attributeDefName" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "string"
        },
        "attributeAssignId" : {
          "type" : "string"
        },
        "roleId" : {
          "type" : "string"
        },
        "roleName" : {
          "type" : "string"
        },
        "subjectId" : {
          "type" : "string"
        },
        "sourceId" : {
          "type" : "string"
        },
        "membershipId" : {
          "type" : "string"
        },
        "allowedOverall" : {
          "type" : "string"
        },
        "disallowed" : {
          "type" : "string"
        }
      }
    },
    "WsPermissionAssignDetail" : {
      "type" : "object",
      "properties" : {
        "heuristicFriendlyScore" : {
          "type" : "string"
        },
        "roleSetDepth" : {
          "type" : "string"
        },
        "membershipDepth" : {
          "type" : "string"
        },
        "attributeDefNameSetDepth" : {
          "type" : "string"
        },
        "actionDepth" : {
          "type" : "string"
        },
        "permissionDelegatable" : {
          "type" : "string"
        },
        "disabledTime" : {
          "type" : "string"
        },
        "enabledTime" : {
          "type" : "string"
        },
        "assignmentNotes" : {
          "type" : "string"
        },
        "memberId" : {
          "type" : "string"
        },
        "actionId" : {
          "type" : "string"
        },
        "immediateMembership" : {
          "type" : "string"
        },
        "immediatePermission" : {
          "type" : "string"
        }
      }
    },
    "WsPermissionLimit" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssignValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignValue"
          }
        },
        "attributeAssignId" : {
          "type" : "string"
        },
        "attributeDefNameId" : {
          "type" : "string"
        },
        "attributeDefNameName" : {
          "type" : "string"
        }
      }
    },
    "WsQueryFilter" : {
      "type" : "object",
      "properties" : {
        "typeOfGroups" : {
          "type" : "string",
          "example" : "group|role|entity",
          "description" : "Comma separated type of groups can be an enum of TypeOfGroup, e.g. group, role, entity"
        },
        "pageSize" : {
          "type" : "string",
          "example" : "100",
          "description" : "Page size if paging"
        },
        "pageNumber" : {
          "type" : "string",
          "example" : "1",
          "description" : "Page number 1 indexed if paging"
        },
        "sortString" : {
          "type" : "string",
          "example" : "name | displayName | extension | displayExtension",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension"
        },
        "ascending" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string"
        },
        "queryFilterType" : {
          "type" : "string",
          "example" : "FIND_BY_GROUP_UUID | FIND_BY_GROUP_NAME_EXACT | FIND_BY_STEM_NAME | FIND_BY_APPROXIMATE_ATTRIBUTE | FIND_BY_ATTRIBUTE | FIND_BY_GROUP_NAME_APPROXIMATE | FIND_BY_TYPE | AND | OR | MINUS",
          "description" : "findGroupType is the WsQueryFilterType enum for which type of find is happening: e.g. FIND_BY_GROUP_UUID, FIND_BY_GROUP_NAME_EXACT, FIND_BY_STEM_NAME, FIND_BY_APPROXIMATE_ATTRIBUTE, FIND_BY_ATTRIBUTE,  FIND_BY_GROUP_NAME_APPROXIMATE, FIND_BY_TYPE, AND, OR, MINUS"
        },
        "groupName" : {
          "type" : "string",
          "example" : "some:group:name",
          "description" : "groupName search by group name (must match exactly), cannot use other params with this"
        },
        "stemName" : {
          "type" : "string",
          "example" : "some:parent:folder:name",
          "description" : "Will return groups only in this stem (by name)"
        },
        "stemNameScope" : {
          "type" : "string",
          "example" : "ONE_LEVEL | ALL_IN_SUBTREE",
          "description" : "if searching by stem, ONE_LEVEL is for one level, ALL_IN_SUBTREE will return all in sub tree. Default is ALL_IN_SUBTREE"
        },
        "groupUuid" : {
          "type" : "string",
          "example" : "abc123",
          "description" : "groupUuid search by group uuid (must match exactly)"
        },
        "groupAttributeValue" : {
          "type" : "string",
          "example" : "someValue",
          "description" : "The attribute value to filter on if querying by attribute and value"
        },
        "groupAttributeName" : {
          "type" : "string",
          "example" : "some:attribute:name",
          "description" : "This is the attribute name, or null for search all attributes.  This could be a legacy attribute or an attributeDefName of a string valued attribute"
        },
        "groupTypeName" : {
          "type" : "string",
          "example" : "NA",
          "description" : "not implemented"
        },
        "queryFilter0" : {
          "description" : "If 'and' or 'or' this is the first group, and if complement, this is the group to complement",
          "$ref" : "#/definitions/WsQueryFilter"
        },
        "queryFilter1" : {
          "description" : "if 'and' or 'or', this is the second group",
          "$ref" : "#/definitions/WsQueryFilter"
        },
        "pageIsCursor" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging"
        },
        "pageLastCursorField" : {
          "type" : "string",
          "example" : "abc123",
          "description" : "Field that will be sent back for cursor based paging"
        },
        "pageLastCursorFieldType" : {
          "type" : "string",
          "example" : "string|int|long|date|timestamp",
          "description" : "Could be: string, int, long, date, timestamp"
        },
        "pageCursorFieldIncludesLastRetrieved" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset"
        },
        "enabled" : {
          "type" : "string",
          "example" : "A|T|F",
          "description" : "enabled is A for all, T or null for enabled only, F for disabled"
        },
        "queryTerm" : {
          "type" : "string",
          "example" : "some:group:name",
          "description" : "queryTerm if searching by query, this is a term that will be matched to name, extension, etc"
        }
      },
      "description" : "this represents a query which can be and'ed or or'ed.  Can also pass in other params."
    },
    "WsResponseMeta" : {
      "type" : "object",
      "properties" : {
        "resultWarnings" : {
          "type" : "string",
          "description" : "If there are warnings, they will be here"
        },
        "millis" : {
          "type" : "string",
          "example" : "123",
          "description" : "Milliseconds this operation took on server"
        },
        "serverVersion" : {
          "type" : "string",
          "example" : "2.6.1",
          "description" : "The version of Grouper on the server"
        }
      },
      "description" : "Response metadata (version, warnings, millis, etc)"
    },
    "WsRestFindGroupsRequest" : {
      "type" : "object",
      "properties" : {
        "wsQueryFilter" : {
          "description" : "Query filter for request",
          "$ref" : "#/definitions/WsQueryFilter"
        },
        "clientVersion" : {
          "type" : "string",
          "example" : "v2_6_001",
          "description" : "Version of the client (i.e. that the client was coded against)"
        },
        "actAsSubjectLookup" : {
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user to act as here",
          "$ref" : "#/definitions/WsSubjectLookup"
        },
        "includeGroupDetail" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "If the group detail should be returned, default to false"
        },
        "params" : {
          "type" : "array",
          "example" : "NA",
          "description" : "Optional params for this request",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "wsGroupLookups" : {
          "type" : "array",
          "description" : "wsGroupLookups if you want to just pass in a list of uuids and/or names.  Note the groups are returned in alphabetical order",
          "items" : {
            "$ref" : "#/definitions/WsGroupLookup"
          }
        }
      },
      "description" : "bean that will be the data from rest request for finding groups"
    },
    "WsRestFindGroupsRequestWrapper" : {
      "type" : "object",
      "properties" : {
        "WsRestFindGroupsRequest" : {
          "description" : "Identifies the request as a findGroups request",
          "$ref" : "#/definitions/WsRestFindGroupsRequest"
        }
      },
      "description" : "Request body to find groups"
    },
    "WsResultMeta" : {
      "type" : "object",
      "properties" : {
        "params" : {
          "type" : "array",
          "description" : "NA",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "resultCode" : {
          "type" : "string",
          "example" : "SUCCESS",
          "description" : "This set of result codes is dependent on which operation is called and the status"
        },
        "resultCode2" : {
          "type" : "string",
          "description" : "If a second result code is needed for the operation and status, it will be listed here"
        },
        "resultMessage" : {
          "type" : "string",
          "description" : "Error message if there is an error"
        },
        "success" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "T or F as to whether it was a successful operation.  i.e. if there was a problem this will be F"
        }
      },
      "description" : "Result code, if success, status code, result message"
    },
    "WsResultsError" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "description" : "Result code, if success, status code, result message",
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "description" : "Server version, millis elapsed on server, and warnings",
          "$ref" : "#/definitions/WsResponseMeta"
        }
      },
      "description" : "Response when not successful contains error message and metadata"
    },
    "WsStem" : {
      "type" : "object",
      "properties" : {
        "idIndex" : {
          "type" : "string"
        },
        "extension" : {
          "type" : "string"
        },
        "displayExtension" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      }
    },
    "WsStemDeleteLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        }
      }
    },
    "WsStemDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsStemDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStemDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsStemSaveLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        }
      }
    },
    "WsStemSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsStemSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStemSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsSubject" : {
      "type" : "object",
      "properties" : {
        "identifierLookup" : {
          "type" : "string"
        },
        "resultCode" : {
          "type" : "string"
        },
        "success" : {
          "type" : "string"
        },
        "memberId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "sourceId" : {
          "type" : "string"
        },
        "attributeValues" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "WsSubjectLookup" : {
      "type" : "object",
      "properties" : {
        "subjectId" : {
          "type" : "string",
          "example" : "12345678",
          "description" : "subjectId is mutually exclusive with subjectIdentifier.  This is specific to your institution.  Might be the employeeId.  You should also pass in a subjectSourceId"
        },
        "subjectIdentifier" : {
          "type" : "string",
          "example" : "jsmith",
          "description" : "subjectIdentifier is mutually exclusive with subjectId.  This is specific to your institution.  Might be the netId.  If you can use subjectId, you should use that, if not, use this.  You should also pass in a subjectSourceId"
        },
        "subjectSourceId" : {
          "type" : "string",
          "example" : "myInstitutionsPeople",
          "description" : "subjectSourceId is specific to your institution.  Ask your Grouper admins which subjectSourceId to you, or can find it in the UI where you import subjects"
        }
      },
      "description" : "template to lookup a subject.  note if subjectId and subjectIdentifier are filled in with the same value, it will find by subject id or identifier.  To lookup a group as a subject use g:gsa as the source id, then either use the group uuid (e.g. fa2dd790-d3f9-4cf4-ac41-bb82e63bff66) in the subject id of the subject lookup, or the group system name as the subject identifier."
    }
  }
}