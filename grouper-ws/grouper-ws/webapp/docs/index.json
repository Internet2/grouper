{
  "swagger" : "2.0",
  "info" : {
    "description" : "Grouper Web Service operations.  Substitute vX_Y_AAA with the client version, e.g. v4_0_001.  Note: the base URL and authentication are institution specific.",
    "version" : "v4",
    "title" : "Grouper Web Services"
  },
  "host" : "grouper.institution.edu",
  "tags" : [ {
    "name" : "Grouper",
    "description" : "Integrate with the Grouper registry"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/grouper-ws/servicesRest/vA_A_MAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Acknowledge message",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "acknowledgeMessage",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMessageAcknowledgeResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_A_MEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Add member",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "addMember",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAddMemberResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_A_MEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Add member lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "addMemberLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAddMemberLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_D_ACF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attribute def actions",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributeDefActions",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefAssignActionResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_D_ANF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attribute def name inheritance",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributeDefNameInheritance",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributeDefNameInheritanceResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_D_ANL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attribute def name inheritance lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributeDefNameInheritanceLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributeDefNameInheritanceResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_E_ATF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attributes",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributes",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_E_ATG" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attributes batch",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributesBatch",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributesBatchResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_E_ATL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign attributes lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignAttributesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignAttributesLiteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_G_PRF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign grouper privileges",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignGrouperPrivileges",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignGrouperPrivilegesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_G_PRL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign grouper privileges lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignGrouperPrivilegesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignGrouperPrivilegesLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_H_PRF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign permissions",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignPermissions",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignPermissionsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_H_PRL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Assign permissions lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "assignPermissionsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAssignPermissionsLiteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_I_DEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_I_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def delete lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefDeleteLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefDeleteLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_J_DEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def name delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefNameDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefNameDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_J_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def name delete lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefNameDeleteLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefNameDeleteLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_K_SAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def name save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefNameSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefNameSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_K_SAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def name save lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefNameSaveLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefNameSaveLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_L_SAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vA_L_SAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Attribute def save lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "attributeDefSaveLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsAttributeDefSaveLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vD_M_EMF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Delete member",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "deleteMember",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsDeleteMemberResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vD_M_EML" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Delete member lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "deleteMemberLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsDeleteMemberLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vE_G_TEM" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Execute GSH template",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "executeGshTemplate",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGshTemplateExecResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vE_S_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "External subject delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "externalSubjectDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsExternalSubjectDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vE_S_SAV" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "External subject save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "externalSubjectSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsExternalSubjectSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_A_DNF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find attribute def names",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findAttributeDefNames",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindAttributeDefNamesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_A_DNL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find attribute def names lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findAttributeDefNamesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "sortString",
          "in" : "formData",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension",
          "required" : false,
          "type" : "String",
          "x-example" : "name | displayName | extension | displayExtension"
        }, {
          "name" : "ascending",
          "in" : "formData",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindAttributeDefNamesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_A_DSF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find attribute defs",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findAttributeDefs",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindAttributeDefsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_A_DSL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find attribute defs lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findAttributeDefsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "sortString",
          "in" : "formData",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension",
          "required" : false,
          "type" : "String",
          "x-example" : "name | displayName | extension | displayExtension"
        }, {
          "name" : "ascending",
          "in" : "formData",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindAttributeDefsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_E_SUB" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find external subjects",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findExternalSubjects",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindExternalSubjectsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_G_UPF/groups" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find groups",
        "description" : "<b>Sample 1</b>: Find by substring in a folder<br /><pre>POST /grouper-ws/servicesRest/v2_6_001/groups<br />{<br>  &quot;WsRestFindGroupsRequest&quot;:{<br>    &quot;wsQueryFilter&quot;:{<br>      &quot;queryFilterType&quot;:&quot;FIND_BY_GROUP_NAME_APPROXIMATE&quot;,<br>      &quot;stemName&quot;:&quot;aStem&quot;,<br>      &quot;groupName&quot;:&quot;aGr&quot;<br>    }<br>  }<br>}</pre>",
        "operationId" : "findGroups",
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/WsRestFindGroupsRequestWrapper"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapper"
            }
          },
          "400" : {
            "description" : "INVALID_QUERY",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          },
          "404" : {
            "description" : "STEM_NOT_FOUND",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          },
          "500" : {
            "description" : "EXCEPTION",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_G_UPL/groups" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find groups lite",
        "description" : "<b>Sample 1</b>: Find by substring in a folder<br /><pre>POST /grouper-ws/servicesRest/v2_6_001/groups<br /><b>wsLiteObjectType</b>=WsRestFindGroupsLiteRequest&amp;<b>groupName</b>=aGr&amp;<b>queryFilterType</b>=FIND_BY_GROUP_NAME_APPROXIMATE&amp;<b>stemName</b>=aStem</pre>",
        "operationId" : "findGroupsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "queryFilterType",
          "in" : "formData",
          "description" : "findGroupType is the WsQueryFilterType enum for which type of find is happening: e.g. FIND_BY_GROUP_UUID, FIND_BY_GROUP_NAME_EXACT, FIND_BY_STEM_NAME, FIND_BY_APPROXIMATE_ATTRIBUTE, FIND_BY_ATTRIBUTE,  FIND_BY_GROUP_NAME_APPROXIMATE, FIND_BY_TYPE, AND, OR, MINUS",
          "required" : false,
          "type" : "String",
          "x-example" : "FIND_BY_GROUP_UUID | FIND_BY_GROUP_NAME_EXACT | FIND_BY_STEM_NAME | FIND_BY_APPROXIMATE_ATTRIBUTE | FIND_BY_ATTRIBUTE | FIND_BY_GROUP_NAME_APPROXIMATE | FIND_BY_TYPE | AND | OR | MINUS"
        }, {
          "name" : "groupName",
          "in" : "formData",
          "description" : "groupName search by group name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:group:name"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "Will return groups only in this stem (by name)",
          "required" : false,
          "type" : "String",
          "x-example" : "some:parent:folder:name"
        }, {
          "name" : "stemNameScope",
          "in" : "formData",
          "description" : "if searching by stem, ONE_LEVEL is for one level, ALL_IN_SUBTREE will return all in sub tree. Default is ALL_IN_SUBTREE",
          "required" : false,
          "type" : "String",
          "x-example" : "ONE_LEVEL | ALL_IN_SUBTREE"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "groupAttributeName",
          "in" : "formData",
          "description" : "This is the attribute name, or null for search all attributes.  This could be a legacy attribute or an attributeDefName of a string valued attribute",
          "required" : false,
          "type" : "String",
          "x-example" : "some:attribute:name"
        }, {
          "name" : "groupAttributeValue",
          "in" : "formData",
          "description" : "The attribute value to filter on if querying by attribute and value",
          "required" : false,
          "type" : "String",
          "x-example" : "someValue"
        }, {
          "name" : "groupTypeName",
          "in" : "formData",
          "description" : "not implemented",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "sortString",
          "in" : "formData",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension",
          "required" : false,
          "type" : "String",
          "x-example" : "name | displayName | extension | displayExtension"
        }, {
          "name" : "ascending",
          "in" : "formData",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "typeOfGroups",
          "in" : "formData",
          "description" : "Comma separated type of groups can be an enum of TypeOfGroup, e.g. group, role, entity",
          "required" : false,
          "type" : "String",
          "x-example" : "group|role|entity"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "enabled",
          "in" : "formData",
          "description" : "enabled is A for all, T or null for enabled only, F for disabled",
          "required" : false,
          "type" : "String",
          "x-example" : "A|T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapper"
            }
          },
          "400" : {
            "description" : "INVALID_QUERY",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          },
          "404" : {
            "description" : "STEM_NOT_FOUND",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          },
          "500" : {
            "description" : "EXCEPTION",
            "schema" : {
              "$ref" : "#/definitions/WsFindGroupsResultsWrapperError"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_S_EMF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find stems",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findStems",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindStemsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vF_S_EML" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Find stems lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "findStemsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "stemName search by stem name (must match exactly), cannot use other params with this",
          "required" : false,
          "type" : "String",
          "x-example" : "some:stem:name"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "stemName",
          "in" : "formData",
          "description" : "Will return groups only in this stem (by name)",
          "required" : false,
          "type" : "String",
          "x-example" : "some:parent:folder:name"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsFindStemsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_AAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get attribute assign actions",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAttributeAssignActions",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAttributeAssignActionsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_ABF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get attribute assignments",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAttributeAssignments",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAttributeAssignmentsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_ABL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get attribute assign actions lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAttributeAssignActionsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAttributeAssignActionsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_AEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get audit entries",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAuditEntries",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAuditEntriesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_AEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get audit entries lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getAuditEntriesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetAuditEntriesResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_GPL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get grouper privileges lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getGrouperPrivilegesLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetGrouperPrivilegesLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_GRF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get groups",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getGroups",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetGroupsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_GRL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get groups lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getGroupsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetGroupsLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_MEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get memebers",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getMembers",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetMembersResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_MEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get members lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getMembersLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageIsCursor",
          "in" : "formData",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        }, {
          "name" : "pageLastCursorField",
          "in" : "formData",
          "description" : "Field that will be sent back for cursor based paging",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageLastCursorFieldType",
          "in" : "formData",
          "description" : "Could be: string, int, long, date, timestamp",
          "required" : false,
          "type" : "String",
          "x-example" : "string|int|long|date|timestamp"
        }, {
          "name" : "pageCursorFieldIncludesLastRetrieved",
          "in" : "formData",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetMembersLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_MSF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get memberships",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getMemberships",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetMembershipsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_MSL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get memberships lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getMembershipsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "pageSize",
          "in" : "formData",
          "description" : "Page size if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "100"
        }, {
          "name" : "pageNumber",
          "in" : "formData",
          "description" : "Page number 1 indexed if paging",
          "required" : false,
          "type" : "String",
          "x-example" : "1"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetMembershipsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_PAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get permission assignments",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getPermissionAssignments",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetPermissionAssignmentsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_PAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get permission assignments lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getPermissionAssignmentsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetPermissionAssignmentsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_SUF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get subjects",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getSubjects",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetSubjectsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_E_SUL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Get subjects lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "getSubjectsLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGetSubjectsResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_R_DEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Group delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "groupDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGroupDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_R_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Group delete lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "groupDeleteLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGroupDeleteLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_R_SAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Group save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "groupSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGroupSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vG_R_SAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Group save lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "groupSaveLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsGroupSaveLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vH_M_EMF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Has member",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "hasMember",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsHasMemberResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vH_M_EML" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Has member lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "hasMemberLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "groupUuid",
          "in" : "formData",
          "description" : "groupUuid search by group uuid (must match exactly)",
          "required" : false,
          "type" : "String",
          "x-example" : "abc123"
        }, {
          "name" : "includeGroupDetail",
          "in" : "formData",
          "description" : "If the group detail should be returned, default to false",
          "required" : false,
          "type" : "String",
          "x-example" : "T|F"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsHasMemberLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vM_C_SUF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Member change subject",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "memberChangeSubject",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMemberChangeSubjectResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vM_C_SUL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Member change subject lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "memberChangeSubjectLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "deleteOldMember",
          "in" : "formData",
          "description" : "T/F or TRUE/FALSE (Case sensitive) true means delete subject that was changed, false means keep, defaults to true",
          "required" : false,
          "type" : "String",
          "x-example" : "T"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMemberChangeSubjectLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vR_C_MES" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Receive message",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "receiveMessage",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMessageResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_E_MES" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Send message",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "sendMessage",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsMessageResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_T_DEF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Stem delete",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "stemDelete",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsStemDeleteResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_T_DEL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Stem delete lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "stemDeleteLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsStemDeleteLiteResult"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_T_SAF" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Stem save",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "stemSave",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsStemSaveResults"
            }
          }
        }
      }
    },
    "/grouper-ws/servicesRest/vS_T_SAL" : {
      "post" : {
        "tags" : [ "Grouper" ],
        "summary" : "Stem save lite",
        "description" : "<b>Sample 1</b>: ",
        "operationId" : "stemSaveLite",
        "parameters" : [ {
          "name" : "wsLiteObjectType",
          "in" : "formData",
          "description" : "WsRestFindGroupsLiteRequest",
          "required" : true,
          "type" : "String",
          "x-example" : "WsRestFindGroupsLiteRequest"
        }, {
          "name" : "clientVersion",
          "in" : "formData",
          "description" : "Version of the client (i.e. that the client was coded against)",
          "required" : false,
          "type" : "String",
          "x-example" : "v2_6_001"
        }, {
          "name" : "actAsSubjectId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectId to act as here.  Mutually exclusive with actAsSubjectIdentifier (actAsSubjectId is preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "12345678"
        }, {
          "name" : "actAsSubjectSourceId",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the subject source ID (get this from the UI or your Grouper admin)",
          "required" : false,
          "type" : "String",
          "x-example" : "myInstitutionPeople"
        }, {
          "name" : "actAsSubjectIdentifier",
          "in" : "formData",
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user subjectIdentifier to act as here.  Mutually exclusive with actAsSubjectId (preferred)",
          "required" : false,
          "type" : "String",
          "x-example" : "jsmith"
        }, {
          "name" : "paramName0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue0",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramName1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        }, {
          "name" : "paramValue1",
          "in" : "formData",
          "description" : "Optional params for this request",
          "required" : false,
          "type" : "String",
          "x-example" : "NA"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/WsStemSaveLiteResult"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "WsAddMemberLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wsGroupAssigned" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAddMemberResult" : {
      "type" : "object",
      "properties" : {
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAddMemberResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAddMemberResult"
          }
        },
        "wsGroupAssigned" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAssignAttributeBatchResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssignValueResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignValueResult"
          }
        },
        "changed" : {
          "type" : "string"
        },
        "valuesChanged" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "string"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        }
      }
    },
    "WsAssignAttributeDefNameInheritanceResults" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAssignAttributeResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssignValueResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignValueResult"
          }
        },
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        },
        "changed" : {
          "type" : "string"
        },
        "valuesChanged" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "string"
        }
      }
    },
    "WsAssignAttributesBatchResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsAssignAttributeBatchResultArray" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAssignAttributeBatchResult"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsStems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "wsMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMembership"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsAssignAttributesLiteResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        },
        "wsAttributeAssignResult" : {
          "$ref" : "#/definitions/WsAssignAttributeResult"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "wsMembership" : {
          "$ref" : "#/definitions/WsMembership"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsAssignAttributesResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsAttributeAssignResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAssignAttributeResult"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsStems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "wsMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMembership"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsAssignGrouperPrivilegesLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "params" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "allowed" : {
          "type" : "string"
        },
        "privilegeName" : {
          "type" : "string"
        },
        "privilegeType" : {
          "type" : "string"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsAssignGrouperPrivilegesResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "params" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "allowed" : {
          "type" : "string"
        },
        "privilegeName" : {
          "type" : "string"
        },
        "privilegeType" : {
          "type" : "string"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsAssignGrouperPrivilegesResults" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAssignGrouperPrivilegesResult"
          }
        }
      }
    },
    "WsAssignPermissionResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        },
        "changed" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "string"
        }
      }
    },
    "WsAssignPermissionsLiteResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        },
        "wsPermissionAssignResult" : {
          "$ref" : "#/definitions/WsAssignPermissionResult"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsAssignPermissionsResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsAssignPermissionResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAssignPermissionResult"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsAttributeAssign" : {
      "type" : "object",
      "properties" : {
        "disallowed" : {
          "type" : "string"
        },
        "attributeAssignActionType" : {
          "type" : "string"
        },
        "attributeAssignDelegatable" : {
          "type" : "string"
        },
        "attributeAssignActionId" : {
          "type" : "string"
        },
        "attributeAssignActionName" : {
          "type" : "string"
        },
        "attributeAssignType" : {
          "type" : "string"
        },
        "attributeDefNameId" : {
          "type" : "string"
        },
        "attributeDefNameName" : {
          "type" : "string"
        },
        "attributeDefId" : {
          "type" : "string"
        },
        "attributeDefName" : {
          "type" : "string"
        },
        "wsAttributeAssignValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignValue"
          }
        },
        "createdOn" : {
          "type" : "string"
        },
        "disabledTime" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "string"
        },
        "enabledTime" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "lastUpdated" : {
          "type" : "string"
        },
        "notes" : {
          "type" : "string"
        },
        "ownerAttributeAssignId" : {
          "type" : "string"
        },
        "ownerAttributeDefId" : {
          "type" : "string"
        },
        "ownerAttributeDefName" : {
          "type" : "string"
        },
        "ownerGroupId" : {
          "type" : "string"
        },
        "ownerGroupName" : {
          "type" : "string"
        },
        "ownerMemberId" : {
          "type" : "string"
        },
        "ownerMemberSubjectId" : {
          "type" : "string"
        },
        "ownerMemberSourceId" : {
          "type" : "string"
        },
        "ownerMembershipId" : {
          "type" : "string"
        },
        "ownerStemId" : {
          "type" : "string"
        },
        "ownerStemName" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeAssignActionTuple" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string"
        },
        "attributeDefId" : {
          "type" : "string"
        },
        "nameOfAttributeDef" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeAssignValue" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "valueSystem" : {
          "type" : "string"
        },
        "valueFormatted" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeAssignValueResult" : {
      "type" : "object",
      "properties" : {
        "changed" : {
          "type" : "string"
        },
        "deleted" : {
          "type" : "string"
        },
        "wsAttributeAssignValue" : {
          "$ref" : "#/definitions/WsAttributeAssignValue"
        }
      }
    },
    "WsAttributeDef" : {
      "type" : "object",
      "properties" : {
        "idIndex" : {
          "type" : "string"
        },
        "extension" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeDefType" : {
          "type" : "string"
        },
        "multiAssignable" : {
          "type" : "string"
        },
        "multiValued" : {
          "type" : "string"
        },
        "valueType" : {
          "type" : "string"
        },
        "assignToAttributeDef" : {
          "type" : "string"
        },
        "assignToAttributeDefAssignment" : {
          "type" : "string"
        },
        "assignToEffectiveMembership" : {
          "type" : "string"
        },
        "assignToEffectiveMembershipAssignment" : {
          "type" : "string"
        },
        "assignToGroup" : {
          "type" : "string"
        },
        "assignToGroupAssignment" : {
          "type" : "string"
        },
        "assignToImmediateMembership" : {
          "type" : "string"
        },
        "assignToImmediateMembershipAssignment" : {
          "type" : "string"
        },
        "assignToMember" : {
          "type" : "string"
        },
        "assignToMemberAssignment" : {
          "type" : "string"
        },
        "assignToStem" : {
          "type" : "string"
        },
        "assignToStemAssignment" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeDefActionOperationPerformed" : {
      "type" : "object",
      "properties" : {
        "action" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeDefAssignActionResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        },
        "actions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefActionOperationPerformed"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAttributeDefDeleteLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        }
      }
    },
    "WsAttributeDefDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAttributeDefDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAttributeDefName" : {
      "type" : "object",
      "properties" : {
        "idIndex" : {
          "type" : "string"
        },
        "extension" : {
          "type" : "string"
        },
        "displayExtension" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        },
        "attributeDefId" : {
          "type" : "string"
        },
        "attributeDefName" : {
          "type" : "string"
        }
      }
    },
    "WsAttributeDefNameDeleteLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        }
      }
    },
    "WsAttributeDefNameDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAttributeDefNameDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefNameDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAttributeDefNameSaveLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        }
      }
    },
    "WsAttributeDefNameSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefName" : {
          "$ref" : "#/definitions/WsAttributeDefName"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAttributeDefNameSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefNameSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAttributeDefSaveLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        }
      }
    },
    "WsAttributeDefSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDef" : {
          "$ref" : "#/definitions/WsAttributeDef"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsAttributeDefSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsAuditEntry" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "actionName" : {
          "type" : "string"
        },
        "auditCategory" : {
          "type" : "string"
        },
        "timestamp" : {
          "type" : "string"
        },
        "auditEntryColumns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAuditEntryColumn"
          }
        }
      }
    },
    "WsAuditEntryColumn" : {
      "type" : "object",
      "properties" : {
        "label" : {
          "type" : "string"
        },
        "valueInt" : {
          "type" : "string"
        },
        "valueString" : {
          "type" : "string"
        }
      }
    },
    "WsDeleteMemberLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "WsDeleteMemberResult" : {
      "type" : "object",
      "properties" : {
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsDeleteMemberResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsDeleteMemberResult"
          }
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "WsExternalSubject" : {
      "type" : "object",
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "string"
        },
        "identifier" : {
          "type" : "string"
        },
        "institution" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "searchStringLower" : {
          "type" : "string"
        },
        "vettedEmailAddresses" : {
          "type" : "string"
        },
        "wsExternalSubjectAttributes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsExternalSubjectAttribute"
          }
        }
      }
    },
    "WsExternalSubjectAttribute" : {
      "type" : "object",
      "properties" : {
        "attributeValue" : {
          "type" : "string"
        },
        "attributeSystemName" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      }
    },
    "WsExternalSubjectDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsExternalSubject" : {
          "$ref" : "#/definitions/WsExternalSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsExternalSubjectDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsExternalSubjectDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsExternalSubjectSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsExternalSubject" : {
          "$ref" : "#/definitions/WsExternalSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsExternalSubjectSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsExternalSubjectSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsFindAttributeDefNamesResults" : {
      "type" : "object",
      "properties" : {
        "attributeDefNameResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "attributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsFindAttributeDefsResults" : {
      "type" : "object",
      "properties" : {
        "attributeDefResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsFindExternalSubjectsResults" : {
      "type" : "object",
      "properties" : {
        "externalSubjectResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsExternalSubject"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsFindGroupsResults" : {
      "type" : "object",
      "properties" : {
        "groupResults" : {
          "type" : "array",
          "description" : "has 0 to many groups that match the query",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "resultMetadata" : {
          "description" : "Result code, if success, status code, result message",
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "description" : "Server version, millis elapsed on server, and warnings",
          "$ref" : "#/definitions/WsResponseMeta"
        }
      },
      "description" : "Groups returned from the group find query"
    },
    "WsFindGroupsResultsWrapper" : {
      "type" : "object",
      "properties" : {
        "WsFindGroupsResults" : {
          "description" : "Identifies the response for findGroups",
          "$ref" : "#/definitions/WsFindGroupsResults"
        }
      },
      "description" : "Response body when a findGroups is successful"
    },
    "WsFindGroupsResultsWrapperError" : {
      "type" : "object",
      "properties" : {
        "WsFindGroupsResults" : {
          "description" : "Identifies the response for findGroups",
          "$ref" : "#/definitions/WsResultsError"
        }
      },
      "description" : "Response body when not successful contains error message and metadata"
    },
    "WsFindStemsResults" : {
      "type" : "object",
      "properties" : {
        "stemResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetAttributeAssignActionsResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssignActionTuples" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignActionTuple"
          }
        },
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetAttributeAssignmentsResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsStems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "wsMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMembership"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsGetAuditEntriesResults" : {
      "type" : "object",
      "properties" : {
        "wsAuditEntries" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAuditEntry"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetGrouperPrivilegesLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "privilegeResults" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGrouperPrivilegeResult"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "params" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        }
      }
    },
    "WsGetGroupsLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsGetGroupsResult" : {
      "type" : "object",
      "properties" : {
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsGetGroupsResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGetGroupsResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetMembersLiteResult" : {
      "type" : "object",
      "properties" : {
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsGetMembersResult" : {
      "type" : "object",
      "properties" : {
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsGetMembersResults" : {
      "type" : "object",
      "properties" : {
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGetMembersResult"
          }
        }
      }
    },
    "WsGetMembershipsResults" : {
      "type" : "object",
      "properties" : {
        "wsMemberships" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMembership"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsStems" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStem"
          }
        },
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGetPermissionAssignmentsResults" : {
      "type" : "object",
      "properties" : {
        "wsAttributeDefs" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDef"
          }
        },
        "wsAttributeDefNames" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeDefName"
          }
        },
        "wsPermissionAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsPermissionAssign"
          }
        },
        "wsAttributeAssigns" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssign"
          }
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroups" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroup"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        }
      }
    },
    "WsGetSubjectsResults" : {
      "type" : "object",
      "properties" : {
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wsSubjects" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsSubject"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        }
      }
    },
    "WsGroup" : {
      "type" : "object",
      "properties" : {
        "extension" : {
          "type" : "string",
          "example" : "someGroup",
          "description" : "System extension of group, the part to the right of last colon in name.  This is the 'ID' in the UI"
        },
        "typeOfGroup" : {
          "type" : "string",
          "example" : "group | role | entity",
          "description" : "type of group can be an enum of TypeOfGroup, e.g. group, role, entity"
        },
        "displayExtension" : {
          "type" : "string",
          "example" : "Some group",
          "description" : "Display extension of group, the part to the right of last colon in display name.  This is the 'Name' in the UI"
        },
        "description" : {
          "type" : "string",
          "example" : "This group was created 1/2/2019 by John Smith for the Math department.",
          "description" : "Description field of group should contain documentation about the group"
        },
        "displayName" : {
          "type" : "string",
          "example" : "Applications:My app:Some group",
          "description" : "Fully qualified display name of the group ('Path' in the UI).  This contains all display extensions of parent folders separated by colons"
        },
        "name" : {
          "type" : "string",
          "example" : "app:myApp:someGroup",
          "description" : "Fully qualified system name of the group ('ID Path' in the UI).  This contains all the system extensions of parent folders separated by colons"
        },
        "uuid" : {
          "type" : "string",
          "example" : "abc123",
          "description" : "This is the unique unchanging opaque identifier of this group (max 40 chars)"
        },
        "alternateName" : {
          "type" : "string",
          "example" : "some:alternate:name",
          "description" : "If there is an alternate name assigned to this group, it will be listed here"
        },
        "detail" : {
          "description" : "If requested, these are the detail results of the group",
          "$ref" : "#/definitions/WsGroupDetail"
        },
        "idIndex" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Integer ID for object"
        },
        "enabled" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "if the group is enabled, T or F"
        },
        "enabledTime" : {
          "type" : "string",
          "example" : "2022/04/21 20:17:42.987",
          "description" : "Timestamp this group is enabled: yyyy/MM/dd HH:mm:ss.SSS"
        },
        "disabledTime" : {
          "type" : "string",
          "example" : "2021/03/15 18:41:18.123",
          "description" : "Timestamp this group is disabled: yyyy/MM/dd HH:mm:ss.SSS"
        }
      },
      "description" : "Result of one group being retrieved"
    },
    "WsGroupDeleteLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        }
      }
    },
    "WsGroupDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsGroupDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroupDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGroupDetail" : {
      "type" : "object",
      "properties" : {
        "hasComposite" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "if this group has a composite member, T|F"
        },
        "leftGroup" : {
          "description" : "Left group if this is a composite owner (note, detail will never be there in the leftGroup wsGroup)",
          "$ref" : "#/definitions/WsGroup"
        },
        "rightGroup" : {
          "description" : "Right group if this is a composite owner (note, detail will never be there in the rightGroup wsGroup)",
          "$ref" : "#/definitions/WsGroup"
        },
        "typeNames" : {
          "type" : "array",
          "description" : "Legacy types for this group, comma-separated",
          "items" : {
            "type" : "string"
          }
        },
        "attributeNames" : {
          "type" : "array",
          "description" : "Attribute names, not including the ones listed in the group result or detail",
          "items" : {
            "type" : "string"
          }
        },
        "attributeValues" : {
          "type" : "array",
          "description" : "Attribute values, not including the ones listed in the group result or detail",
          "items" : {
            "type" : "string"
          }
        },
        "compositeType" : {
          "type" : "string",
          "example" : "UNION | COMPLEMENT | INTERSECTION",
          "description" : "If this is a composite group, this is the composite type: UNION, COMPLEMENT, INTERSECTION"
        },
        "params" : {
          "type" : "array",
          "description" : "NA",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "createSubjectId" : {
          "type" : "string",
          "example" : "12345678",
          "description" : "ID of the subject that created this group"
        },
        "createTime" : {
          "type" : "string",
          "example" : "2021/03/15 18:41:18.123",
          "description" : "Create time in format: yyyy/mm/dd hh24:mi:ss.SSS"
        },
        "isCompositeFactor" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "If a composite member of another group 'T', else 'F'.  A composite group is composed of two groups and a set operator (stored in the grouper_composites table) (e.g. complement, intersection). A composite group has no immediate members. All subjects in a composite group are effective members."
        },
        "modifySource" : {
          "type" : "string",
          "example" : "NA",
          "description" : "Not used"
        },
        "modifySubjectId" : {
          "type" : "string",
          "example" : "12345678",
          "description" : "ID of the subject that last modified this group's attributes"
        },
        "modifyTime" : {
          "type" : "string",
          "example" : "2021/03/15 18:41:18.123",
          "description" : "Last modified time for this group. yyyy/mm/dd hh24:mi:ss.SSS"
        }
      },
      "description" : "Detail of group if requested from user"
    },
    "WsGroupLookup" : {
      "type" : "object",
      "properties" : {
        "idIndex" : {
          "type" : "string",
          "example" : "12345",
          "description" : "Integer ID for object"
        },
        "uuid" : {
          "type" : "string",
          "example" : "abc123",
          "description" : "UUID of the group to find ('UUID' from the UI)"
        },
        "groupName" : {
          "type" : "string",
          "example" : "some:group:name",
          "description" : "Group system name ('ID path' on UI) to search for, not the display name"
        }
      },
      "description" : "Template to lookup a group: groupName, uuid, and idIndex are mutually exclusive."
    },
    "WsGroupSaveLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        }
      }
    },
    "WsGroupSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsGroupSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGroupSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsGrouperPrivilegeResult" : {
      "type" : "object",
      "properties" : {
        "allowed" : {
          "type" : "string"
        },
        "ownerSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "privilegeName" : {
          "type" : "string"
        },
        "privilegeType" : {
          "type" : "string"
        },
        "revokable" : {
          "type" : "string"
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsGshOutputLine" : {
      "type" : "object",
      "properties" : {
        "messageType" : {
          "type" : "string"
        },
        "text" : {
          "type" : "string"
        }
      }
    },
    "WsGshTemplateExecResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "transaction" : {
          "type" : "boolean"
        },
        "gshValidationLines" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGshValidationLine"
          }
        },
        "gshOutputLines" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsGshOutputLine"
          }
        },
        "gshScriptOutput" : {
          "type" : "string"
        },
        "gshExitCode" : {
          "type" : "integer",
          "format" : "int32"
        },
        "wsOutput" : {
          "type" : "object"
        }
      }
    },
    "WsGshValidationLine" : {
      "type" : "object",
      "properties" : {
        "inputName" : {
          "type" : "string"
        },
        "validationText" : {
          "type" : "string"
        }
      }
    },
    "WsHasMemberLiteResult" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsHasMemberResult"
          }
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsHasMemberResult" : {
      "type" : "object",
      "properties" : {
        "wsSubject" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsHasMemberResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsHasMemberResult"
          }
        },
        "wsGroup" : {
          "$ref" : "#/definitions/WsGroup"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsMemberChangeSubjectLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "wsSubjectNew" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsSubjectOld" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsMemberChangeSubjectResult" : {
      "type" : "object",
      "properties" : {
        "wsSubjectNew" : {
          "$ref" : "#/definitions/WsSubject"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "wsSubjectOld" : {
          "$ref" : "#/definitions/WsSubject"
        }
      }
    },
    "WsMemberChangeSubjectResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMemberChangeSubjectResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "subjectAttributeNames" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsMembership" : {
      "type" : "object",
      "properties" : {
        "membershipId" : {
          "type" : "string"
        },
        "immediateMembershipId" : {
          "type" : "string"
        },
        "listName" : {
          "type" : "string"
        },
        "listType" : {
          "type" : "string"
        },
        "membershipType" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "string"
        },
        "enabledTime" : {
          "type" : "string"
        },
        "disabledTime" : {
          "type" : "string"
        },
        "memberId" : {
          "type" : "string"
        },
        "groupId" : {
          "type" : "string"
        },
        "ownerStemId" : {
          "type" : "string"
        },
        "ownerStemName" : {
          "type" : "string"
        },
        "ownerIdOfAttributeDef" : {
          "type" : "string"
        },
        "ownerNameOfAttributeDef" : {
          "type" : "string"
        },
        "subjectId" : {
          "type" : "string"
        },
        "subjectSourceId" : {
          "type" : "string"
        },
        "groupName" : {
          "type" : "string"
        },
        "createTime" : {
          "type" : "string"
        }
      }
    },
    "WsMessage" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string"
        },
        "fromMemberId" : {
          "type" : "string"
        },
        "messageBody" : {
          "type" : "string"
        }
      }
    },
    "WsMessageAcknowledgeResults" : {
      "type" : "object",
      "properties" : {
        "queueOrTopicName" : {
          "type" : "string"
        },
        "messageSystemName" : {
          "type" : "string"
        },
        "messageIds" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsMessageResults" : {
      "type" : "object",
      "properties" : {
        "queueOrTopicName" : {
          "type" : "string"
        },
        "messageSystemName" : {
          "type" : "string"
        },
        "messages" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsMessage"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsParam" : {
      "type" : "object",
      "properties" : {
        "paramName" : {
          "type" : "string",
          "description" : "Parameter name"
        },
        "paramValue" : {
          "type" : "string",
          "description" : "Parameter value"
        }
      },
      "description" : "Name value pairs"
    },
    "WsPermissionAssign" : {
      "type" : "object",
      "properties" : {
        "limits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsPermissionLimit"
          }
        },
        "detail" : {
          "$ref" : "#/definitions/WsPermissionAssignDetail"
        },
        "action" : {
          "type" : "string"
        },
        "permissionType" : {
          "type" : "string"
        },
        "attributeDefNameId" : {
          "type" : "string"
        },
        "attributeDefNameName" : {
          "type" : "string"
        },
        "attributeDefId" : {
          "type" : "string"
        },
        "attributeDefName" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "string"
        },
        "attributeAssignId" : {
          "type" : "string"
        },
        "roleId" : {
          "type" : "string"
        },
        "roleName" : {
          "type" : "string"
        },
        "subjectId" : {
          "type" : "string"
        },
        "sourceId" : {
          "type" : "string"
        },
        "membershipId" : {
          "type" : "string"
        },
        "allowedOverall" : {
          "type" : "string"
        },
        "disallowed" : {
          "type" : "string"
        }
      }
    },
    "WsPermissionAssignDetail" : {
      "type" : "object",
      "properties" : {
        "heuristicFriendlyScore" : {
          "type" : "string"
        },
        "roleSetDepth" : {
          "type" : "string"
        },
        "membershipDepth" : {
          "type" : "string"
        },
        "attributeDefNameSetDepth" : {
          "type" : "string"
        },
        "actionDepth" : {
          "type" : "string"
        },
        "permissionDelegatable" : {
          "type" : "string"
        },
        "disabledTime" : {
          "type" : "string"
        },
        "enabledTime" : {
          "type" : "string"
        },
        "assignmentNotes" : {
          "type" : "string"
        },
        "memberId" : {
          "type" : "string"
        },
        "actionId" : {
          "type" : "string"
        },
        "immediateMembership" : {
          "type" : "string"
        },
        "immediatePermission" : {
          "type" : "string"
        }
      }
    },
    "WsPermissionLimit" : {
      "type" : "object",
      "properties" : {
        "wsAttributeAssignValues" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsAttributeAssignValue"
          }
        },
        "attributeAssignId" : {
          "type" : "string"
        },
        "attributeDefNameId" : {
          "type" : "string"
        },
        "attributeDefNameName" : {
          "type" : "string"
        }
      }
    },
    "WsQueryFilter" : {
      "type" : "object",
      "properties" : {
        "typeOfGroups" : {
          "type" : "string",
          "example" : "group|role|entity",
          "description" : "Comma separated type of groups can be an enum of TypeOfGroup, e.g. group, role, entity"
        },
        "pageSize" : {
          "type" : "string",
          "example" : "100",
          "description" : "Page size if paging"
        },
        "pageNumber" : {
          "type" : "string",
          "example" : "1",
          "description" : "Page number 1 indexed if paging"
        },
        "sortString" : {
          "type" : "string",
          "example" : "name | displayName | extension | displayExtension",
          "description" : "Must be an hql query field, e.g. can sort on name, displayName, extension, displayExtension"
        },
        "ascending" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "T or null for ascending, F for descending.  If you pass true or false, must pass a sort string"
        },
        "queryFilterType" : {
          "type" : "string",
          "example" : "FIND_BY_GROUP_UUID | FIND_BY_GROUP_NAME_EXACT | FIND_BY_STEM_NAME | FIND_BY_APPROXIMATE_ATTRIBUTE | FIND_BY_ATTRIBUTE | FIND_BY_GROUP_NAME_APPROXIMATE | FIND_BY_TYPE | AND | OR | MINUS",
          "description" : "findGroupType is the WsQueryFilterType enum for which type of find is happening: e.g. FIND_BY_GROUP_UUID, FIND_BY_GROUP_NAME_EXACT, FIND_BY_STEM_NAME, FIND_BY_APPROXIMATE_ATTRIBUTE, FIND_BY_ATTRIBUTE,  FIND_BY_GROUP_NAME_APPROXIMATE, FIND_BY_TYPE, AND, OR, MINUS"
        },
        "groupName" : {
          "type" : "string",
          "example" : "some:group:name",
          "description" : "groupName search by group name (must match exactly), cannot use other params with this"
        },
        "stemName" : {
          "type" : "string",
          "example" : "some:parent:folder:name",
          "description" : "Will return groups only in this stem (by name)"
        },
        "stemNameScope" : {
          "type" : "string",
          "example" : "ONE_LEVEL | ALL_IN_SUBTREE",
          "description" : "if searching by stem, ONE_LEVEL is for one level, ALL_IN_SUBTREE will return all in sub tree. Default is ALL_IN_SUBTREE"
        },
        "groupUuid" : {
          "type" : "string",
          "example" : "abc123",
          "description" : "groupUuid search by group uuid (must match exactly)"
        },
        "groupAttributeValue" : {
          "type" : "string",
          "example" : "someValue",
          "description" : "The attribute value to filter on if querying by attribute and value"
        },
        "groupAttributeName" : {
          "type" : "string",
          "example" : "some:attribute:name",
          "description" : "This is the attribute name, or null for search all attributes.  This could be a legacy attribute or an attributeDefName of a string valued attribute"
        },
        "groupTypeName" : {
          "type" : "string",
          "example" : "NA",
          "description" : "not implemented"
        },
        "queryFilter0" : {
          "description" : "If 'and' or 'or' this is the first group, and if complement, this is the group to complement",
          "$ref" : "#/definitions/WsQueryFilter"
        },
        "queryFilter1" : {
          "description" : "if 'and' or 'or', this is the second group",
          "$ref" : "#/definitions/WsQueryFilter"
        },
        "pageIsCursor" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "T|F default to F.  if this is T then we are doing cursor paging"
        },
        "pageLastCursorField" : {
          "type" : "string",
          "example" : "abc123",
          "description" : "Field that will be sent back for cursor based paging"
        },
        "pageLastCursorFieldType" : {
          "type" : "string",
          "example" : "string|int|long|date|timestamp",
          "description" : "Could be: string, int, long, date, timestamp"
        },
        "pageCursorFieldIncludesLastRetrieved" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "If cursor field is unique, this should be false.  If not, then should be true.  i.e. if should include the last cursor field in the next resultset"
        },
        "enabled" : {
          "type" : "string",
          "example" : "A|T|F",
          "description" : "enabled is A for all, T or null for enabled only, F for disabled"
        },
        "queryTerm" : {
          "type" : "string",
          "example" : "some:group:name",
          "description" : "queryTerm if searching by query, this is a term that will be matched to name, extension, etc"
        }
      },
      "description" : "this represents a query which can be and'ed or or'ed.  Can also pass in other params."
    },
    "WsResponseMeta" : {
      "type" : "object",
      "properties" : {
        "resultWarnings" : {
          "type" : "string",
          "description" : "If there are warnings, they will be here"
        },
        "millis" : {
          "type" : "string",
          "example" : "123",
          "description" : "Milliseconds this operation took on server"
        },
        "serverVersion" : {
          "type" : "string",
          "example" : "2.6.1",
          "description" : "The version of Grouper on the server"
        }
      },
      "description" : "Response metadata (version, warnings, millis, etc)"
    },
    "WsRestFindGroupsRequest" : {
      "type" : "object",
      "properties" : {
        "wsQueryFilter" : {
          "description" : "Query filter for request",
          "$ref" : "#/definitions/WsQueryFilter"
        },
        "clientVersion" : {
          "type" : "string",
          "example" : "v2_6_001",
          "description" : "Version of the client (i.e. that the client was coded against)"
        },
        "actAsSubjectLookup" : {
          "description" : "If allowed to act as other users (e.g. if a UI uses the Grouper WS behind the scenes), specify the user to act as here",
          "$ref" : "#/definitions/WsSubjectLookup"
        },
        "includeGroupDetail" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "If the group detail should be returned, default to false"
        },
        "params" : {
          "type" : "array",
          "example" : "NA",
          "description" : "Optional params for this request",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "wsGroupLookups" : {
          "type" : "array",
          "description" : "wsGroupLookups if you want to just pass in a list of uuids and/or names.  Note the groups are returned in alphabetical order",
          "items" : {
            "$ref" : "#/definitions/WsGroupLookup"
          }
        }
      },
      "description" : "bean that will be the data from rest request for finding groups"
    },
    "WsRestFindGroupsRequestWrapper" : {
      "type" : "object",
      "properties" : {
        "WsRestFindGroupsRequest" : {
          "description" : "Identifies the request as a findGroups request",
          "$ref" : "#/definitions/WsRestFindGroupsRequest"
        }
      },
      "description" : "Request body to find groups"
    },
    "WsResultMeta" : {
      "type" : "object",
      "properties" : {
        "params" : {
          "type" : "array",
          "description" : "NA",
          "items" : {
            "$ref" : "#/definitions/WsParam"
          }
        },
        "resultCode" : {
          "type" : "string",
          "example" : "SUCCESS",
          "description" : "This set of result codes is dependent on which operation is called and the status"
        },
        "resultCode2" : {
          "type" : "string",
          "description" : "If a second result code is needed for the operation and status, it will be listed here"
        },
        "resultMessage" : {
          "type" : "string",
          "description" : "Error message if there is an error"
        },
        "success" : {
          "type" : "string",
          "example" : "T|F",
          "description" : "T or F as to whether it was a successful operation.  i.e. if there was a problem this will be F"
        }
      },
      "description" : "Result code, if success, status code, result message"
    },
    "WsResultsError" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "description" : "Result code, if success, status code, result message",
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "description" : "Server version, millis elapsed on server, and warnings",
          "$ref" : "#/definitions/WsResponseMeta"
        }
      },
      "description" : "Response when not successful contains error message and metadata"
    },
    "WsStem" : {
      "type" : "object",
      "properties" : {
        "idIndex" : {
          "type" : "string"
        },
        "extension" : {
          "type" : "string"
        },
        "displayExtension" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "displayName" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "uuid" : {
          "type" : "string"
        }
      }
    },
    "WsStemDeleteLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        }
      }
    },
    "WsStemDeleteResult" : {
      "type" : "object",
      "properties" : {
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsStemDeleteResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStemDeleteResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsStemSaveLiteResult" : {
      "type" : "object",
      "properties" : {
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        },
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        }
      }
    },
    "WsStemSaveResult" : {
      "type" : "object",
      "properties" : {
        "wsStem" : {
          "$ref" : "#/definitions/WsStem"
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        }
      }
    },
    "WsStemSaveResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/WsStemSaveResult"
          }
        },
        "resultMetadata" : {
          "$ref" : "#/definitions/WsResultMeta"
        },
        "responseMetadata" : {
          "$ref" : "#/definitions/WsResponseMeta"
        }
      }
    },
    "WsSubject" : {
      "type" : "object",
      "properties" : {
        "identifierLookup" : {
          "type" : "string"
        },
        "resultCode" : {
          "type" : "string"
        },
        "success" : {
          "type" : "string"
        },
        "memberId" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "sourceId" : {
          "type" : "string"
        },
        "attributeValues" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "WsSubjectLookup" : {
      "type" : "object",
      "properties" : {
        "subjectId" : {
          "type" : "string",
          "example" : "12345678",
          "description" : "subjectId is mutually exclusive with subjectIdentifier.  This is specific to your institution.  Might be the employeeId.  You should also pass in a subjectSourceId"
        },
        "subjectIdentifier" : {
          "type" : "string",
          "example" : "jsmith",
          "description" : "subjectIdentifier is mutually exclusive with subjectId.  This is specific to your institution.  Might be the netId.  If you can use subjectId, you should use that, if not, use this.  You should also pass in a subjectSourceId"
        },
        "subjectSourceId" : {
          "type" : "string",
          "example" : "myInstitutionsPeople",
          "description" : "subjectSourceId is specific to your institution.  Ask your Grouper admins which subjectSourceId to you, or can find it in the UI where you import subjects"
        }
      },
      "description" : "template to lookup a subject.  note if subjectId and subjectIdentifier are filled in with the same value, it will find by subject id or identifier.  To lookup a group as a subject use g:gsa as the source id, then either use the group uuid (e.g. fa2dd790-d3f9-4cf4-ac41-bb82e63bff66) in the subject id of the subject lookup, or the group system name as the subject identifier."
    }
  }
}