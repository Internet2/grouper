
# Grouper Development TODO List

This file provides more detailed information on future Grouper
development as listed in _doc/ROADMAP_..

$Id: TODO,v 1.53 2006-05-26 17:15:13 blair Exp $

---

## Grouper 1.0

### Bugs
* Privileges are not applied to `Composite` objects, including getters
* Logging of composite membership changes
* Membership UUIDs can change, especially in effective mships and
  possibly when updating composites

### Next Actions
* code: add `Group.canReadField(Subject, Field)`
* code: add `Group.canWriteField(Subject, Field)`
* code: add intersection composites
* code: add `ErrorLog`
* code: add `Stem.canCreate(Subject)`
* code: add `Stem.canStem(Subject)`
* code: add complement composites
* code: add `Group.canAdmin(Subject)`
* code: add `Group.canOptin(Subject)`
* code: add `Group.canOptout(Subject)`
* code: add `Group.canRead(Subject)`
* code: add `Group.canUpdate(Subject)`
* code: add `Group.canView(Subject)`
* review: FIXMEs
* review: TODOs
* code: delete custom group types
* test: basic and preliminary concurrency testing (i expect to find many bugs)
* code: add `Group.getTypes()` that will return all types that the
  group has, including base but excluding internal types
* code: add `Group.getRemovableTypes()` that will return all types
  that can be removed from the group
* contrib: confirm that cdg still works and if possible add token expansion of features
* refactor: review (and remove if possible) all RTEs

### Later || Maybe
* document: add `@since` to javadoc (just diff `doc/API`? for now
  since i've been failing to add this?)
* packaging: create binary-and-source distributions
* code: improved API support for XML import+export
* code: class to verify that setup is functional
** find the root stem, exercise subject api, hibernate dialect + driver class, etc
* code: delete _HibernateSubject_ objects
* code: modify _HibernateSubject_ objects
* code: start populating `Membership` creator
* code: privilege query filters
* refactor: internal root sessions should not need to go through hibernate
* refactor: privilege checking and caching
** `NamingResolver`
** `AccessResolver`
** Hibernate-backed `PrivilegeCache`
* code: add `DebugLog`

---

## Grouper 1.1
* code: add group aging
* code: add membership aging
* code: add XML event log

---

## Future Releases 

These items are not (necessarily) in any particular order.

### API
* refactor: unhibernate `GrouperSession`
* code: enable batch fetching of `Membership` objects
* code: order `Membership` queries by depth
* code: add caching support to `SubjectFinder` methods that query by source
* code: Don't assign `GrouperSystem` privileges
* library: update [jug](http://jug.safehaus.org/)
* code: add `GrouperDaemon`
** support for asynchronous methods
** support for registry integrity validation
* code: expose `HibernateSubject`
* code: ws version of `GrouperSourceAdapter`
* code: make cache usage more configurable
* code: improved internal API model validation
* code: `StemCreatedByFilter`
* code: `StemModifiedByFilter`
* code: `GroupCreatedByFilter`
* code: `GroupModifiedByFilter`
* code: `IsMemberFilter`
* code: `IsImmediateMemberFilter`
* code: `IsEffectiveMemberFilter`
* code: ws-ify API
* code: member aging
* code: `Stem.addChildStem()` that takes an optional argument to
  override configuration defaults
* code: `Stem.addChildGroup()` that takes an optional argument to
  override configuration defaults
* code: session proxying/"act as" support
* code: search limits
* code: paged search results
* code: group hierarchy depth restrictions
* code: make at least some events (mships, privs, children) observable for notification purposes
* code: allow custom attributes and lists to be associated with more than one group type
* code: rule-engine support and/or support for both enable- and disable-based aging

## Contributed Code
* code: flatfile source adapter 
* code `LaxAccessAdapter`
* code `LaxNamingAdapter`
* code: dns source adapter 

---

$Id: TODO,v 1.53 2006-05-26 17:15:13 blair Exp $





