
# Grouper Development TODO List

This file provides more detailed information on what Grouper
development work needs to be done.

$Id: TODO,v 1.26 2006-02-03 18:33:16 blair Exp $

---

## Grouper 1.0

### BUGS
* ADMIN on group should be able to adjust group types (@doc) [DEBUGGING@SCHEDULE]
* Do not allow assignment of _naming_ group type [DEBUGGING@SCHEDULE]

### Improved update performance through introduction of grouperd
* Create grouperd daemon process
* Add transaction mapping
* Add transaction runner with support for eff mships
* Add transaction runner with support for group math
* Allow listing of active + failed transactions
* Allow shutdown of grouperd
* @doc

### Group Math
* Have _Factor_, _Group_ and _Stem_ extend _Owner_
* Redefine _Membership_ Hibernate mapping
* add factor
* delete factor
* testing
* hasFactor()
* isFactor()
* @doc

### Basic XML export-and-import of Groups Registry
Right now it looks like Gary is handling (all|most) of this for 1.0.

### Filler
* _ErrorLog_
* Unhibernate Grouper sessions
* Performance profiling
** Enable batch fetching of Memberships
* _StemAttribute_ filter
* Delete empty stems

---

## Future Releases
* Stem: _addChildGroup()_ and _addChildStems()_ should take an optional
  Properties arg that would override configuration defaults
* Rework _PrivilegeCache_ so that I can expire individual entries
  instead of the full cache
* _DebugLog_
* Config options for cache flushing (and do I flush on revoke all?)
* Search by the set of groups or namespaces created or modified
  by a specified subject [S&B#12]
* Search by the set of groups to which a given subject is an immediate 
  member can be listed [S&B#9]
* Search by the set of groups to which a given subject is an effective 
  member can be listed [S&B#10]
* Paged search results
* Group Hierarchy depth restrictions
* Search limits
* Removal of members that are no longer in use 

### DRY
* Member: isMember(), isImmediateMember() and isEffectiveMember()
* Membership: addImmediateMembership()
* Membership: delImmediateMembership()
* Membership: deleteAllField()
* Privilege: canWriteField()
* Session proxying

### Aesthetics
* FieldFinder: cache findAll()
* Group: _deleteAttribute() naming attr handling
* GrouperSubject: _addAttr() attr + value validation
* Member: toGroup()
* PrivilegeResolver: canVIEW()
* Stem: addChildGroup() updates modify* attrs of child
* Stem: addChildStem() updates modify* attrs of child
* Stem: constructName()
* StemFinder: isChild()
* Test helper methods

