
# Grouper Development TODO List

This file provides more detailed information on what Grouper
development work needs to be done.

$Id: TODO,v 1.41 2006-03-28 20:18:55 blair Exp $

---

## Grouper 1.0

### BUGS
* wrong epoch?
** testGetStartTime(test.edu.internet2.middleware.grouper.TestGrouperSession) start time != epoch
** testGetCreateAttrs(test.edu.internet2.middleware.grouper.TestStem) create time != epoch

### Next Actions
* code: complete `UnionFactor` addition and deletion support
* code: add `ComplementFactor` support
* code: add `IntersectionFactor` support
* code: add factor logging
* code: add `GroupTypeFinder.findAllAssignable()` that will return all
  assignable types
* code: add internal `TxStatus` class
* code: empty stem deletion
* code: start-and-stop `GrouperDaemon` via API
* code: class to verify that setup is functional
** find the root stem, exercise subject api, etc
* code: add `SubjectFinder.findById(id, type, source)`
* code: add `SubjectFinder.findByIdentifier(id, type, source)`
* code: add `SubjectFinder.findAll(query, source)`
* code: replace `GroupType.addField()` with `GroupType.addAttribute()` and `GroupType.addList()`
* code: make `GrouperDaemon` a singleton
* code: do not shutdown hsqldb in server mode if not using embedded db
* test: deletion of a group with pending tx
* test: concurrent operations (i expect to find bugs)
* code: add `Group.canReadField(f)`
* code: add `Group.canReadField(f, subj)`
* code: add `Group.canWriteField(f)`
* code: add `Group.canWriteField(f, subj)`
* code: add `Group.getTypes()` that will return all types that the
  group has, including base but excluding internal types
* code: add `Group.getRemovableTypes()` that will return all types
  that can be removed from the group
* document: _Using The Grouper API_

### Maybe
* code: `StemAttributeFilter`
* code: `ErrorLog`
* code: `DebugLog`
* code: make thread sleep times (invisibly) configurable
* code: `Owner`-related cleanup
* packaging: create binary-and-source distributions
* code: unhibernate `GrouperSession`
* code: enable batch fetching of `Membership` objects
* code: order `Membership` queries by depth
* code: Don't assign `GrouperSystem` privileges
* document: add `@since` to javadoc
* library: update [jug](http://jug.safehaus.org/)

---

## Grouper 1.0.1
* code: Grouper 1.0 bugfixes
* code: import of operational attributes from xml

---

## Grouper 1.1
* code: add group aging
* code: add membership aging

---

## Future Releases 

### API
* code: expose `HibernateSubject`
* code: ws version of `GrouperSourceAdapter`
* code: refactor `PrivilegeCache`
* code: make cache usage more configurable
* code: improved internal API model validation
* code: `StemCreatedByFilter`
* code: `StemModifiedByFilter`
* code: `GroupCreatedByFilter`
* code: `GroupModifiedByFilter`
* code: `IsMemberFilter`
* code: `IsImmediateMemberFilter`
* code: `IsEffectiveMemberFilter`
* code: ws-ify API
* code: member aging
* code: `Stem.addChildStem()` that takes an optional argument to
  override configuration defaults
* code: `Stem.addChildGroup()` that takes an optional argument to
  override configuration defaults
* code: session proxying/"act as" support
* code: search limits
* code: paged search results
* code: group hierarchy depth restrictions
* code: delete custom group types

## Contributed Code
* code: flatfile source adapter 
* code `LaxAccessAdapter`
* code `LaxNamingAdapter`
* code: dns source adapter 



