
# Grouper Development TODO List

This file provides more detailed information on future Grouper
development as listed in _doc/ROADMAP_..

$Id: TODO,v 1.81 2006-06-23 13:38:58 blair Exp $

---

## Grouper 1.0

### Next Actions
* TEST      oracle
* PACKAGING versionize third party .jar files
* CONTRIB   complete cdg 1.0 feature list
* LIBRARIES update subject api
* CODE      Fix some issues reported by FindBugs, PMD and CPD
* TEST      basic and preliminary concurrency testing (i expect to find many bugs)
* REVIEW    FIXMEs
* REVIEW    TODOs

### Later || Maybe
* CODE      logging++
* CODE      Migrate error messages to *E*
* CODE      Migrate messages to *M*
* CODE      Switch to *IllegalArgumentException* and *NullArgumentException*
* PACKAGING create binary-and-source distributions
* CODE      improved API support for XML import+export
* CODE      class to verify that setup is functional
** find the root stem, exercise subject api, hibernate dialect + driver class, etc
* CODE      delete _HibernateSubject_ objects
* CODE      modify _HibernateSubject_ objects
* CODE      start populating `Membership` creator
* CODE      privilege query filters
* REFACTOR  internal root sessions should not need to go through hibernate
* REFACTOR  privilege checking and caching
** `NamingResolver`
** `AccessResolver`

---

## Grouper 1.1
* CODE      add group aging
* CODE      add membership aging
* CODE      add XML event log

---

## Future Releases 

These items are not (necessarily) in any particular order.

### API
* REFACTDOR unhibernate `GrouperSession`
* CODE      enable batch fetching of `Membership` objects
* CODE      order `Membership` queries by depth
* CODE      add caching support to `SubjectFinder` methods that query by source
* CODE      Don't assign `GrouperSystem` privileges
* CODE      add `GrouperDaemon`
** support for asynchronous methods
** support for registry integrity validation
* CODE      ws version of `GrouperSourceAdapter`
* CODE      make cache usage more configurable
* CODE      improved internal API model validation
* CODE      `StemCreatedByFilter`
* CODE      `StemModifiedByFilter`
* CODE      `GroupCreatedByFilter`
* CODE      `GroupModifiedByFilter`
* CODE      `IsMemberFilter`
* CODE      `IsImmediateMemberFilter`
* CODE      `IsEffectiveMemberFilter`
* CODE      ws-ify API
* CODE      member aging
* CODE      `Stem.addChildStem()` that takes an optional argument to
  override configuration defaults
* CODE      `Stem.addChildGroup()` that takes an optional argument to
  override configuration defaults
* CODE      session proxying/"act as" support
* CODE      search limits
* CODE      paged search results
* CODE      group hierarchy depth restrictions
* CODE      make at least some events (mships, privs, children) observable for notification purposes
* CODE      allow custom attributes and lists to be associated with more than one group type
* CODE      rule-engine support and/or support for both enable- and disable-based aging

### Internals
* DB        Keep schema version accurate
* REFACTOR  Deprecate `Membership.newEffectiveMembership(s, ms, hasMS, offset)`
* REFACTOR  Deprecate *GrouperSessionFinder*
* REFACTOR  Deprecate `GrouperSession.validate()`
* REFACTOR  Make *ErrorLog* static
* REFACTOR  *GrouperConfig*
* REFACTOR  Deprecate the !*ModelException* throwing `Owner.setSession(s)`
* REFACTOR  `PrivilegeResolver.isRoot(subj)`
* REFACTOR  `StemValidator.canWriteField()` should not require a session argument
* REFACTOR  `GroupValidator.canReadField()` and
  `GroupValidator.canWriteField()` should not require a session argument
* REFACTOR  Deprecate-or-relocate most methods in *Validator*
* CODE      Cache results of `SubjectFinder.findById(id, type, source)`
* CODE      Cache results of `SubjectFinder.findByIdentifier(id, type, source)`
* CODE      Cache results of `SubjectFinder.findAll(query, source)`
* REFACTOR  Do not add test subjects in *RegistryReset*
** In particular the ehcache + hibernate query related constants
* CODE      Generic privilege and subject cache, presumably backed by ehcache and possibly Hibernate
** Do not flush all cached privileges upon every privilege grant-and-revoke

### Contributed Code
* CODE      flatfile source adapter 
* CODE      `LaxAccessAdapter`
* CODE      `LaxNamingAdapter`
* CODE      dns source adapter 

### Other
* LIBRARIES update *log4j* and *commons-logging*
* LIBRARIES update [jug](http://jug.safehaus.org/)

---

$Id: TODO,v 1.81 2006-06-23 13:38:58 blair Exp $

