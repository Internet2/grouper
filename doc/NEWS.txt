
# Grouper News

$Id: NEWS.txt,v 1.13 2006-08-16 20:22:10 blair Exp $

---

# Grouper 1.1.0-cvs

Released: TBD

## Changes
* NEW:    `GroupModifiedAfter` query filter
* NEW:    `GroupModifiedBefore` query filter
* BUGFIX: Inappropriate privilege checks in *Stem.getCreators()* and
  *Stem.getStemmers(). [GCODE#10]
* BUGFIX: *Group.getRemovableTypes()* made incorrect privilege check. [GCODE#11]
* NEW:    Upgraded to `lib/i2mi-common-0.1.0.jar`.  This replaces:
    * `lib/commons-beanutils-1.6.jar` 
    * `lib/commons-collections-3.1.jar`
    * `lib/commons-digester-1.6.jar`
* NEW:    Added `lib/i2mi-common-0.0.1.jar`.  This contains:
    * cglib-nodep-2.1_03.jar
    * commons-dbcp-1.2.1.jar
    * commons-logging-1.1.jar
    * commons-pool-1.3.jar
    * dom4j-1.6.1.jar
    * junit-4.1.jar
    * odmg-3.0.jar
* UPDATE: Removed `lib/cglib-full-2.0.2.jar`
* UPDATE: Removed `lib/commons-dbcp-1.2.1.jar`
* UPDATE: Removed `lib/commons-logging-1.0.4.jar`
* UPDATE: Removed `lib/commons-pool-1.2.jar`
* UPDATE: Removed `lib/dom4j-1.4.jar`
* UPDATE: Removed `lib/junit-3.8.1.jar`
* UPDATE: Removed `lib/odmg-3.0.jar`

---

# Grouper 1.0

Released: 20060720

## Changes
* BUGFIX: Naming privileges not properly exported to XML. [Gary Brown]
* BUGFIX: Improper calculation of forward effective memberships to delete.
* BUGFIX: Improper setting of parent membership in select effective memberships.
* BUGFIX: Improper calculation of select child memberships to delete when
  deleting an immediate memberships.
* NEW:  Added *GrouperShell* (located in `contrib/gsh`).  *gsh* is a
  command-line shell that may be used in a batch or interactive manner to
  interact with and manipulate the Groups Registry.
* UPDATE: Updated Subject API to version 0.2.1.
* NEW:  Basic integration of Gary Brown's XML export and import code.
* BUGFIX: Fixed another Hibernate lazy collection initiialization error
  that was brought to light by work on *cdg*.
* BUGFIX: Improper calculation of *Membership* UUIDs when deleting memberships.
* BUGFIX: `Group.delete()` did not remove composites.
* BUGFIX: `Membership.getViaGroup()` does not handle composites
* NEW:  Added *CompositeFinder*
* NEW:  Added `CompositeFinder.findAsFactor()`
* NEW:  Added `CompositeFinder.findAsOwner()`
* NEW:  Added `Composite.getLeftGroup()`
* NEW:  Added `Composite.getOwnerGroup()`
* NEW:  Added `Composite.getRightGroup()`
* NEW:  Added `Composite.getType()`
* NEW:  Added `MembershipFinder.findCompositeMembership(GrouperSession, Group, Subject)`
* NEW:  Added `Group.getCompositeMembers()`
* NEW:  Added `Group.getCompositeMemberships()`
* NEW:  Added `Group.getRemovableTypes()` that will return all group
  types that can be removed by the current subject.
* UPDATE: `Group.getTypes()` will not return internal group types.
* NEW:  Added `GroupType.delete(Session)`
* BUGFIX: The *Member* returned by `GrouperSession.getMembers()` would
  not have a *GrouperSession* associated with it.
* NEW:  Added `Member.canCreate(Subject)`.
* NEW:  Added `Member.canStem(Subject)`.
* NEW:  Added `Member.canAdmin(Subject)`.
* NEW:  Added `Member.canOptin(Subject)`.
* NEW:  Added `Member.canOptout(Subject)`.
* NEW:  Added `Member.canRead(Subject)`.
* NEW:  Added `Member.canUpdate(Subject)`.
* NEW:  Added `Member.canView(Subject)`.
* NEW:  Error Log
* NEW:  Debug Log
* NEW:  Added support for composite memberships (complements, intersections, unions) to groups.
* NEW:  Added `Group.canReadField(Field)`.
* NEW:  Added `Group.canReadField(Subject, Field)`.
* NEW:  Added `Group.canWriteField(Field)`.
* NEW:  Added `Group.canWriteField(Subject, Field)`.
* UPDATE: Hibernate configuration moved to `conf/grouper.hibernate.properties`.
* NEW:  Added _HibernateSubject_ for adding I2MI Subjects to the JDBC
  Source Adapter table within the Groups Registry.
* BUGFIX: Several indices had gone missing in the Hibernate mapping
  files as a result of various configuration changes over the past
  months.
* NEW: With an eye towards hopefully making migrations easier in
  the future, we are now storing the schema version number in the
  database.
* NEW: _StemDisplayExtensionFilter_.
* NEW: _StemDisplayNameFilter_.
* NEW: _StemExtensionFilter_
* NEW: _StemNameFilter_
* UPDATE: Renamed _StemNameFilter_ to _StemNameAnyFilter_
* NEW: `Stem.delete()` allows empty stems to be deleted.
* UPDATE: Replaced `GroupType.addField()` with `GroupType.addAttribute()`
  and `GroupType.addList()`.
* NEW: `SubjectFinder.findAll(query, source)` method.
* NEW: `SubjectFinder.findByIdentifier(id, type, source)` method.
* NEW: `SubjectFinder.findById(id, type, source)` method.
* NEW: `SubjectFinder.getSource(id)` method.
* NEW: `SubjectFinder.getSources(type)` method.
* NEW: `SubjectFinder.getSources()` method.
* NEW: `GroupTypeFinder.findAllAssignable()` returns all assignable group types.
* NEW: _Group_ and _Stem_ extend from common parent: _Owner_.
* UPDATE: Restore `GroupTypeFinder.findAll()` - return all public group types
* BUGFIX: Several tests that were **supposed** to be testing against
  the epoch were not.  This was selectively causing errors while
  running the test harness, primarily on Windows.
* UPDDATE: Remove (outdated) schema files.
* BUGFIX: Do not allow lists to be added to themselves.
* BUGFIX: Moved _GrouperSourceAdapter_ configuration back into
  `sources.xml` to fix integration with Signet.
* NEW: Delete custom fields from custom group types with the API
* NEW: Add custom fields (attributes and lists) to custom group types 
  with the API
* NEW: Add custom group types with the API
* NEW: Cache all Hibernate queries with ehcache
* NEW: Converted all Hibernate `find()` queries into `createQuery()` queries
* BUGFIX: Clarify expected error output in test results
* BUGFIX: Eliminate Hibernate exception when renaming stems with
  multiple child groups
* BUGFIX: Split jdbc source initialization into separate ant task
* BUGFIX: I2MI Subject interface log4j configuration

---

# Grouper 0.9

Released: 20051219

## Changes
* NEW: New public API.
* NEW: New query API.  This includes the ability for sites to create
  their own custom query filters for use within the query API.
* NEW: New access and naming adapter APIs and interfaces.
* NEW: "all" subject that can be assigned memberships and granted
  privileges that maps to all subjects that are identifiable by
  Grouper's Subject API configuration.
* NEW: Event logging
* NEW: Configuration options for controlling what privileges, if any,
  are granted to the "all" subject whenever a new group or stem is
  created.  By default, _READ_ and _VIEW_ are granted to "all" upon
  group creation and no privileges are granted to "all" upon stem
  creation.
* NEW: Subject IDs associated with _Member_ objects within the Groups
  Registry can now be changed with the _Member.setSubjectId()_ method.
* NEW: Internal source adapter for resolving the "root" (_GrouperSystem_)
  and "all" (_GrouperAll_) subjects.  No configuration is necessary to use
  this adapter within Grouper.
* NEW: Experimental wheel-group support.  This is disabled by default.
  If enabled, all members of the group are treated as root-like
  subjects with all access and naming privileges.
* UPDATE: New internals.
* UPDATE: ehcache-based caches for access and naming privilege resolution.
* UPDATE: Grouper source adapter no longer needs to be configured
  within _conf/sources.xml_.
* UPDATE: License changed to Apache License, Version 2.0

---

# Grouper 0.6

Released 20050916

## Changes

* NEW: VIEW Access privilege (#339)
* NEW: READ Access privilege (#338)
* NEW: OPTIN Access privilege (#343)
* NEW: OPTOUT Access privilege (#344)
* NEW: _GrouperGroup.getDisplayExtension()_ method
* NEW: _GrouperGroup.getDisplayName()_ method
* NEW: _GrouperGroup.getExtension()_ method
* NEW: _GrouperGroup.getMembers()_ method
* NEW: _GrouperGroup.getName()_ method
* NEW: _GrouperGroup.getStem()_ method
* NEW: _GrouperMember.getMember()_ method
* NEW: _GrouperMember.source()_ method
* NEW: _GrouperQuery.base()_ filter method
* NEW: _GrouperQuery.group()_ filter method
* NEW: _GrouperQuery.group()_ scoped filter method (#403)
* NEW: _GrouperQuery.groupAttr()_ filter method
* NEW: _GrouperQuery.groupAttr()_ scoped filter method (#403)
* NEW: _GrouperQuery.stem()_ filter method
* NEW: _GrouperQuery.stem()_ scoped filter method (#403)
* NEW: _GrouperQuery.stemAttr()_ filter method
* NEW: _GrouperQuery.stemAttr()_ scoped filter method (#403)
* NEW: _GrouperQuery.getGroups()_ method
* NEW: _GrouperQuery.getListValues()_ method
* NEW: _GrouperQuery.getMembers()_ method
* NEW: _GrouperQuery.getStems()_ method
* NEW: _GrouperStem.create(session, extension)_ method
* NEW: _GrouperStem.getDisplayExtension()_ method
* NEW: _GrouperStem.getDisplayName()_ method
* NEW: _GrouperStem.getExtension()_ method
* NEW: _GrouperStem.getMembers()_ method
* NEW: _GrouperStem.getName()_ method
* NEW: _GrouperStem.getRootStems()_ method
* NEW: _GrouperStem.getStem()_ method
* NEW: _GrouperStem.load(session, extension)_ method
* NEW: PostgreSQL now a supported backend (#169)
  (Simon McLeish, London School of Economics)
* NEW: _displayName_ is now automatically populated and maintained (#270)
* NEW: _Subject_ and _SubjectAttribute_ tables 

* UPDATE: Grouper now uses version 0.1 draft 2 of the _Subject_ API
  specification
* UPDATED: Reimplemented UPDATE Access privilege (#400)
* UPDATED: Reimplemented ADMIN Access privilege (#399)
* UPDATED: Reimplemented CREATE Naming privilege (#401)
* UPDATED: Reimplemented STEM Naming privilege (#402)
* UPDATE: _Grouper.hasSubjectType()_ method replaced by _SubjectFactory.hasType()_
* UPDATE: _Grouper.subjectTypes()_ method replaced by _SubjectFactory.types()_
* UPDATE: _GrouperSubject_ class renamed to _SubjectFactory_
* UPDATE: _grouper_attribute.groupFieldValue_ column size increased to 1024
* UPDATE: _grouper_member_ table now includes a _subjectSource_ column

* FIX: Root stems could be created with an _extension_ containing the
  hierarchy delimiter.
* FIX: Stems and groups could have their _extension_ and
  _displayExtension_ set to include the hierarchy delimiter after being
  created.
* FIX: _whoHas()_ returns inaccurate results
* FIX: Error granting privileges to and revoking privileges from self (#426)
* FIX: _displayName_ of parent stems not consulted when creating new
  groups and stems.
* FIX: VIEW, not READ, is needed to access a group or stem GUID. (#411)
* FIX: The subject that created a session did not have a properly
  initialized member object (#413)
* FIX: Privilege and effective membership pollution bug (#405)
* FIX: Default privilege implementations would attempt to revoke
  effective list values under select circumstances which would cause an
  exception to be thrown. (#361)
* FIX: _hasMember()_ would return incorrect results when a member was
  both immediate and effective (#360)

* REMOVED: Stems can no longer be members or subjects
* REMOVED: _GrouperQuery.query()_ method
* REMOVED: _Grouper.subjectType()_ method
* REMOVED: _grouper_subjectType_ table 

* CONTRIB: _cvs2subject_ now uses Grouper's _conf/hibernate.properties_
  for its JDBC configuration information.
* CONTRIB: _csv2subject_ now supports additional input formats

---

# Grouper 0.5.6

Released 20050429

## Changes

* Fixed: Effective memberships for non-"members" lists (e.g. access
  and naming privileges) were being calculated incorrectly (#350)
* Fixed: Non-root subjects could not create stems or groups (#353)
* Fixed: STEM, not ADMIN, needed to modify namespace attributes (#352)
* Fixed: Added NullGrouperAttribute class (which extends GrouperAttribute) 
  to handle group attributes that either do not have values or have had
  their values deleted. (#356)
* Fixed: GrouperMember.load(session, subject) replaces
  GrouperMember.load(subject) (#348)
* Fixed: GrouperGroup.loadByID() now returns properly casted GrouperGroup
  objects (#349)
* Fixed: GrouperStem.loadByID() now returns properly casted GrouperStem
  objects (#349)

---

# Grouper 0.5.5

Released 20050415

## Changes

* Updated: Hibernate internals completely rewritten to improve session
  and transaction handling
* Updated: New and more thoroughly tested implementation of the
  memberOf algorithm.  In addition, we are now tracking the entire via
  chain for effective memberships.
* New: Improved Oracle compatibility and support
* New: Created logical distinction between groups (GrouperGroup) and
  namespaces (GrouperStem)
* New: GrouperGroup.hasMember() method for verifying whether a member
  belongs to a group (#328)
* New: GrouperMember.isMember() method for verifying whether a member
  belongs to a group (#328)
* New: GrouperStem.stems() method to retrieve immediate child
  namespaces within a namespace
* New: GrouperStem.groups() method to retrieve immediate child groups
  within a namespace
* New: GrouperSession objects now serializable (#296)
* New: More detailed reporting (via exceptions) of errors caused
  by various runtime error conditions 
* New: Now using Commons DBCP by default for connection pooling
* New: Now using Hibernate named queries defined as defined in
  _conf/Grouper.hbm.xml_
* New: Use Ant's SQL task to to create, initialize and reset
  HSQLDB database (#287)
* Fixed: Removed calls to system.exit() (#179) 
  (David Langenberg, The University Of Chicago)
* Fixed: sessionID generation bug (#278)
* Fixed: Effective membership bug with circular group memberships (#286)
* New: GrouperField objects now have public instance methods 
  for getting information about the field
* Fixed: Effective membership now working with lists other than
  "members" as well as with the default Access and Naming privilege
  interfaces
* New: commons-dbcp 1.2.1 .jar file
* New: commons-pool 1.2 .jar file
* New: Hibernate's ODMG interface .jar 
* Updated: Hibernate .jar from 2.1.7c to 2.1.8
* Updated: HSQLDB .jar from 1.7.1 to 1.7.2.11
* Updated csv2group to handle comments in input files and the -c and -q
  options

## Incompabilities

* Databases created with Grouper 0.5 will not work with this release.
* Runtime access to Access and Naming privilege implementations moved
  from _Grouper_ to _GrouperSession_.
* Removed _GrouperSession_ argument requirement for most instance
  method calls.

## Known Bugs

* Significant via chain duplication as reuse between list values is not
  working.
* Via chains are not deleted when they are no longer in use.
* Logging is not especially effective or useful.

---

# Grouper 0.5

Release 200412

## Changes

* "Base" and "Naming" group types
* Immediate Memberships
* Effective Memberships
* Search: By immediate and effective membership
* Search: By group type
* Search: By group create time 
* Search: By group modify time
* Access privilege interface
* Naming privilege interface
* An implementation of the access privilege interface that uses groups to manage privileges
* An implementation of the naming privilege interface that uses groups to manage privileges
* ADMIN and UPDATE access privileges
* CREATE and STEM naming privileges
* A partial implementation of the I2MI Subject interface for locally-defined people subjects
* A partial implementation of the I2MI Subject interface  for groups as subjects
* Basic Event Logging 
* Contributed: I2MI Subject Loader
* Contributed: Group Loader
* Contributed: Member Loader
* Contributed: Query Program

## Known Bugs

* Grouper does not fail gracefully or even necessarily informatively
* Insufficient data validation within code
* Not all database updates are atomic transactions (#233) (#248)
* Loading groups by _groupID_ does not always fail cleanly.
* _GrouperQuery_ objects do not properly reset their state (#255)
* _Modify_ attributes _may_ be be incorrect (#247)
* Session Handling is dubious at best (#173)
* Insufficient documentation
* Insufficient test coverage
* Slow



