
# Grouper Development Roadmap

This file provides information on future Grouper development.

$Id: ROADMAP,v 1.101 2005-12-06 18:48:22 blair Exp $

---

# Grouper 0.9

## Next Actions
* Implement remaining unimplemented methods
* Rename subjectIDs in local subject<=>member mapping (#133)
* Update Subject API jar
* normalize source adapter id + name conventions
* Add "base" group type
  * Map _GroupType_
  * many-to-many mapping between _Field_ and _GroupType_
* wheel group
* ALL toggle switches 
* Review files and add TODO items to this list
* What triggers a "modified" update?
  * possibly make configurable to avoid bikeshedding?
* Refactor membership adding and removing into _Membership_.  There is
  too much duplicated and inconsistent code right now.
  * _Group_
  * _GrouperAccessAdapter_
  * _GrouperNamingAdapter_

## Later - pre-code freeze
* Finish refactoring _MembershipFinder_ to apply READ filtering
* Profiling and benchmarking
  * Areas that probably need tweaking
    * Privilege cache(s)
    * Subject cache(s)
    * Attribute cache
    * List cache
* Throw _SchemaException_ on all things that take a _Privilege_ or _Field_ as argument
* Review generated SQL
  * Including my twisty column names
  * Add 
    * create member + time to memberships 
    * factor type
    * status + ttl?
  * Remove column size constraints on ids and uuids
* Configurable options for logging adding/granting/deleting/revoking
  immediate and effective memberships and privs
* Test
  * Review old _*.todo_ test classes (and then remove)
  * Test concurrence and persistence  
  * Test with Pg and Oracle and review generated SQL
    * ship with generated schema?
  * What happens when you delete a group and then attempt to perform
    further operations on it?
  * Field validation
    * Attributes
    * Lists
    * Naming privs
    * Access privs
  * _AccessPrivilege_ and _NamingPrivilege_ objects
* Review thrown exceptions, especially runtime exceptions
* General code review

## Later - post-code freeze
* Event logging
* record where each *Finder method is called from
* Replace contrib items with updated cdg
* Document
  * wheel group
  * ALL subject toggle switches
  * query api javadoc
  * caching
    * privileges
    * subjects
  * _doc/CHANGES_
    * public api
    * query api
    * ALL subject
    * wheel group
* Attempt to normalize API debug logging
  * Include method names
  * Use constants

## Probably 1.0
* Additional query filters
* Custom group types
  * Custom group attributes
    * setting, unsetting, nullable, etc
  * Custom group lists
    * add to group subjects
    * removing upon group deletion

---

# Grouper 1.0

## Features
* Switch to Hibernate 3.x
* Group math
* XML import and export
* _Programming The Grouper API_ guide

---

# Grouper 1.1

## Features
* Aging Tasks
* User-defined transaction scoping

---

# Future Release

* Grouper Query Language
* has() (#334)
* Removal of members that are no longer in use (#196)
* Search by the set of groups or namespaces created or modified
  by a specified subject [S&B#12]
* Search by the set of groups to which a given subject is an immediate 
  member can be listed [S&B#9]
* Search by the set of groups to which a given subject is an effective 
  member can be listed [S&B#10]
* Configurable stem delimiter
* Paged search results
* Group Hierarchy depth restrictions
* Improved, expanded and more consistent logging policy (#226)
* Ability to rename groups (#262) 
* Search limits



