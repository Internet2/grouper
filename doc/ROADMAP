
# Grouper Development Roadmap

This file provides information on future Grouper development.

$Id: ROADMAP,v 1.46 2005-09-06 20:11:30 blair Exp $

---

## Known Issues
* Fuzzy search performance (#391)
* Index analysis
* Improved via chain code (#329, #330)
* Effective membership performance profiling

---

## Design

* When a subject is a member of a group that they don't have VIEW access
  on, should a) that group be included in a list of mships but not
  necessarily accessible or b) not included at all?
* Should STEM imply CREATE?

---

## Documentation
* "Programming With The Grouper API" guide
* Review and document named queries

---

## Contributed Code
* com.devclue.grouper contributed code

---

# Grouper 0.9

## Features
* Refactored API
* ALL subject
* Improved exception hierarchy (#351)
* Rename subjectIDs in local subject<=>member mapping (#133)
* Make all query methods scoped

## Documentation
* Proposed API Changes
* Proposed Access and Naming Privilege API changes

## Internals
* Hibernate 3.x
* List value aging
* Custom source for all internal subjects (root, all, etc)
* Switch to commons logging
* Make _InsufficientPrivilegeException_ !public
* Make _CacheNotFoundException_ !public
* Make _DbSess_ !public
* Make _GrouperLog_ !public
* Make _MemberOf_ !public
* Make _SimpleCache_ !public

---

# Grouper 1.0

## Features
* Group math

---

# Grouper 1.1

## Features
* Aging Tasks

---

# Future Release

* has() (#334)
* Improved group type support (multiple types, type addition|removal,
  custom types) (#271, #272)
* Removal of members that are no longer in use (#196)
* Delete groups that either have members or are members of other groups (#345)
* Search by the set of groups or namespaces created or modified
  by a specified subject [S&B#12]
* Search by the set of groups to which a given subject is an immediate 
  member can be listed [S&B#9]
* Search by the set of groups to which a given subject is an effective 
  member can be listed [S&B#10]
* Configurable stem delimiter
* Paged search results
* Make search filters an interface that supports arbitrary local
  filter implementations
* Group Hierarchy depth restrictions
* Personal Groups
* Improved, expanded and more consistent logging policy (#226)
* Ability to rename groups (#262) 
* Search limits

