
# Grouper API 

This file contains a synopsis of the Grouper API.  For more details,
see the API javadoc and other documentation.

$Id: API,v 1.91 2005-11-14 18:35:39 blair Exp $

---

TODO Should the root stem be an actual entry in the db?
TODO Custom mship types
TODO Be more consistent about when calling for a member and a subject

---

# Interfaces

## AccessPrivilege
* Set                 getSubjectsWithPriv(session, group, privilege)
* Set                 getGroupsWhereSubjectHasPriv(session, subject, privilege)
* Set                 getPrivs(session, group, subject)
* void                grantPriv(session, group, subject, privilege)
* boolean             hasPriv(session, group, subject, privilege)
* void                revokePriv(session, group, privilege)
* void                revokePriv(session, group, subject, privilege)

## NamingPrivilege
* Set                 getSubjectsWithPriv(session, stem, privilege)
* Set                 getStemsWhereSubjectHasPriv(session, subject, privilege)
* Set                 getPrivs(session, stem, subject)
* void                grantPriv(session, stem, subject, privilege)
* boolean             hasPriv(session, stem, subject, privilege)
* void                revokePriv(session, stem, privilege)
* void                revokePriv(session, stem, subject, privilege)

## QueryFilter
* Set                 getResults(session)

---

# Exceptions
* AttributeNotFoundException
* GrantPrivilegeException
* GroupAddException
* GroupDeleteException
* GroupModifyException
* GroupNotFoundException
* InsufficientPrivilegeException
* MemberAddException
* MemberDeleteException
* MemberNotFoundException
* MembershipNotFoundException
* PrivilegeNotFoundException
* QueryException
* RevokePrivilegeException
* SchemaException
* SessionException
* StemAddException
* StemModifyException
* StemNotFoundException

---

# Classes

## BaseQueryFilter implements QueryFilter
* Set                 filterByScope(stem, candidates)
* Set                 getResults(session)

## ComplementFilter extends BaseQueryFilter

## Field
* FieldType           getType()
* String              getName()

## FieldFinder
* Set                 FieldFinder.findAll()
* Field               FieldFinder.getField(field)

## Group
* void                addMember(member)
* void                delete()
* void                deleteAttribute(attr)
* void                deleteMember(member)
* Set                 getAdmins()
* String              getAttribute(attr)
* Map                 getAttributes()
* String              getCreateSource()
* Subject             getCreateSubject()
* Date                getCreateDate()
* String              getDescription()
* String              getDisplayExtension()
* String              getDisplayName()
* Set                 getEffectiveMembers()
* Set                 getEffectiveMemberships()
* String              getExtension()
* Set                 getImmediateMembers()
* Set                 getImmediateMemberships()
* Set                 getMembers()
* Set                 getMemberships()
* String              getModifySource()
* Subject             getModifySubject()
* Date                getModifyDate()
* String              getName()
* Set                 getOptins()
* Set                 getOptouts()
* Stem                getParentStem()
* Set                 getPrivileges(member)
* Set                 getReaders()
* Set                 getTypes()
* Set                 getUpdaters()
* String              getUuid()
* Set                 getViewers()
* void                grantPriv(member, privilege)
* boolean             hasAdmin(member)
* boolean             hasEffectiveMember(member)
* boolean             hasImmediateMember(member)
* boolean             hasOptin(member)
* boolean             hasOptout(member)
* boolean             hasMember(member)
* boolean             hasRead(member)
* boolean             hasUpdate(member)
* boolean             hasView(member)
* void                revokePriv(privilege)
* void                revokePriv(member, privilege) 
* void                setAttribute(attr, value)
* void                setDescription(value)
* void                setDisplayExtension(value)
* void                setTypes(values)
* Member              toMember()

## GroupCreatedAfterFilter extends BaseQueryFilter

## GroupCreatedBeforeFilter extends BaseQueryFilter

## GroupFinder
* Group               GroupFinder.findByName(session, name)
* Group               GroupFinder.findByUuid(session, uuid)

## GrouperAccessPrivilege implements AccessPrivilege

## GrouperNamingPrivilege implements NamingPrivilege

## GrouperQuery
* GrouperQuery        GrouperQuery.createQuery(session, filter)
* Set                 getGroups()
* Set                 getMembers()
* Set                 getMemberships()
* Set                 getStems()

## GrouperSession
* GrouperSession      GrouperSession.startSession(subject)
* void                beginTransaction()
* void                commit()
* String              getAccessClass()
* Member              getMember()
* String              getNamingClass()
* String              getSessionId()
* Date                getStartTime()
* Subject             getSubject()
* void                rollback()
* void                stopSession()

## IntersectionFilter extends BaseQueryFilter

## Member
* Group               getAsGroup()
* Set                 getEffectiveGroups()
* Set                 getEffectiveMemberships()
* Set                 getGroups()
* Set                 getImmediateGroups()
* Set                 getImmediateMemberships()
* Set                 getMemberships()
* Subject             getSubject()
* String              getSubjectId()
* Source              getSubjectSource()
* String              getSubjectSourceId()
* SubjectType         getSubjectType()
* String              getSubjectTypeId()
* String              getUuid()
* Set                 hasAdmin()
* boolean             hasAdmin(group)
* Set                 hasCreate()
* boolean             hasCreate(stem)
* Set                 hasOptin()
* boolean             hasOptin(group)
* Set                 hasOptout()
* boolean             hasOptout(group)
* Set                 hasPrivs(group)
* Set                 hasPrivs(stem)
* Set                 hasRead()
* boolean             hasRead(group)
* Set                 hasStem()
* boolean             hasStem(stem)
* Set                 hasUpdate()
* boolean             hasUpdate(group)
* Set                 hasView()
* boolean             hasView(group)
* boolean             isEffectiveMember(group)
* boolean             isImmediateMember(group)
* boolean             isMember(group)

## MemberFinder
* Member              MemberFinder.getByUuid(session, uuid)
* Member              MemberFinder.findBySubject(session, subject)

## Membership
* Set                 getChildMemberships()
* int                 getDepth()
* Group               getGroup()
* List                getList()
* Member              getMember()
* Membership          getParentMembership()
* Group               getViaGroup()

## MembershipFinder
* Membership          getEffectiveMembership(session, group, member, list, group, depth)
* Membership          getImmediateMembership(session, group, member, list)

## NullFilter extends BaseQueryFilter

## QueryFilter extends BaseQueryFilter

## Stem
* Group               addChildGroup(extension, displayExtension)
* Stem                addChildStem(extension, displayExtension)
* Set                 getChildGroups()
* Set                 getChildStems()
* String              getCreateSource()
* Subject             getCreateSubject()
* Date                getCreateTime()
* Set                 getCreators()
* String              getDescription()
* String              getDisplayExtension()
* String              getDisplayName()
* String              getExtension()
* String              getModifySource()
* Subject             getModifySubject()
* Date                getModifyTime()
* String              getName()
* Stem                getParentStem()
* Set                 getPrivileges(member)
* Set                 getStemmers()
* String              getUuid()
* void                grantPriv(member, privilege)
* boolean             hasCreate(member)
* boolean             hasStem(subject)
* void                revokePriv(privilege)
* void                revokePriv(member, privilege) 
* void                setDescription(value)
* void                setDisplayExtension(value) 

## StemCreatedAfterFilter extends BaseQueryFilter

## StemCreatedBeforeFilter extends BaseQueryFilter

## StemFinder
* Stem                StemFinder.getByName(session, name)
* Stem                StemFinder.getByUuid(session, uuid)
* Stem                StemFinder.findRootStem(session)

## SubjectFinder
* Subject             SubjectFinder.findById(id)  
* Subject             SubjectFinder.findById(id, type)
* Subject             SubjectFinder.findByIdentifier(id)  
* Subject             SubjectFinder.findByIdentifier(id, type)
* Set                 SubjectFinder.find(query)

## UnionFilter extends BaseQueryFilter



