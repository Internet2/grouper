
description = 'Subject API'
dependencies {
  compile project(':grouper-misc:morphString')
  compile project(':grouper-misc:grouperClient')
  compile group: 'commons-collections', name: 'commons-collections', version:commons_collections_version
  compile group: 'cglib', name: 'cglib', version:cglib_version
  compile group: 'commons-logging', name: 'commons-logging', version:commons_logging_version
  compile group: 'commons-digester', name: 'commons-digester', version:commons_digester_version
  compile group: 'commons-lang', name: 'commons-lang', version:commons_lang_version
  compile group: 'org.apache.commons', name: 'commons-jexl', version:commons_jexl_version
  compile group: 'c3p0', name: 'c3p0', version:c3p0_version
  compile group: 'commons-pool', name: 'commons-pool', version:commons_pool_version
  compile group: 'edu.vt.middleware', name: 'vt-ldap', version:vt_ldap_version
  compile group: 'hsqldb', name: 'hsqldb', version:hsqldb_version
  compile group: 'org.bouncycastle', name: 'bcprov-jdk16', version:bcprov_jdk16_version
  runtime group: 'p6spy', name: 'p6spy', version:p6spy_version
}

sourceSets {
  main {
    java {
      srcDir 'src'
    }
    resources {
      srcDirs 'conf', 'src/grouper/'
      include '**/*.xml', '**/*.properties'
    }
  }
  test {
    java {
      srcDir 'tests'
      include '**/*.java'
    }
    resources {
      srcDirs 'tests', 'confForTest'
      include '**/*.properties', '**/*.xml'
    }
  }
}

task gzipfile(type: Tar) {
  from projectDir
  include 'doc'
  include 'lib'
  include 'src'
  include 'build.gradle'
  into projectDir
  extension = 'tgz'
  compression = Compression.GZIP
  description = "Create gzip file from doc, lib, src directories and output jar file"
}