description = 'Grouper Root Project'
defaultTasks "clean", "build"

ext {
  publishSnapshots = Boolean.getBoolean("publishSnapshots")
  publishReleases = Boolean.getBoolean("publishReleases")
  sonatypeUsername = System.getProperty("sonatypeUsername")
  sonatypePassword = System.getProperty("sonatypePassword")
}

allprojects  {
  apply plugin: 'maven'
  apply plugin: "idea"
  apply plugin: "eclipse"
  apply plugin: "signing"
}


subprojects {
  apply plugin: 'java'
  apply from: rootProject.file("gradle/tasks.gradle")

  task packageSources(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource

  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "http://www.internet2.edu/grouper/downloads/maven2" }
    maven { url "https://shibboleth.net/nexus/content/groups/public" }
    maven { url "http://oss.sonatype.org/content/repositories/releases/" }
    maven { url "http://repo1.maven.org/maven2" }
    maven { url "http://build.shibboleth.net/nexus/content/repositories/releases" }
    maven { url "http://central.maven.org/maven2" }
    maven { url "http://maven.ala.org.au/repository" }
    maven { url "http://mvnrepository.com/artifact" }
    maven { url "https://maven.atlassian.com/repository/public" }
  }
  
  configurations {
    tests

    provided
    compile.extendsFrom(provided)
  }

  artifacts {
    tests testJar

    archives sourcesJar
//    archives sourcesZip
    archives javadocJar
    archives testJar
  }

  jar {
    manifest {
      attributes("Implementation-Title": project.name,
        "Implementation-Vendor": project.group,
        "Created-By": project.group,
        "Implementation-Date": new Date(),
        "Implementation-Version": project.version)
    }
  }

  javadoc {
    failOnError = false
  }

  dependencies {
    compile group: 'log4j', name: 'log4j', version: log4j_version
    testCompile group: 'junit', name: 'junit', version: junit_version
  }

  signing {
    required = (publishReleases && sonatypeUsername != null && sonatypePassword != null)
    sign configurations.archives
  }

  uploadArchives {
    repositories {
      mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        if (publishReleases) {
          repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
            authentication(userName: sonatypeUsername, password: sonatypePassword);
          }
        }

        if (publishSnapshots) {
          snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
            authentication(userName: sonatypeUsername, password: sonatypePassword);
          }
        }

        pom.project {
          url "https://www.internet2.edu/products-services/trust-identity-middleware/grouper/"
          inceptionYear 2000
          name project.name
          description project.name
          issueManagement {
            system "JIRA"
            url "https://bugs.internet2.edu/jira/projects/GRP"
          }

          scm {
            url 'scm:git@github.com:Internet2/grouper.git'
            connection 'scm:git@github.com:Internet2/grouper.git'
            developerConnection 'scm:git@github.com:Internet2/grouper.git'
          }

          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }

          developers {
            developer {
              id 'mchyzer'
              name 'Chris Hyzer'
            }
            developer {
              id 'sipatel2'
              name 'Shilen Patel'
            }
            developer {
              id 'sachdeva-vivek'
              name 'Vivek Sachdeva'
            }
            developer {
              id 'langedb'
              name 'David Langenberg'
            }
            developer {
              id 'mmoayyed'
              name 'Misagh Moayyed'
            }
          }

          contributors {
            contributor {
              name 'William G. Thompson'
              email 'wgthom@gmail.com'
            }
            contributor {
              name 'Tom Zeller'
              email 'tzeller@dragonacea.biz'
            }
            contributor {
              name 'John Gasper'
              email 'jtgasper3@unicon.com'
            }
            contributor {
              name 'Jim Fox'
              email 'fox@washington.edu'
            }
            contributor {
              name 'Lasbrey Nwachukwu'
              email 'lnwachukwu@unicon.net'
            }
          }

          mailingLists {
            mailingList {
              name "grouper-user"
              subscribe "https://lists.internet2.edu/sympa/subscribe/grouper-users"
              unsubscribe "https://lists.internet2.edu/sympa/sigrequest/grouper-users"
              post "grouper-users@internet2.edu"
              archive "https://lists.internet2.edu/sympa/arc/grouper-users"
            }
            mailingList {
              name "grouper-dev"
              subscribe "https://lists.internet2.edu/sympa/subscribe/grouper-dev"
              unsubscribe "https://lists.internet2.edu/sympa/sigrequest/grouper-dev"
              post "grouper-dev@internet2.edu"
              archive "https://lists.internet2.edu/sympa/arc/grouper-dev"
            }
          }

        }
      }
    }
  }
}

/**
 * Aggregate all javadocs into a single directory
 **/
 task alljavadoc(type: Javadoc) {
  source subprojects.collect { 
    project -> project.sourceSets.main.allJava 
  }
  classpath = files(subprojects.collect { project -> project.sourceSets.main.compileClasspath })
  destinationDir = file("${buildDir}/javadoc")
  failOnError = false
} 