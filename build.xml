<!-- $Id: build.xml,v 1.181 2008-06-17 12:34:12 khuxtable Exp $ -->

<project name="Grouper" default="compile" basedir=".">

  <!-- PROPERTIES -->

  <!-- Grouper Distribution and Versioning Properties -->
  <property name="app.name"     value="grouper"/>
  <property name="impl.url"     value="http://middleware.internet2.edu/dir/groups/grouper/"/>
  <property name="impl.vendor"  value="Internet2"/>
  <property name="impl.version" value="1.3.0"/>

  <!-- Grouper Global Build Properties -->
  <property file="${basedir}/conf/buildGrouper.properties"/>


  <!-- IMPORTS -->

  <!-- extension tasks -->
  <import file="${ext.dir}/ext-build.xml"/>


  <!-- TARGETS -->

  <!-- target: bench -->
  <target name="bench" 
          depends="compile"
          description="Run Grouper API benchmarks"
  >
    <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.bench.GrouperBench"
          failonerror="true"
    />
  </target>
  <!-- target: bench -->

  <!-- target: bench.run -->
  <target name="bench.run" 
          description="Run the Grouper API benchmark specified with -Dname=NAME"
          depends="compile, ensure.name"
  >
    <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.bench.${name}"
          failonerror="true"
    />
  </target>
  <!-- target: bench.run -->

  <!-- target: bench.run.yourkit -->
  <target name="bench.run.yourkit" 
          depends="compile, ensure.name"
  >
    <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.bench.${name}"
          failonerror="true"
    >
      <jvmarg value="-agentlib:yjpagent=sampling,alloc,onexit=memory,onexit=telemetry"/>
    </java>
  </target>
  <!-- target: bench.run.yourkit -->

  <!-- target: bench.run.shark -->
  <target name="bench.run.shark" 
          depends="compile, ensure.name"
  >
    <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.bench.${name}"
          failonerror="true"
    >
      <jvmarg value="-XrunShark"/>
    </java>
  </target>
  <!-- target: bench.run.shark -->

  <!-- target: build -->
  <!-- TODO 20070315 deprecrate post 1.2.0 -->
  <target name="build">
    <antcall target="compile"/>
  </target>
  <!-- target: build -->

  <!-- target: clean -->
  <target name="clean" 
          description="Clean out (delete) previous build products including Java classes, the Grouper dist directory, log files and extensions"
  >
    <delete dir="${build.dir}"/>  
    <delete dir="${dist.dir}"/>
    <delete>
      <fileset dir="${basedir}" includes="*.log"/>
      <fileset dir="${basedir}" includes="*.log.?"/>
    </delete>
    <!-- clean extensions -->
    <antcall target="ext.clean"/>
  </target>
  <!-- target: clean -->

  <!-- target: clover.clean -->
  <target name="clover.clean" depends="clover.init">
    <clover-clean/>
  </target>
  <!-- target: clover.clean -->

  <!-- target: clover.init -->
  <target name="clover.init">
    <taskdef resource="cloverlib.xml" classpath="${lib.jar.clover}"/>
  </target>
  <!-- target: clover.init -->

  <!-- target: clover.log -->
  <target name="clover.log" 
          depends="with.clover"
  >
    <clover-log/>
  </target>
  <!-- target: clover.log -->

  <!-- target: clover.html -->
  <target name="clover.html" 
          depends="with.clover"
  >
    <clover-report>
      <current  outfile="clover">
        <format type="html"/>
        <testresults dir="${dist.dir.test}">
          <include name="**/TEST*xml"/>
        </testresults>
      </current>
    </clover-report>
  </target>
  <!-- target: clover.html -->

  <!-- target: clover.swing -->
 <target  name="clover.swing" 
          depends="with.clover"
  >
   <clover-view/>
 </target>
  <!-- target: clover-swing -->

  <!-- target: compile -->
  <target name="compile" 
          description="Compile .java files, copy Hibernate mapping files"
          depends="init.conf"
  >
    <record name="${build.log}" action="start"/>
    <mkdir  dir="${build.dir.grouper}"/>
    <!-- 2008/04/23 CH dont allow turning off debug -->
    <javac  srcdir="${src.dir.grouper}" 
            destdir="${build.dir.grouper}"
            debug="true"
            deprecation="${compile.deprecation}"
            optimize="${compile.optimize}"
    >
      <classpath refid="project.classpath" />
<!--  TODO 20061011 I'll eventually have to deal with this migration
      <compilerarg  value="-Xlint:unchecked"  />
-->
    </javac>
    <!-- CH 20080215 copy source to the build dir... -->    
    <copy todir="${build.dir.grouper}">
      <fileset dir="${src.dir.grouper}">
        <include name="**/*.java"/>      <!-- source -->
        <include name="**/*.hbm.xml"/>      <!-- hibernate mappings -->
        <include name="**/*.properties"/>   <!-- xml default export|import properties -->
        <include name="**/Hib3ForeignKeys.xml"/>   <!-- foreign keys -->
      </fileset>
    </copy>
    <!-- build extensions -->
    <antcall target="ext.compile"/>
    <!-- TODO 20070319 not sure if this is the right location - or name -->
    <antcall target="ext.install"/>
    <record name="${build.log}" action="stop"/>
  </target>
  <!-- target: compile -->

  <!-- target: cpd -->
  <target name="cpd">
    <taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask" />
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir.run}"/>
    <cpd minimumTokenCount="95" outputFile="${dist.dir.run}/cpd.txt">
      <fileset dir="${src.dir.grouper}">
        <include  name="**/*.java"    />
        <exclude  name="**/bench/**/" />
        <exclude  name="**/eg/**/"    />
      </fileset>
    </cpd>
  </target>
  <!-- target: cpd -->

  <!-- target: db -->
  <target name="db" 
          depends="init" 
          description="Launch HSQLDB UI"
  >
    <property file="${conf.hibernate}"/>
    <java fork="true"
          classpathref="project.classpath"
          classname="org.hsqldb.util.DatabaseManager"
          maxmemory="${memory.max}"
    >
      <arg value="-driver"/>
      <arg value="${hibernate.connection.driver_class}"/>
      <arg value="-url"/>
      <arg value="${hibernate.connection.url}"/>
      <arg value="-user"/>
      <arg value="${hibernate.connection.username}"/>
      <arg value="-password"/>
      <arg value="${hibernate.connection.password}"/>
    </java>
  </target>
  <!-- target: db -->

  <!-- target: db.init, change from schemaexport to compile if you dont want db blown away... -->
  <target name="db.init" 
          depends="init, schemaexport"
          description="Initialize Groups Registry"
  >
    <record name="${db.init.log}" action="start"/>
    <!-- CH already prompted in schemaexport -->
    <java fork="true"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.RegistryInstall"
    >
      <jvmarg value="-Dgrouper.allow.db.changes=true"/> 
      </java>
    <record name="${db.init.log}" action="stop"/>
  </target>
  <!-- target: db.init -->

  <!-- target: db.init.test, change from schemaexport to compile if you dont want db blown away... -->
  <target name="db.init.test" 
          depends="init, schemaexport.test"
          description="Initialize Test Groups Registry"
  >
    <!-- CH already prompted in schemaexport -->
     
      <record name="${db.init.log}" action="start"/>
    <java fork="true"
          classpathref="test.classpath"
          classname="edu.internet2.middleware.grouper.RegistryInstall"
    >
      <jvmarg value="-Dgrouper.allow.db.changes=true"/> 
    </java>
    <record name="${db.init.log}" action="stop"/>
  </target>
  <!-- target: db.init.test -->

  <!-- target: db-init -->
  <!-- TODO 20070329 deprecate post 1.2.0 -->
  <target name="db-init">
    <antcall target="db.init"/>
  </target>
  <!-- target: db-init -->

  <!-- target: db.reset -->
  <!-- reset the groups registry -->
  <target name="db.reset"
          depends="compile"
  >
    <java fork="false"
               maxmemory="${memory.max}"
               classpathref="test.classpath"
               classname="edu.internet2.middleware.grouper.util.ConfirmDbChangePromptOnly"
               failonerror="true"
         />
     
     <input validargs="y,n"
         addproperty="do.delete.reset"
       />
       <condition property="do.abort.reset">
         <equals arg1="n" arg2="${do.delete.reset}"/>
       </condition>
       <fail if="do.abort.reset">Build aborted by user.</fail>
     
      <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.RegistryReset"
    >
        <jvmarg value="-Dgrouper.allow.db.changes=true"/> 
      </java>
    </target>
  <!-- target: db.reset -->

  <!-- target: dist -->
  <target name="dist" 
          depends="compile" 
          description="Create Grouper API jar"
  >
    <mkdir dir="${dist.dir}/lib"/>
    <jar destfile="${dist.dir}/lib/${app.name}-${DSTAMP}.jar" basedir="${build.dir.grouper}">
      <manifest>
        <attribute name="Built-By"                value="${user.name}"/>
        <attribute name="Implementation-Vendor"   value="${impl.vendor}"/>
        <attribute name="Implementation-Title"    value="${app.name}"/>
        <attribute name="Implementation-Version"  value="${impl.version}"/>
        <attribute name="Implementation-URL"      value="${impl.url}"/>
      </manifest>
    </jar>
    <copy file="${dist.dir}/lib/${app.name}-${DSTAMP}.jar"   
          tofile="${dist.dir}/lib/${app.name}.jar" 
    />
  </target>
  <!-- target: dist -->

  <!-- target: dist.lib -->
  <target name="dist.lib"
          depends="init" 
          description="Create jar of Grouper 3rd party libraries"
    >
    <!-- ugly, i know -->
    <unzip dest="${build.dir.lib}">
      <fileset dir="${lib.dir}">
        <include name="*.jar"/>
      </fileset>
    </unzip>
    <!-- be sure to include _java/lib/README_ -->
    <copy file="${lib.dir}/README.txt" 
          tofile="${build.dir.lib}/README.txt"
    />
    <jar  jarfile="${dist.dir}/lib/${app.name}-lib-${DSTAMP}.jar" 
          basedir="${build.dir.lib}"
    />
    <copy file="${dist.dir}/lib/${app.name}-lib-${DSTAMP}.jar" 
          tofile="${dist.dir}/lib/${app.name}-lib.jar" 
    />
  </target>
  <!-- target: dist.lib -->

  <!-- target: dist-lib -->
  <!-- TODO 20070329 deprecate post 1.2.0 -->
  <target name="dist-lib">
    <antcall target="dist.lib"/>
  </target>
  <!-- target: dist-lib -->

  <!-- target: eg.bootstrap -->
  <!-- run example bootstrap programs -->
  <target name="eg.bootstrap"
          depends="compile"
  >
    <record name="${basedir}/eg.log" action="start"/>
    <antcall  target="db.reset"/>
    <antcall  target="eg.run">
      <param name="name" value="Bootstrap"/> 
    </antcall>
    <record name="${basedir}/eg.log" action="stop"/>
  </target>
  <!--target:  eg.bootstrap -->

  <!-- target: eg.run -->
  <target name="eg.run">
    <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.eg.${name}"
          failonerror="true"
    />
  </target>
  <!-- target: eg.run -->

  <!-- target: ensure.cmd -->
  <target name="ensure.cmd" unless="cmd">
    <fail message='You must run this target with -Dcmd="command line arguments"'/>
  </target>
  <!-- target: ensure.cmd -->

  <!-- target: ensure.name -->
  <target name="ensure.name" unless="name">
    <fail message="You must run this target with -Dname=NAME"/>
  </target>
  <!-- target: ensure.name -->

  <!-- target: ensure.test.name -->
  <target name="ensure.test.name" unless="test">
    <fail message="You must run this target with -Dtest=TestName"/>
  </target>
  <!-- target: ensure.test.name -->

  <!-- target: findbugs -->
  <target name="findbugs" 
          depends="dist, dist.lib"
  >
    <taskdef  name="findbugs"       classname="edu.umd.cs.findbugs.anttask.FindBugsTask"/>
    <property name="findbugs.home"  location="${user.home}/Applications/findbugs"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir.run}"/>
    <findbugs home="${findbugs.home}"
              effort="max"
              reportLevel="low"
              output="html"
              outputFile="${dist.dir.run}/findbugs_grouper.html"
              jvmargs="-Xmx${memory.max}"
    >
      <auxClassPath>
        <fileset dir="${lib.dir}">
          <include name="**/*.jar"/>
        </fileset>
      </auxClassPath>
      <sourcePath path="${src.dir.grouper}"/>
      <class location="${dist.dir}/lib/${app.name}.jar"/>
    </findbugs>
  </target>
  <!-- target: findbugs -->

  <!-- target: hsqldb -->
  <!-- connect to hsqldb running in server mode -->
  <target name="hsqldb" 
          depends="init"
  >
    <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          jar="${lib.jar.hsqldb}"
          dir="${conf.dir}"
    >
      <arg value="grouper" />
    </java>
  </target>
  <!-- target: hsqldb -->

  <!-- target: hsqldb.start -->
  <!-- start hsqldb in server mode -->
  <target name="hsqldb.start" 
          depends="init"
  >
    <java fork="true"
          spawn="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="org.hsqldb.Server"
          dir="${conf.dir}"
    />
  </target>
  <!-- target: hsqldb.start -->

  <!-- target: hsqldb.stop -->
  <!-- stop hsqldb running in server mode -->
  <target name="hsqldb.stop" 
          depends="init"
  >
    <java fork="true"
          spawn="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          jar="${lib.jar.hsqldb}"
          dir="${conf.dir}"
    >
      <arg  value="--sql"     />
      <arg  value="shutdown;" />
      <arg  value="grouper"   />
    </java>
  </target>
  <!-- target: hsqldb.stop -->

  <!-- target: info -->
  <target name="info" 
          depends="compile"
          description="Report system and configuration information"
  >
    <java fork="true"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.GrouperInfo"
    />
  </target>
  <!-- target: info -->

  <!-- target: init -->
  <target name="init">
    <tstamp/>
    <mkdir dir="${build.dir.test}"/>
    <mkdir dir="${ext.dir.lib}"/> <!-- a bit of a hack -->
    <mkdir dir="${ext.dir}/conf"/>
    <!-- only define our classpath once -->
    <path id="project.classpath">
      <pathelement path="${java.class.path}"/>
      <!-- for configuration files -->
      <pathelement location="${conf.dir}"/>
      <pathelement location="${ext.dir}/conf"/>
      <fileset dir="${lib.dir}">
        <include name="**/*.jar"/>
      </fileset>
      <fileset dir="${ext.dir.lib}">
        <include name="**/*.jar"/>
      </fileset>
      <pathelement  location="${build.dir.grouper}"/>
      <pathelement  location="${build.dir.grouper}"/>
      <pathelement  location="${build.dir.test}"/>
      <pathelement  location="${user.home}/.ant/lib/clover.jar"/>
    </path>
    <pathconvert  targetos="unix"
                  property="project.classpath.string" 
                  refid="project.classpath"
    />
   <path id="test.classpath">
	<pathelement location="${build.dir.test}/conf"/>
	<path refid="project.classpath"/>
   </path>
   <pathconvert  targetos="unix"
                  property="test.classpath.string" 
                  refid="test.classpath"
    />
  </target>
  <!-- target: init -->

  <!-- target: init.conf -->
  <!-- expands macros in several configuration files to set proper absolute paths -->
  <target name="init.conf"
          depends="init"
  >
    <dirname property="base" file="build.xml"/>
    <pathconvert  targetos="unix"
                  property="converted.base"
    >
        <path path="${base}"/>
    </pathconvert>
    <filter token="base"  value="${converted.base}"/>
    <!-- Apparently ${file.separator} is not appropriate here -->
    <filter token="slash"       value="/"/>
    <!-- CH 2008/05/07 why are these filter tokens??? -->
    <filter token="timeToIdle"  value="30"/>
    <filter token="timeToLive"  value="120"/>
    <!-- CH 2008/05/07 TODO this is bad, if someone customizing their conf file, and then another
      gets committed to cvs, it will overwrite their changes... -->
    <copy todir="${conf.dir}" filtering="true">
      <fileset dir="${src.dir.conf}"/>
    </copy>
    <filter token="timeToIdle"  value="1"/>
    <filter token="timeToLive"  value="1"/>
    
    <!-- see if grouper.properties is there -->
    <condition property="configfile" value="${conf.dir}/grouper.properties" 
        else="${conf.dir}/grouper.example.properties">
      <available file="${conf.dir}/grouper.properties" type="file"/>
    </condition>
    
    <!-- if grouper.properties is there, copy it to itself, if not, get the example -->
    <copy tofile="${conf.dir}/grouper.properties" file="${configfile}" verbose="true" />
    
    <copy todir="${src.dir.test.conf}" filtering="true">
      <fileset dir="${src.dir.conf}">
        <include name="grouper.ehcache.xml"/>
      </fileset>
    </copy>
  </target>
  <!-- target: init.conf -->

  <!-- target: jar -->
  <!-- TODO 20070329 remove post 1.2.0 -->
  <target name="jar">
    <echo message="WARNING: target 'jar' is deprecrated and will be removed in a future release"/>
    <antcall target="dist"/>
  </target>
  <!-- target: jar -->

  <!-- target: javadoc -->
  <target name="javadoc"
          description="Create the JavaDocs"
          depends="init"
  >
    <delete dir="${dist.dir.javadoc}"/>
    <mkdir  dir="${dist.dir.javadoc}"/>
    <record name="${javadoc.log}" action="start"/>
    <copy file="${src.doc.css}" tofile="${javadoc.css}"/>
    <!-- TODO 20070315 use "overview=..." -->
    <echo message="generating javadoc in ${dist.dir.javadoc}"/>
    <javadoc  destdir="${dist.dir.javadoc}"
              access="public"
              author="true"
              breakiterator="true"
              classpathref="project.classpath" 
              nodeprecatedlist="false"
              nodeprecated="false"
              noindex="false"
              nonavbar="false"
              notree="false"
              splitindex="true"
              stylesheetfile="${javadoc.css}"
              use="true"
              version="true"
    >
      <packageset dir="${src.dir.grouper}" defaultexcludes="yes">
        <exclude name="edu/internet2/middleware/grouper/bench/**"/>
        <exclude name="edu/internet2/middleware/grouper/prof/**"/>
      </packageset>
    </javadoc>
    <!-- generate extension documentation -->
    <antcall target="ext.doc"/>
    <record name="${javadoc.log}" action="stop"/>
  </target>
  <!-- target: javadoc -->

  <!-- target: pmd -->
  <target name="pmd" 
          depends="init"
  >
    <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir.run}"/>
    <pmd shortFilenames="true">
      <ruleset>rulesets/favorites.xml</ruleset>
      <ruleset>basic</ruleset>
      <formatter  type="html" 
                  toFile="${dist.dir.run}/pmd_grouper.html"
                  toConsole="false"
                  linkPrefix="http://macinthrope.uchicago.edu/~blair/grouper/api/"
      />
      <fileset dir="${src.dir.grouper}">
        <include name="**/*.java"/>
      </fileset>
    </pmd>
  </target>
  <!-- target: pmd -->

  <!-- target: schemaexport -->
  <target name="schemaexport" 
          depends="init, compile"
          description="Generate SQL schema appropriate for configured database"
  >
    <!-- CH example of prompting user with ant, then pass env var to init schema -->
    <java fork="false"
              maxmemory="${memory.max}"
              classpathref="test.classpath"
              classname="edu.internet2.middleware.grouper.util.ConfirmDbChangePromptOnly"
              failonerror="true"
        />
    
    <input validargs="y,n"
        addproperty="do.delete.export"
      />
      <condition property="do.abort.export">
        <equals arg1="n" arg2="${do.delete.export}"/>
      </condition>
      <fail if="do.abort.export">Build aborted by user.</fail>
    
    <record name="${schemaexport.log}" action="start"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir.run}"/>
    <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.RegistryInitializeSchema"
          failonerror="true"
    >
    <jvmarg value="-Dgrouper.allow.db.changes=true"/> 
     </java>
    <record name="${schemaexport.log}" action="stop"/>
  </target>
  <!-- target: schemaexport -->

  <!-- target: schemaexport.test -->
  <target name="schemaexport.test" 
          depends="init, compile"
          description="Generate Test SQL schema appropriate for configured database"
  >
    
    <!-- CH example of prompting user with ant, then pass env var to init schema -->
    <java fork="false"
              maxmemory="${memory.max}"
              classpathref="test.classpath"
              classname="edu.internet2.middleware.grouper.util.ConfirmDbChangePromptOnly"
              failonerror="true"
        />
    
    <input validargs="y,n"
        addproperty="do.delete.exporttest"
      />
      <condition property="do.abort.exporttest">
        <equals arg1="n" arg2="${do.delete.exporttest}"/>
      </condition>
      <fail if="do.abort.exporttest">Build aborted by user.</fail>

    <record name="${schemaexport.log}" action="start"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir.run}"/>
    <java fork="true"
          maxmemory="${memory.max}"
          classpathref="test.classpath"
          classname="edu.internet2.middleware.grouper.RegistryInitializeSchema"
          failonerror="true"
    >
      <jvmarg value="-Dgrouper.allow.db.changes=true"/> 
    </java>
    <record name="${schemaexport.log}" action="stop"/>
  </target>
  <!-- target: schemaexport.test -->

  <!-- target: addforeignkeys -->
  <target name="addforeignkeys" 
          depends="init, compile"
          description="Adds the foreign keys to the database"
  >
    <java fork="false"
               maxmemory="${memory.max}"
               classpathref="test.classpath"
               classname="edu.internet2.middleware.grouper.util.ConfirmDbChangePromptOnly"
               failonerror="true"
         />
     
     <input validargs="y,n"
         addproperty="do.delete.keys"
       />
       <condition property="do.abort.keys">
         <equals arg1="n" arg2="${do.delete.keys}"/>
       </condition>
       <fail if="do.abort.keys">Build aborted by user.</fail>
     
    <record name="${schemaexport.log}" action="start"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir.run}"/>
    <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.RegistryAddForeignKeys"
          failonerror="true"
    >
      <jvmarg value="-Dgrouper.allow.db.changes=true"/> 
    </java>
    <record name="${schemaexport.log}" action="stop"/>
  </target>
  <!-- target: addforeignkeys -->

  <!-- target: serialver -->
  <target name="serialver" 
          depends="compile, ensure.name"
  >
    <exec executable="serialver">
      <arg  value="-classpath"/>
      <arg  value="${project.classpath.string}"/>
      <arg  value="edu.internet2.middleware.grouper.${name}"/>
    </exec>  
  </target>
  <!-- target: serialver -->

  <!-- target: sql -->
  <target name="sql"
          depends="ensure.name"
          description="Apply sql file to Groups Registry [Pass -Dname=filename.sql]"
  >
    <property file="${conf.dir}/grouper.hibernate.properties"/>
    <sql  classpathref="project.classpath"
          driver="${hibernate.connection.driver_class}"
          url="${hibernate.connection.url}"
          userid="${hibernate.connection.username}"
          password="${hibernate.connection.password}"
          src="${name}"
    />
  </target>
  <!-- target: sql -->

  <!-- target: test -->
  <target name="test" 
          depends="test.compile, db.init.test"
          description="Run Grouper Tests"
  >
    <echo/>
    <echo message="*** results can be found in ${dist.dir.test} ***"/>
    <echo/>
    <record name="${test.log}" action="start" append="yes"/>
    <mkdir dir="${dist.dir.test}"/>
    <!-- rely on db init prompting the user -->
    <junit  fork="yes"
            haltonerror="yes"
            haltonfailure="yes"
            maxmemory="${memory.max}"
            printsummary="yes"
            showoutput="yes"
    >
      <jvmarg value="-Dgrouper.allow.db.changes=true"/>
      <classpath  refid="test.classpath"/>
      <formatter  type="xml"/>
      <test       name="edu.internet2.middleware.grouper.SuiteDefault"
                  todir="${dist.dir.test}"
      />
    </junit>
    <!-- TODO 20061228 Switch to batchtest once I've migrated the tests
          <batchtest  fork="yes"
                      todir="${dist.dir.test}"
          >
            <formatter  type="xml"/>
            <fileset    dir="${src.dir.test}">
              <include  name="**/Test*.java"/>
              <exclude  name="**/Suite*.java"/>
            </fileset>  
          </batchtest>
    -->
    <!-- test extensions -->
    <antcall target="ext.test"/>
    <record name="${test.log}" action="stop"/>
  </target>
  <!-- target: test -->

  <!-- target: test.compile -->
  <target name="test.compile" 
          depends="init, compile"
  >
    <record name="${test.log}" action="start" append="yes"/>
    <javac srcdir="${src.dir.test}" destdir="${build.dir.test}" debug="true">
      <classpath  refid="test.classpath"/>
      <include name="**/*.java" />
    </javac>
	<!--copy over test specific conf-->
	<mkdir dir="${build.dir.test}/conf"/>
	<copy todir="${build.dir.test}/conf">
		<fileset dir="${src.dir.test}/conf"/>
	</copy>
    <record name="${test.log}" action="stop"/>
  </target>
  <!-- target: test.compile -->

  <!-- target: test.run -->
  <target name="test.run" 
          depends="init, test.compile, ensure.test.name"
          description="Run the Grouper API test specified with -Dtest=NAME"
  >
    <record name="${test.log}" action="start" append="yes"/>
    <property name="test.class" value="edu.internet2.middleware.grouper.${test}"/>
    <available  classname="${test.class}"
                property="test.class.exists"
                classpathref="test.classpath" 
    />
    <fail unless="test.class.exists" message="Could not find test class '${test.class}'"/>
    <!-- CH example of prompting user with ant, then pass env var to init schema -->
    <java fork="false"
              maxmemory="${memory.max}"
              classpathref="test.classpath"
              classname="edu.internet2.middleware.grouper.util.ConfirmDbChangePromptOnly"
              failonerror="true"
        />
    
    <input validargs="y,n"
        addproperty="do.delete.test"
      />
      <condition property="do.abort.test">
        <equals arg1="n" arg2="${do.delete.test}"/>
      </condition>
      <fail if="do.abort.test">Build aborted by user.</fail>
    <junit printsummary="withOutAndErr" fork="true"> 
      <!-- we just prompted the user about the changes -->
      <jvmarg value="-Dgrouper.allow.db.changes=true"/>
      <classpath  refid="test.classpath"/>
      <formatter  type="plain" usefile="false"/>
      <test       name="${test.class}"/>
    </junit>
    <record name="${test.log}" action="stop"/>
  </target>
  <!-- target: test.run -->

  <!-- target: with.clover -->
  <target name="with.clover" 
          depends="init, clover.init"
  >
    <clover-setup>
      <fileset dir="${src.dir.grouper}">
        <exclude  name="**/bench/*"/>
        <exclude  name="**/eg/**"/>
        <exclude  name="**/prof/*"/>
      </fileset>
    </clover-setup>
  </target> 
  <!-- target: with.clover -->

  <!-- target: with.clover.test -->
  <target name="with.clover.test" 
          depends="init, clover.init"
  >
    <clover-setup>
      <fileset dir="${src.dir.test}">
        <include name="**/Test*.java"/>
      </fileset>
    </clover-setup>
  </target> 
  <!-- target: with.clover.test -->

  <!-- target: xml.export -->    
  <target name="xml.export"
          depends="ensure.cmd"        
          description='Perform XML export of Groups Registry [Pass -Dcmd="command line arguments"]'
  >
    <java fork="false"
               maxmemory="${memory.max}"
               classpathref="test.classpath"
               classname="edu.internet2.middleware.grouper.util.ConfirmDbChangePromptOnly"
               failonerror="true"
         />
     
     <input validargs="y,n"
         addproperty="do.delete.xmlexport"
       />
       <condition property="do.abort.xmlexport">
         <equals arg1="n" arg2="${do.delete.xmlexport}"/>
       </condition>
       <fail if="do.abort.xmlexport">Build aborted by user.</fail>
     
      <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.XmlExporter"
          failonerror="true"
    >
        <jvmarg value="-Dgrouper.allow.db.changes=true"/> 
           <arg line="${cmd}"/>
    </java>
  </target>
  <!-- target: xml.export -->
      
  <!-- target: xml.import -->    
  <target name="xml.import"
          depends="ensure.cmd"        
          description='Perform XML import of Groups Registry [Pass -Dcmd="command line arguments"]'
  >
    <java fork="false"
               maxmemory="${memory.max}"
               classpathref="test.classpath"
               classname="edu.internet2.middleware.grouper.util.ConfirmDbChangePromptOnly"
               failonerror="true"
         />
     
     <input validargs="y,n"
         addproperty="do.delete.import"
       />
       <condition property="do.abort.import">
         <equals arg1="n" arg2="${do.delete.import}"/>
       </condition>
       <fail if="do.abort.import">Build aborted by user.</fail>
     
      <java fork="true"
          maxmemory="${memory.max}"
          classpathref="project.classpath"
          classname="edu.internet2.middleware.grouper.XmlImporter"
          failonerror="true"
    >
        <jvmarg value="-Dgrouper.allow.db.changes=true"/> 
        <arg line="${cmd}"/>
    </java>
  </target>
  <!-- target: xml.import -->

  <!-- target: xml-export -->
  <!-- TODO deprecate post 1.2.0 -->
  <target name="xml-export">
    <antcall target="xml.export"/>
  </target>
  <!-- target: xml-export -->

  <!-- target: xml-import -->
  <!-- TODO deprecate post 1.2.0 -->
  <target name="xml-import">
    <antcall target="xml.import"/>
  </target>
  <!-- target: xml-import -->

</project>

