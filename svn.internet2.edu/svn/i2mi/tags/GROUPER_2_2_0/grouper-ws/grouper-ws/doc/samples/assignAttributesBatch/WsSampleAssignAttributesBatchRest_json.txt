Grouper web service sample of service: assignAttributesBatch, WsSampleAssignAttributesBatchRest, manually written lite/rest, format: json, for version: 2.2.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_2_000/attributeAssignments HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.0
Host: localhost:8092
Content-Length: 480
Content-Type: text/x-json; charset=UTF-8

{
  "WsRestAssignAttributesBatchRequest":{
    "wsAssignAttributeBatchEntries":[
      {
        "attributeAssignOperation":"assign_attr",
        "attributeAssignType":"group",
        "wsAttributeDefNameLookup":{
          "name":"test:testAttributeAssignDefName"
        },
        "wsOwnerGroupLookup":{
          "groupName":"test:groupTestAttrAssign"
        }
        
      },
      {
        "attributeAssignOperation":"assign_attr",
        "attributeAssignType":"group_asgn",
        "wsAttributeDefNameLookup":{
          "name":"test:testAttributeAssignAssignName"
        },
        "wsOwnerAttributeAssignLookup":{
          "batchIndex":"0"
        }
      }
    ]
  }
}


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/x-json;charset=UTF-8
Content-Length: 3448
Date: Wed, 28 May 2014 22:20:42 GMT
Connection: close

{
  "WsAssignAttributesBatchResults":{
    "responseMetadata":{
      "millis":"124",
      "serverVersion":"2.2.0"
    },
    "resultMetadata":{
      "resultCode":"SUCCESS",
      "resultMessage":"Success for: clientVersion: 2.2.0, includeSubjectDetail: false, actAsSubject: null, subjectAttributeNames: null\n, paramNames: \n, params: null\n, wsAssignAttributeBatchEntries: 0. wsAssignAttributeBatchEntry: attributeAssignOperation: assign_attr, attributeAssignType: group, wsAttributeDefNameLookup: WsAttributeDefNameLookup[pitAttributeDefNames=[],name=test:testAttributeAssignDefName], wsOwnerGroupLookup: WsGroupLookup[pitGroups=[],groupName=test:groupTestAttrAssign],",
      "success":"T"
    },
    "wsAssignAttributeBatchResultArray":[
      {
        "changed":"F",
        "deleted":"F",
        "resultMetadata":{
          "resultCode":"SUCCESS",
          "resultMessage":", Found 1 results.",
          "success":"T"
        },
        "valuesChanged":"F",
        "wsAttributeAssigns":[
          {
            "attributeAssignActionId":"2aba34fbde924dc1998d2953c7481a88",
            "attributeAssignActionName":"assign",
            "attributeAssignActionType":"immediate",
            "attributeAssignDelegatable":"FALSE",
            "attributeAssignType":"group",
            "attributeDefId":"d4dcbc006b7144c68e5fdd88b15396c7",
            "attributeDefName":"test:testAttributeAssignDefNameDef",
            "attributeDefNameId":"3b2e222270434e40a53093f73d8b653e",
            "attributeDefNameName":"test:testAttributeAssignDefName",
            "createdOn":"2014/05/28 18:20:39.672",
            "disallowed":"F",
            "enabled":"T",
            "id":"cf9c71caa41c4b1289f81737ac9ccf5c",
            "lastUpdated":"2014/05/28 18:20:39.672",
            "ownerGroupId":"62273e441cd0434cb78254ffc4ab6573",
            "ownerGroupName":"test:groupTestAttrAssign",
            "wsAttributeAssignValues":[
              {
                "id":"080ce759ff464f25aff74981e1024abf",
                "valueSystem":"15"
              },
              {
                "id":"ced85c92a9c64432878bd19727c3c950",
                "valueSystem":"5"
              },
              {
                "id":"f1484344db194203b0a2cfb67a58d205",
                "valueSystem":"5"
              }
            ]
          }
        ]
        
      },
      {
        "changed":"F",
        "deleted":"F",
        "resultMetadata":{
          "resultCode":"SUCCESS",
          "resultMessage":", Found 1 results.",
          "success":"T"
        },
        "valuesChanged":"F",
        "wsAttributeAssigns":[
          {
            "attributeAssignActionId":"b99f8bb17f43474480d257162f66dae4",
            "attributeAssignActionName":"assign",
            "attributeAssignActionType":"immediate",
            "attributeAssignDelegatable":"FALSE",
            "attributeAssignType":"group_asgn",
            "attributeDefId":"f669e2a8082a45e0ba7a8ec7e61f24ea",
            "attributeDefName":"test:testAttributeAssignAssignNameDef",
            "attributeDefNameId":"20a4b36924de43a5b3d9881e1bdbbd00",
            "attributeDefNameName":"test:testAttributeAssignAssignName",
            "createdOn":"2014/05/28 18:20:39.728",
            "disallowed":"F",
            "enabled":"T",
            "id":"d68229374a784a0aab8fa9d8f0d7975c",
            "lastUpdated":"2014/05/28 18:20:39.728",
            "ownerAttributeAssignId":"cf9c71caa41c4b1289f81737ac9ccf5c"
          }
        ]
      }
    ]
    ,
    "wsAttributeDefNames":[
      {
        "attributeDefId":"d4dcbc006b7144c68e5fdd88b15396c7",
        "attributeDefName":"test:testAttributeAssignDefNameDef",
        "displayExtension":"testAttributeAssignDefName",
        "displayName":"test:testAttributeAssignDefName",
        "extension":"testAttributeAssignDefName",
        "idIndex":"10115",
        "name":"test:testAttributeAssignDefName",
        "uuid":"3b2e222270434e40a53093f73d8b653e"
      }
    ]
    ,
    "wsAttributeDefs":[
      {
        "attributeDefType":"attr",
        "extension":"testAttributeAssignDefNameDef",
        "idIndex":"10031",
        "multiAssignable":"F",
        "multiValued":"T",
        "name":"test:testAttributeAssignDefNameDef",
        "uuid":"d4dcbc006b7144c68e5fdd88b15396c7",
        "valueType":"integer"
      }
    ]
    ,
    "wsGroups":[
      {
        "description":"description",
        "displayExtension":"groupTestAttrAssign",
        "displayName":"test:groupTestAttrAssign",
        "extension":"groupTestAttrAssign",
        "idIndex":"10006",
        "name":"test:groupTestAttrAssign",
        "typeOfGroup":"group",
        "uuid":"62273e441cd0434cb78254ffc4ab6573"
      }
    ]
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2012 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.attribute;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;
import org.apache.commons.lang.builder.ToStringBuilder;

import edu.internet2.middleware.grouper.ws.coresoap.WsAssignAttributeBatchEntry;
import edu.internet2.middleware.grouper.ws.coresoap.WsAssignAttributeBatchResult;
import edu.internet2.middleware.grouper.ws.coresoap.WsAssignAttributesBatchResults;
import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeAssignLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsAttributeDefNameLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsGroup;
import edu.internet2.middleware.grouper.ws.coresoap.WsGroupLookup;
import edu.internet2.middleware.grouper.ws.coresoap.WsSubjectLookup;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.attribute.WsRestAssignAttributesBatchRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleAssignAttributesBatchRest implements WsSampleRest {

  /**
   * attribute assignments batch web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  public static void assignAttributesBatch(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      String url = RestClientSettings.URL + "/" + RestClientSettings.VERSION  
        + "/attributeAssignments";
      
      PostMethod method = new PostMethod(
          url);

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);
      
      WsRestAssignAttributesBatchRequest wsRestAssignAttributesBatchRequest = new WsRestAssignAttributesBatchRequest();

      // set the act as id
      WsSubjectLookup actAsSubject = WsSubjectLookup.class.newInstance();
      actAsSubject.setSubjectId("GrouperSystem");

      WsAssignAttributeBatchEntry wsAssignAttributeBatchEntry1 = new WsAssignAttributeBatchEntry();
      
      {
        wsAssignAttributeBatchEntry1.setAttributeAssignOperation("assign_attr");
        wsAssignAttributeBatchEntry1.setAttributeAssignType("group");
        
        WsAttributeDefNameLookup wsAttributeDefNameLookup1 = new WsAttributeDefNameLookup();
        wsAttributeDefNameLookup1.setName("test:testAttributeAssignDefName");
        wsAssignAttributeBatchEntry1.setWsAttributeDefNameLookup(wsAttributeDefNameLookup1);

        WsGroupLookup wsGroupLookup = new WsGroupLookup();
        wsGroupLookup.setGroupName("test:groupTestAttrAssign");

        wsAssignAttributeBatchEntry1.setWsOwnerGroupLookup(wsGroupLookup);

      }
      
      WsAssignAttributeBatchEntry wsAssignAttributeBatchEntry2 = new WsAssignAttributeBatchEntry();

      {
        wsAssignAttributeBatchEntry2.setAttributeAssignOperation("assign_attr");
        wsAssignAttributeBatchEntry2.setAttributeAssignType("group_asgn");
        
        WsAttributeDefNameLookup wsAttributeDefNameLookup2 = new WsAttributeDefNameLookup();
        wsAttributeDefNameLookup2.setName("test:testAttributeAssignAssignName");
        wsAssignAttributeBatchEntry2.setWsAttributeDefNameLookup(wsAttributeDefNameLookup2);
  
        WsAttributeAssignLookup wsAttributeAssignLookup = new WsAttributeAssignLookup();
        wsAttributeAssignLookup.setBatchIndex("0");
        wsAssignAttributeBatchEntry2.setWsOwnerAttributeAssignLookup(wsAttributeAssignLookup);
      }
      

      WsAssignAttributeBatchEntry[] wsAssignAttributeBatchEntries = new WsAssignAttributeBatchEntry[]{
          wsAssignAttributeBatchEntry1, wsAssignAttributeBatchEntry2};
      
      wsRestAssignAttributesBatchRequest.setWsAssignAttributeBatchEntries(wsAssignAttributeBatchEntries);
      
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(wsRestAssignAttributesBatchRequest);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsAssignAttributesBatchResults wsAssignAttributesBatchResults = (WsAssignAttributesBatchResults)result;

      System.out.println(ToStringBuilder.reflectionToString(
          wsAssignAttributesBatchResults));

      String resultMessage = wsAssignAttributesBatchResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      WsAssignAttributeBatchResult[] wsAssignAttributeBatchResultsArray = wsAssignAttributesBatchResults
        .getWsAssignAttributeBatchResultArray();

      for (WsAssignAttributeBatchResult wsAssignAttributeBatchResult : wsAssignAttributeBatchResultsArray) {
        System.out.println(ToStringBuilder.reflectionToString(
            wsAssignAttributeBatchResult));
      }
      
      WsGroup[] wsGroupsResultArray = wsAssignAttributesBatchResults.getWsGroups();

      for (WsGroup wsGroup : wsGroupsResultArray) {
        System.out.println(ToStringBuilder.reflectionToString(
            wsGroup));
      }

      System.out.println("Server version: " + wsAssignAttributesBatchResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  public static void main(String[] args) {
    assignAttributesBatch(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    assignAttributesBatch(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_json.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


WsAssignAttributesBatchResults[
  wsAttributeDefs={WsAttributeDef[idIndex=10031,extension=testAttributeAssignDefNameDef,name=test:testAttributeAssignDefNameDef,uuid=d4dcbc006b7144c68e5fdd88b15396c7,attributeDefType=attr,multiAssignable=F,multiValued=T,valueType=integer]},
  wsAttributeDefNames={WsAttributeDefName[idIndex=10115,extension=testAttributeAssignDefName,displayExtension=testAttributeAssignDefName,displayName=test:testAttributeAssignDefName,name=test:testAttributeAssignDefName,uuid=3b2e222270434e40a53093f73d8b653e,attributeDefId=d4dcbc006b7144c68e5fdd88b15396c7,attributeDefName=test:testAttributeAssignDefNameDef]},
  wsAssignAttributeBatchResultArray={edu.internet2.middleware.grouper.ws.coresoap.WsAssignAttributeBatchResult@265aeb9e,edu.internet2.middleware.grouper.ws.coresoap.WsAssignAttributeBatchResult@1b22e5be},
  resultMetadata=WsResultMeta[resultCode=SUCCESS,resultMessage=Success for: clientVersion: 2.2.0, includeSubjectDetail: false, actAsSubject: null, subjectAttributeNames: null
, paramNames: 
, params: null
, wsAssignAttributeBatchEntries: 0. wsAssignAttributeBatchEntry: attributeAssignOperation: assign_attr, attributeAssignType: group, wsAttributeDefNameLookup: WsAttributeDefNameLookup[pitAttributeDefNames=[],name=test:testAttributeAssignDefName], wsOwnerGroupLookup: WsGroupLookup[pitGroups=[],groupName=test:groupTestAttrAssign],,success=T,httpStatusCode=500],
  responseMetadata=WsResponseMeta[resultWarnings=,millis=124,millisStart=0,serverVersion=2.2.0],
  wsGroups={WsGroup[extension=groupTestAttrAssign,typeOfGroup=group,displayExtension=groupTestAttrAssign,description=description,displayName=test:groupTestAttrAssign,name=test:groupTestAttrAssign,uuid=62273e441cd0434cb78254ffc4ab6573,idIndex=10006]}]
WsAssignAttributeBatchResult[changed=F,valuesChanged=F,deleted=F,
  resultMetadata=WsResultMeta[resultCode=SUCCESS,resultMessage=, Found 1 results.,success=T,httpStatusCode=500],
  wsAttributeAssigns={edu.internet2.middleware.grouper.ws.coresoap.WsAttributeAssign@4e2b495c}]
WsAssignAttributeBatchResult[changed=F,valuesChanged=F,deleted=F,
  resultMetadata=WsResultMeta[resultCode=SUCCESS,resultMessage=, Found 1 results.,success=T,httpStatusCode=500],
  wsAttributeAssigns={edu.internet2.middleware.grouper.ws.coresoap.WsAttributeAssign@347086f9}]
WsGroup[extension=groupTestAttrAssign,typeOfGroup=group,displayExtension=groupTestAttrAssign,description=description,displayName=test:groupTestAttrAssign,name=test:groupTestAttrAssign,uuid=62273e441cd0434cb78254ffc4ab6573,idIndex=10006]
Server version: 2.2.0, result code: SUCCESS, result message: Success for: clientVersion: 2.2.0, includeSubjectDetail: false, actAsSubject: null, subjectAttributeNames: null
, paramNames: 
, params: null
, wsAssignAttributeBatchEntries: 0. wsAssignAttributeBatchEntry: attributeAssignOperation: assign_attr, attributeAssignType: group, wsAttributeDefNameLookup: WsAttributeDefNameLookup[pitAttributeDefNames=[],name=test:testAttributeAssignDefName], wsOwnerGroupLookup: WsGroupLookup[pitGroups=[],groupName=test:groupTestAttrAssign],
