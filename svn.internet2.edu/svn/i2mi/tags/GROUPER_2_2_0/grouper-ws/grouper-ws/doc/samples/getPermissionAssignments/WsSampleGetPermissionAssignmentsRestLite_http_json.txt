Grouper web service sample of service: getPermissionAssignments, WsSampleGetPermissionAssignmentsRestLite, manually written lite/rest, format: http_json, for version: 2.2.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/json/v2_2_000/permissionAssignments HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.0
Host: localhost:8092
Content-Length: 126

wsLiteObjectType=WsRestGetPermissionAssignmentsLiteRequest&actAsSubjectId=GrouperSystem&wsAttributeDefName=aStem:permissionDef


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/x-json;charset=UTF-8
Content-Length: 2472
Date: Wed, 28 May 2014 23:59:13 GMT
Connection: close

{
  "WsGetPermissionAssignmentsResults":{
    "responseMetadata":{
      "millis":"91",
      "serverVersion":"2.2.0"
    },
    "resultMetadata":{
      "resultCode":"SUCCESS",
      "resultMessage":", Found 3 results.",
      "success":"T"
    },
    "wsAttributeDefs":[
      {
        "attributeDefType":"perm",
        "extension":"permissionDef",
        "idIndex":"10033",
        "multiAssignable":"F",
        "multiValued":"F",
        "name":"aStem:permissionDef",
        "uuid":"3e9b47c54e024d03bc36950195be63c2",
        "valueType":"marker"
      }
    ]
    ,
    "wsGroups":[
      {
        "displayExtension":"role",
        "displayName":"a stem:role",
        "extension":"role",
        "idIndex":"10008",
        "name":"aStem:role",
        "typeOfGroup":"role",
        "uuid":"5585b6c0a376482bb41874f99b0dab52"
      },
      {
        "displayExtension":"role2",
        "displayName":"a stem:role2",
        "extension":"role2",
        "idIndex":"10009",
        "name":"aStem:role2",
        "typeOfGroup":"role",
        "uuid":"7bfeb32e60264e8a8723accf3c4757f0"
      }
    ]
    ,
    "wsPermissionAssigns":[
      {
        "action":"read",
        "allowedOverall":"T",
        "attributeAssignId":"42fc600e4762401aa0fa25da610a898a",
        "attributeDefId":"3e9b47c54e024d03bc36950195be63c2",
        "attributeDefName":"aStem:permissionDef",
        "attributeDefNameId":"fbc645dbc19c4f11aa2e8b7110b9dc40",
        "attributeDefNameName":"aStem:permissionDefName",
        "disallowed":"F",
        "enabled":"T",
        "membershipId":"a76ac09ec357427db336ab0d4b5b6c33:679086892c40467b84dcc6f5e1f40869",
        "permissionType":"role",
        "roleId":"5585b6c0a376482bb41874f99b0dab52",
        "roleName":"aStem:role",
        "sourceId":"jdbc",
        "subjectId":"test.subject.0"
      },
      {
        "action":"read",
        "allowedOverall":"T",
        "attributeAssignId":"42fc600e4762401aa0fa25da610a898a",
        "attributeDefId":"3e9b47c54e024d03bc36950195be63c2",
        "attributeDefName":"aStem:permissionDef",
        "attributeDefNameId":"fbc645dbc19c4f11aa2e8b7110b9dc40",
        "attributeDefNameName":"aStem:permissionDefName",
        "disallowed":"F",
        "enabled":"T",
        "membershipId":"0df4992910b44ce0bd6f5679fd630d26:679086892c40467b84dcc6f5e1f40869",
        "permissionType":"role",
        "roleId":"5585b6c0a376482bb41874f99b0dab52",
        "roleName":"aStem:role",
        "sourceId":"jdbc",
        "subjectId":"test.subject.4"
      },
      {
        "action":"write",
        "allowedOverall":"T",
        "attributeAssignId":"9b6e438ce55f437c8d8a1bd4145b5c45",
        "attributeDefId":"3e9b47c54e024d03bc36950195be63c2",
        "attributeDefName":"aStem:permissionDef",
        "attributeDefNameId":"aaa4346ff4b246328bbe5f0c0c7addb1",
        "attributeDefNameName":"aStem:permissionDefName2",
        "disallowed":"F",
        "enabled":"T",
        "membershipId":"4dd719a216e2400b89535289c3aa5281:1406c7fd19ba43afb7c5884f5deb0d36",
        "permissionType":"role_subject",
        "roleId":"7bfeb32e60264e8a8723accf3c4757f0",
        "roleName":"aStem:role2",
        "sourceId":"jdbc",
        "subjectId":"test.subject.1"
      }
    ]
    ,
    "wsSubjects":[
    ]
  }
}


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2012 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.permission;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsGetPermissionAssignmentsResults;
import edu.internet2.middleware.grouper.ws.rest.permission.WsRestGetPermissionAssignmentsLiteRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetPermissionAssignmentsRestLite implements WsSampleRest {

  /**
   * get permission assignments lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void getPermissionAssignmentsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + wsSampleRestType.getWsLiteResponseContentType().name()
            + "/" + RestClientSettings.VERSION  
            + "/permissionAssignments");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);
      
      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetPermissionAssignmentsLiteRequest wsRestGetPermissionAssignmentsLiteRequest 
        = new WsRestGetPermissionAssignmentsLiteRequest();

      // set the act as id
      wsRestGetPermissionAssignmentsLiteRequest.setActAsSubjectId("GrouperSystem");
      wsRestGetPermissionAssignmentsLiteRequest.setWsAttributeDefName("aStem:permissionDef");


      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(wsRestGetPermissionAssignmentsLiteRequest);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));


      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      //convert to object (from xhtml, xml, json, etc)
      WsGetPermissionAssignmentsResults wsGetPermissionAssignmentsResults = (WsGetPermissionAssignmentsResults)wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      String resultMessage = wsGetPermissionAssignmentsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetPermissionAssignmentsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    getPermissionAssignmentsLite(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getPermissionAssignmentsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    return true;
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.2.0, result code: SUCCESS, result message: , Found 3 results.
