Grouper web service sample of service: getGroups, WsSampleGetGroupsRest, manually written lite/rest, format: xml, for version: 2.2.0


#########################################
##
## HTTP request sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


POST /grouper-ws/servicesRest/v2_2_000/subjects HTTP/1.1
Connection: close
Authorization: Basic xxxxxxxxxxxxxxxxx==
User-Agent: Jakarta Commons-HttpClient/3.0
Host: localhost:8092
Content-Length: 289
Content-Type: text/xml; charset=UTF-8

<WsRestGetGroupsRequest>
  <subjectLookups>
    <WsSubjectLookup>
      <subjectId>10021368</subjectId>
    </WsSubjectLookup>
    <WsSubjectLookup>
      <subjectId>10039438</subjectId>
    </WsSubjectLookup>
  </subjectLookups>
  <subjectAttributeNames>
    <string>description</string>
  </subjectAttributeNames>
</WsRestGetGroupsRequest>


#########################################
##
## HTTP response sample (could be formatted for view by
## indenting or changing dates or other data)
##
#########################################


HTTP/1.1 201 Created
Server: Apache-Coyote/1.1
Set-Cookie: JSESSIONID=xxxxxxxxxxxxxxxxxxxxxxxx; Path=/grouper-ws
X-Grouper-resultCode: SUCCESS
X-Grouper-success: T
X-Grouper-resultCode2: NONE
Content-Type: text/xml;charset=UTF-8
Transfer-Encoding: chunked
Date: Wed, 28 May 2014 23:37:09 GMT
Connection: close

3ff
<WsGetGroupsResults>
  <results>
    <WsGetGroupsResult>
      <wsGroups>
        <WsGroup>
          <extension>aGroup</extension>
          <typeOfGroup>group</typeOfGroup>
          <displayExtension>a group</displayExtension>
          <description>a group description</description>
          <displayName>a stem:a group</displayName>
          <name>aStem:aGroup</name>
          <uuid>5f329760c7b94adfa12942c8600d54f1</uuid>
          <idIndex>10001</idIndex>
        </WsGroup>
        <WsGroup>
          <extension>aGroup2</extension>
          <typeOfGroup>group</typeOfGroup>
          <displayExtension>a group2</displayExtension>
          <description>a group description2</description>
          <displayName>a stem:a group2</displayName>
          <name>aStem:aGroup2</name>
          <uuid>46bff4af794844b88aaf1908d3bc57b9</uuid>
          <idIndex>10002</idIndex>
        </WsGroup>
        <WsGroup>
          <extension>sysadmingroup</extension>
          <typeOfGroup>group</typeOfGroup>
          <displayExtension>sysadmingroup</displayExtension>
          <displayName>etc:sysadmingroup</displayName>
          <name>etc:sysadmingroup</name>
          <uuid>940231109ed34f7fa74ee8f052863835</uuid>
          <idIndex>10005</idIndex>
        </WsGroup>
        <WsGroup>
          <extension>webServiceActAsGroup</extension>
          <typeOfGroup>group
3ff
</typeOfGroup>
          <displayExtension>webServiceActAsGroup</displayExtension>
          <displayName>etc:webServiceActAsGroup</displayName>
          <name>etc:webServiceActAsGroup</name>
          <uuid>bb5743b462f449aca97506ae208db25a</uuid>
          <idIndex>10004</idIndex>
        </WsGroup>
      </wsGroups>
      <resultMetadata>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
      </resultMetadata>
      <wsSubject>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
        <id>10021368</id>
        <name>10021368</name>
        <sourceId>jdbc</sourceId>
        <attributeValues>
          <string></string>
        </attributeValues>
      </wsSubject>
    </WsGetGroupsResult>
    <WsGetGroupsResult>
      <wsGroups>
        <WsGroup>
          <extension>aGroup</extension>
          <typeOfGroup>group</typeOfGroup>
          <displayExtension>a group</displayExtension>
          <description>a group description</description>
          <displayName>a stem:a group</displayName>
          <name>aStem:aGroup</name>
          <uuid>5f329760c7b94adfa12942c8600d54f1</uuid>
          <idIndex>10001</idIndex>
        </WsGroup>
        <WsGroup>
          <extension>aGroup2</extension>
          <typeOfGroup>group</typeOfGroup>
          <displayExtension>a group2</displayExtension>
          <description>a group descript
3ff
ion2</description>
          <displayName>a stem:a group2</displayName>
          <name>aStem:aGroup2</name>
          <uuid>46bff4af794844b88aaf1908d3bc57b9</uuid>
          <idIndex>10002</idIndex>
        </WsGroup>
      </wsGroups>
      <resultMetadata>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
      </resultMetadata>
      <wsSubject>
        <resultCode>SUCCESS</resultCode>
        <success>T</success>
        <id>10039438</id>
        <name>10039438</name>
        <sourceId>jdbc</sourceId>
        <attributeValues>
          <string></string>
        </attributeValues>
      </wsSubject>
    </WsGetGroupsResult>
  </results>
  <resultMetadata>
    <resultCode>SUCCESS</resultCode>
    <resultMessage>Success for: clientVersion: 2.2.0, subjectLookups: Array size: 2: [0]: WsSubjectLookup[subjectId=10021368]
[1]: WsSubjectLookup[subjectId=10039438]

memberFilter: All, includeGroupDetail: false, actAsSubject: null
, params: null
fieldName1: null
, scope: null, wsStemLookup: null
, stemScope: null, enabled: null, pageSize: null, pageNumber: null, sortString: null, ascending: null
, pointInTimeFrom: null, pointInTimeTo: null</resultMessage>
    <success>T</success>
  </resultMetadata
de
>
  <subjectAttributeNames>
    <string>description</string>
  </subjectAttributeNames>
  <responseMetadata>
    <resultWarnings></resultWarnings>
    <millis>84</millis>
    <serverVersion>2.2.0</serverVersion>
  </responseMetadata>
</WsGetGroupsResults>
0


#########################################
##
## Java source code (note, any programming language / objects
## can use used to generate the above request/response.  Nothing
## is Java specific.  Also, if you are using Java, the client libraries
## are available
##
#########################################


/*******************************************************************************
 * Copyright 2012 Internet2
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/
package edu.internet2.middleware.grouper.ws.samples.rest.group;

import org.apache.commons.httpclient.Credentials;
import org.apache.commons.httpclient.DefaultHttpMethodRetryHandler;
import org.apache.commons.httpclient.Header;
import org.apache.commons.httpclient.HttpClient;
import org.apache.commons.httpclient.UsernamePasswordCredentials;
import org.apache.commons.httpclient.auth.AuthScope;
import org.apache.commons.httpclient.methods.PostMethod;
import org.apache.commons.httpclient.methods.StringRequestEntity;
import org.apache.commons.httpclient.params.DefaultHttpParams;
import org.apache.commons.httpclient.params.HttpMethodParams;
import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.ws.coresoap.WsGetGroupsResults;
import edu.internet2.middleware.grouper.ws.coresoap.WsSubjectLookup;
import edu.internet2.middleware.grouper.ws.rest.WsRestResultProblem;
import edu.internet2.middleware.grouper.ws.rest.group.WsRestGetGroupsRequest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest;
import edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType;
import edu.internet2.middleware.grouper.ws.util.RestClientSettings;

/**
 * @author mchyzer
 */
public class WsSampleGetGroupsRest implements WsSampleRest {

  /**
   * get groups lite web service with REST
   * @param wsSampleRestType is the type of rest (xml, xhtml, etc)
   */
  @SuppressWarnings("deprecation")
  public static void getGroupsLite(WsSampleRestType wsSampleRestType) {

    try {
      HttpClient httpClient = new HttpClient();
      
      DefaultHttpParams.getDefaultParams().setParameter(
          HttpMethodParams.RETRY_HANDLER, new DefaultHttpMethodRetryHandler(0, false));

      //URL e.g. http://localhost:8093/grouper-ws/servicesRest/v1_3_000/...
      //NOTE: aStem:aGroup urlencoded substitutes %3A for a colon
      PostMethod method = new PostMethod(
          RestClientSettings.URL + "/" + RestClientSettings.VERSION  
            + "/subjects");

      httpClient.getParams().setAuthenticationPreemptive(true);
      Credentials defaultcreds = new UsernamePasswordCredentials(RestClientSettings.USER, 
          RestClientSettings.PASS);

      //no keep alive so response if easier to indent for tests
      method.setRequestHeader("Connection", "close");
      
      //e.g. localhost and 8093
      httpClient.getState()
          .setCredentials(new AuthScope(RestClientSettings.HOST, RestClientSettings.PORT), defaultcreds);

      //Make the body of the request, in this case with beans and marshaling, but you can make
      //your request document in whatever language or way you want
      WsRestGetGroupsRequest getGroups = new WsRestGetGroupsRequest();

      getGroups.setSubjectAttributeNames(new String[]{"description"});

      // seeif two subjects are in the group
      WsSubjectLookup[] subjectLookups = new WsSubjectLookup[2];
      subjectLookups[0] = new WsSubjectLookup("10021368", null, null);

      subjectLookups[1] = new WsSubjectLookup("10039438", null, null);

      getGroups.setSubjectLookups(subjectLookups);
      
      //get the xml / json / xhtml / paramString
      String requestDocument = wsSampleRestType.getWsLiteRequestContentType().writeString(getGroups);
      
      //make sure right content type is in request (e.g. application/xhtml+xml
      String contentType = wsSampleRestType.getWsLiteRequestContentType().getContentType();
      
      method.setRequestEntity(new StringRequestEntity(requestDocument, contentType, "UTF-8"));
      
      httpClient.executeMethod(method);

      //make sure a request came back
      Header successHeader = method.getResponseHeader("X-Grouper-success");
      String successString = successHeader == null ? null : successHeader.getValue();
      if (StringUtils.isBlank(successString)) {
        throw new RuntimeException("Web service did not even respond!");
      }
      boolean success = "T".equals(successString);
      String resultCode = method.getResponseHeader("X-Grouper-resultCode").getValue();
      
      String response = RestClientSettings.responseBodyAsString(method);

      Object result = wsSampleRestType
        .getWsLiteResponseContentType().parseString(response);
      
      //see if problem
      if (result instanceof WsRestResultProblem) {
        throw new RuntimeException(((WsRestResultProblem)result).getResultMetadata().getResultMessage());
      }
      
      //convert to object (from xhtml, xml, json, etc)
      WsGetGroupsResults wsGetGroupsResults = (WsGetGroupsResults)result;
      
      String resultMessage = wsGetGroupsResults.getResultMetadata().getResultMessage();

      // see if request worked or not
      if (!success) {
        throw new RuntimeException("Bad response from web service: successString: " + successString + ", resultCode: " + resultCode
            + ", " + resultMessage);
      }
      
      System.out.println("Server version: " + wsGetGroupsResults.getResponseMetadata().getServerVersion()
          + ", result code: " + resultCode
          + ", result message: " + resultMessage );

    } catch (Exception e) {
      throw new RuntimeException(e);
    }

  }

  /**
   * @param args
   */
  @SuppressWarnings("unchecked")
  public static void main(String[] args) {
    getGroupsLite(WsSampleRestType.xml);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#executeSample(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public void executeSample(WsSampleRestType wsSampleRestType) {
    getGroupsLite(wsSampleRestType);
  }

  /**
   * @see edu.internet2.middleware.grouper.ws.samples.types.WsSampleRest#validType(edu.internet2.middleware.grouper.ws.samples.types.WsSampleRestType)
   */
  public boolean validType(WsSampleRestType wsSampleRestType) {
    //dont allow http params
    return !WsSampleRestType.http_json.equals(wsSampleRestType);
  }
}


#########################################
##
## Stdout
##
#########################################


Server version: 2.2.0, result code: SUCCESS, result message: Success for: clientVersion: 2.2.0, subjectLookups: Array size: 2: [0]: WsSubjectLookup[subjectId=10021368]
[1]: WsSubjectLookup[subjectId=10039438]

memberFilter: All, includeGroupDetail: false, actAsSubject: null
, params: null
 fieldName1: null
, scope: null, wsStemLookup: null
, stemScope: null, enabled: null, pageSize: null, pageNumber: null, sortString: null, ascending: null
, pointInTimeFrom: null, pointInTimeTo: null
