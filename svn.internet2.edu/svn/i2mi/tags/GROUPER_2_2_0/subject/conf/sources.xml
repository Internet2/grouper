<?xml version="1.0" encoding="utf-8"?>

<!--
Grouper's subject resolver configuration
$Id: sources.xml,v 1.7 2007-03-16 22:22:16 khuxtable Exp $
-->

<sources>



  <source adapterClass="edu.internet2.middleware.subject.provider.JDBCSourceAdapter">
    <id>jdbc</id>
    <name>JDBC Source Adapter</name>
    <type>person</type>
    
    <init-param>
      <param-name>maxActive</param-name>
      <param-value>1</param-value>
    </init-param>
    <init-param>
      <param-name>maxIdle</param-name>
      <param-value>2</param-value>
    </init-param>
     
    <init-param>
      <param-name>maxWait</param-name>
      <param-value>50</param-value>
    </init-param>
    
    <init-param>
      <param-name>dbDriver</param-name>
      <param-value>com.mysql.jdbc.Driver</param-value>
    </init-param>
    <init-param>
      <param-name>dbUrl</param-name>
   <!-- <param-value>jdbc:hsqldb:hsql://localhost/grouper</param-value>  -->	
      <param-value>jdbc:mysql://localhost/bogusdb</param-value>
    </init-param>


    <init-param>
      <param-name>dbUser</param-name>
      <param-value>sa</param-value>
    </init-param>
    <init-param>
      <param-name>dbPwd</param-name>
      <param-value></param-value>
    </init-param>
    
     <init-param>
      <param-name>SubjectID_AttributeType</param-name>
      <param-value>id</param-value>
    </init-param>
    <init-param>
      <param-name>Name_AttributeType</param-name>
      <param-value>name</param-value>
    </init-param>
    <init-param>
      <param-name>Description_AttributeType</param-name>
      <param-value>name</param-value>
    </init-param>
    
    <search>
        <searchType>searchSubject</searchType>
        <param>
        	<param-name>numParameters</param-name>
        	<param-value>1</param-value>
        </param>
        <param>
            <param-name>sql</param-name>
            <param-value>
                select id, 
                  concat(firstname, concat(' ', lastname)) as name, 
                  concat(lastname, concat(', ', firstname)) as lfname,
                  lastname, firstname, middlename,
                  account.name as loginid,
                  department, curriculum, appointment
                from individual 
                  left join account on (account.individualid = id)
                  left join faculty on (faculty.individualid = id)
                  left join staff on (staff.individualid = id)
                  left join student on (student.individualid = id)
                where (id=?)
            </param-value>
       </param>
    </search>
    <search>
        <searchType>searchSubjectByIdentifier</searchType>
        <param>
        	<param-name>numParameters</param-name>
        	<param-value>1</param-value>
        </param>
        <param>
            <param-name>sql</param-name>
            <param-value>
                select id, 
                  concat(firstname, concat(' ', lastname)) as name, 
                  concat(lastname, concat(', ', firstname)) as lfname,
                  lastname, firstname, middlename,
                  account.name as loginid,
                  department, curriculum, appointment
                from individual 
                  left join account on (account.individualid = id)
                  left join faculty on (faculty.individualid = id)
                  left join staff on (staff.individualid = id)
                  left join student on (student.individualid = id)
                where (account.name=?)
            </param-value>
        </param>
    </search>
    <search>
       <searchType>search</searchType>
        <param>
        	<param-name>numParameters</param-name>
        	<param-value>4</param-value>
        </param>
        <param>
            <param-name>sql</param-name>
            <param-value>
                select id, 
                  concat(firstname, concat(' ', lastname)) as name, 
                  concat(lastname, concat(', ', firstname)) as lfname,
                  lastname, firstname, middlename,
                  account.name as loginid,
                  department, curriculum, appointment
                from individual 
                  left join account on (account.individualid = id)
                  left join faculty on (faculty.individualid = id)
                  left join staff on (staff.individualid = id)
                  left join student on (student.individualid = id)
                where (firstname like '%'||?||'%')
                  or (lastname like '%'||?||'%') 
                  or (department like '%'||?||'%') 
                  or (account.name like '%'||?||'%')
            </param-value>
        </param>
    </search>
    
    
  </source>


<!--
  <source adapterClass="edu.internet2.middleware.subject.provider.JNDISourceAdapter">
    <id>example</id>
    <name>Example Edu</name>
    <type>person</type>
    <init-param>
      <param-name>INITIAL_CONTEXT_FACTORY</param-name>
      <param-value>com.sun.jndi.ldap.LdapCtxFactory</param-value>
    </init-param>
    <init-param>
      <param-name>PROVIDER_URL</param-name>
      <param-value>ldap://localhost:389</param-value>
    </init-param>
    <init-param>
      <param-name>SECURITY_AUTHENTICATION</param-name>
      <param-value>simple</param-value>
    </init-param>
    <init-param>
      <param-name>SECURITY_PRINCIPAL</param-name>
      <param-value>cn=Manager,dc=example,dc=edu</param-value>
    </init-param>
    <init-param>
      <param-name>SECURITY_CREDENTIALS</param-name>
      <param-value>secret</param-value>
    </init-param>
     <init-param>
      <param-name>SubjectID_AttributeType</param-name>
      <param-value>exampleEduRegID</param-value>
    </init-param>
    <init-param>
      <param-name>Name_AttributeType</param-name>
      <param-value>cn</param-value>
    </init-param>
    <init-param>
      <param-name>Description_AttributeType</param-name>
      <param-value>description</param-value>
    </init-param>
    
    /// Scope Values can be: OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE 
    /// For filter use 
    
    <search>
        <searchType>searchSubject</searchType>
        <param>
            <param-name>filter</param-name>
            <param-value>
                (&amp; (exampleEduRegId=%TERM%) (objectclass=exampleEduPerson))
            </param-value>
        </param>
        <param>
            <param-name>scope</param-name>
            <param-value>
                SUBTREE_SCOPE            
            </param-value>
        </param>
        <param>
            <param-name>base</param-name>
            <param-value>
                ou=people,dc=example,dc=edu
            </param-value>
        </param>
         
    </search>
    <search>
        <searchType>searchSubjectByIdentifier</searchType>
        <param>
            <param-name>filter</param-name>
            <param-value>
                (&amp; (uid=%TERM%) (objectclass=exampleEduPerson))
            </param-value>
        </param>
        <param>
            <param-name>scope</param-name>
            <param-value>
                SUBTREE_SCOPE            
            </param-value>
        </param>
        <param>
            <param-name>base</param-name>
            <param-value>
                ou=people,dc=example,dc=edu
            </param-value>
        </param>
    </search>
    
    <search>
       <searchType>search</searchType>
         <param>
            <param-name>filter</param-name>
            <param-value>
                (&amp; (|(uid=%TERM%)(cn=*%TERM%*)(exampleEduRegId=%TERM%))(objectclass=exampleEduPerson))
            </param-value>
        </param>
        <param>
            <param-name>scope</param-name>
            <param-value>
                SUBTREE_SCOPE            
            </param-value>
        </param>
         <param>
            <param-name>base</param-name>
            <param-value>
                ou=people,dc=example,dc=edu
            </param-value>
        </param>
    </search>
    ///Attributes you would like to display when doing a search 
    <attribute>sn</attribute>
    <attribute>department</attribute>
   
  </source>
-->
</sources>

