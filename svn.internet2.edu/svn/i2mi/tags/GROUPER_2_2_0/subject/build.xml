<!-- Build configuration for Subject API -->

<project name="Subject" default="test" basedir=".">

	<!-- Set global properties for this build -->
	<property file="misc/version.properties" />

	<property name="src.dir" value="src" />
	<property name="test.dir" value="tests" />
	<property name="lib.dir" value="lib" />
	<property name="conf.dir" value="conf" />
	<property name="build.dir" value="dist/build" />
	<property name="dist.dir" value="dist" />
	<property name="doc.dir" value="doc" />
	<property name="javadoc.dir" value="${doc.dir}/api" />

	<property name="distname" value="subject" />
	<property name="jarfile" value="${dist.dir}/${distname}.jar"/>
	<property name="zipfile" value="${dist.dir}/${distname}-${version}.zip"/>
	<property name="tarfile" value="${dist.dir}/${distname}-${version}.tar"/>
	<property name="gzipfile" value="${dist.dir}/${distname}-${version}.tar.gz"/>

	<!-- Construct the CLASSPATH -->
	<path id="build.path">
		<pathelement path="${classpath}" />
		<pathelement location="${conf.dir}" />
		<pathelement location="${build.dir}" />
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>


  <!-- clean -->
  <target name="clean"
          description="remove build, test and distribution areas"
          depends="clean-javadocs,clean-build,clean-dist"
  />
  <!-- clean -->

  <!-- dist -->
  <target name="dist" 
          description="create product distribution"
          depends="clean-all, jar, javadoc, create-gzip, create-zip" 
  />
  <!-- dist -->
	
  <!-- init -->
  <!-- prepare directory structure for project build -->
  <target name="init">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${dist.dir}" />
  </target>
  <!-- init -->

  <!-- javadoc -->
  <target name="javadoc"
          description="generate api documentation"
  >
    <mkdir dir="${doc.dir}" />
    <mkdir dir="${javadoc.dir}" />
    <javadoc  packagenames="edu.internet2.middleware.subject.*,edu.internet2.middleware.common.subject.*"
              access="public"
              use="true"
              notree="false"
              nonavbar="false"
              noindex="false"
              splitindex="true"
              author="true"
              version="true"
              nodeprecatedlist="false"
              nodeprecated="false"	
              sourcepath="${src.dir}"
              destdir="${javadoc.dir}">
      <classpath refid="build.path" />
    </javadoc>
  </target>
  <!-- javadoc -->

  <!-- test -->
  <target name="test" 
          description="run api unit tests"
          depends="compile-tests"
  >
    <junit printsummary="yes" haltonfailure="yes" haltonerror="yes">
      <classpath refid="build.path" />
      <formatter type="plain" />
      <batchtest todir="${test.dir}">
        <fileset dir="${build.dir}">
          <include name="**/*Test.class"  />
          <include name="**/*Tests.class" />
        </fileset>
      </batchtest>
    </junit>
  </target>
  <!-- test -->


	<!-- Compile classes -->
	<target name="compile" depends="init">
		<javac debug="true" source="1.5"
      target="1.5"
			srcdir="${src.dir}"
			destdir="${build.dir}"
			includes="**/*.java">
			<classpath refid="build.path" />
		</javac>
	</target>

	<target name="jar" depends="compile" >
    <tstamp>
       <format property="the.timestamp" pattern="yyyy/MM/dd HH:mm:ss" />
    </tstamp>
        	<jar jarfile="${jarfile}">
            <manifest>
              <attribute name="Built-By"                value="${user.name}"/>
              <attribute name="Implementation-Vendor"   value="internet2.edu"/>
              <attribute name="Implementation-Title"    value="Subject API"/>
              <attribute name="Implementation-Version"  value="${version}"/>
              <attribute name="Build-Timestamp"         value="${the.timestamp}"/>
            </manifest>
            <fileset dir="misc">
              <include name="META-INF/*" />
            </fileset>
            <fileset dir="${src.dir}" />
            <fileset dir="${build.dir}" />
        	</jar>
	</target>
	
	<target name="create-gzip">
		<tar destfile="${tarfile}">
			<tarfileset dir=".">
			<patternset id="dist-fileset">
			<include name="${doc.dir}/**"/>
			<include name="${lib.dir}/**"/>
			<include name="${src.dir}/**"/>
			<include name="build.xml"/>
			<include name="${jarfile}"/>
			</patternset>
			</tarfileset>
		</tar>
		<gzip src="${tarfile}" destfile="${gzipfile}"/>
		<delete file="${tarfile}"/>
	</target>

	<target name="create-zip">
		<zip destfile="${zipfile}">
			<fileset dir=".">
			<patternset refid="dist-fileset"/>
			</fileset>
		</zip>
	</target>
   
	<target name="clean-all" depends="clean-javadocs, clean-build, clean-dist" />
	<target name="clean-build">
		<delete dir="${build.dir}" />
	</target>
	
	<target name="clean-dist">
		<delete dir="${dist.dir}" />
	</target>

	<target name="clean-javadocs">
		<delete dir="${javadoc.dir}" />
	</target>
	
	<target name="compile-tests" depends="compile">
		<javac
			srcdir="${test.dir}"
			destdir="${build.dir}"
			includes="**/*.java"
			debug="on">
			<classpath refid="build.path" />
		</javac>
	</target>
	
</project>

