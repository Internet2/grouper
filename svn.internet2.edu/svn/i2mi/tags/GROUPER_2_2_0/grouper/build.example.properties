#
# Grouper Global Build Properties
# $Id: build.example.properties,v 1.4 2009-10-15 22:57:32 tzeller Exp $
#

#
# Destination for built files.
#
# build.dir             Parent directory for build destinations.
# build.dir.grouper     Destination for built Grouper API files.
# build.dir.test        Destination for built Grouper API test files.
# build.log             Destination for build logging.
#
build.dir=${basedir}/dist/build
build.dir.grouper=${build.dir}/grouper
build.dir.test=${build.dir}/test
build.log=${basedir}/build.log

# These properties control option settings on the Javac compiler when it is 
# invoked using the <javac> task.
#
# compile.deprecation   Should compilation include the deprecation option?
# compile.optimize      Should compilation include the optimize option?
#
compile.deprecation=true
compile.optimize=false

#
# Location of Grouper configuration files.
#
# conf.dir              Location of Grouper's configuration files.
# conf.hibernate        Location of Grouper's Hibernate properties file.
#
conf.dir=${basedir}/conf
conf.hibernate=${conf.dir}/grouper.hibernate.properties

#
# Parameters for target "db.init".
#
# db.init.log           Log output to this file.
#
db.init.log=${basedir}/db.init.log

#
# Destination directory for various built components.
#
# dist.dir              Parent destination directory.
# dist.dir.javadoc      Destination directory for generated JavaDoc.
# dist.dir.run          Destination directory for runtime generated output.
# dist.dir.test         Destination directory for JUnit XML output.
#
dist.dir=${basedir}/dist
dist.dir.javadoc=${dist.dir}/api
dist.dir.run=${dist.dir}/run
dist.dir.test=${dist.dir}/test

#
# Configuration parameters for Grouper extensions.
#
# ext.dir               Root extension directory.
# ext.dir.bin           Destination directory for installed extension excecutables.
# ext.dir.doc           Destination directory for installed extension documentation.
# ext.dir.lib           Destination directory for installed extension libraries.
ext.dir=${basedir}/ext
ext.dir.bin=${ext.dir}/bin
ext.dir.doc=${ext.dir}/doc
ext.dir.lib=${ext.dir}/lib

#
# JavaDoc configuration parameters.
#
# javadoc.css           Stylesheet to use with generated documentation.
# javadoc.log           Log JavaDoc generation output to this file.
#
javadoc.css=${dist.dir.javadoc}/stylesheet.css
javadoc.log=${basedir}/javadoc.log

#
# Location of external libraries.
#
# lib.dir               Location of third party libraries.
# lib.jar.clover        Location of Clover jar.
# lib.jar.hsqldb        Location of HSQLDB jar.
#
lib.dir=${basedir}/lib
lib.jar.clover=${user.home}/.ant/.lib/clover.jar
lib.jar.hsqldb=${lib.dir}/jdbcSamples/hsqldb.jar

#
# Java memory configuration.
#
# memory.max            Maximum memory to allocate to JVM.
#
memory.max=192m

#
# Location of source files.
#
# src.dir               Parent directory for all other source files.
# src.dir.doc           Location of source documentation files.
# src.dir.grouper       Location of source Grouper API files.
# src.dir.test          Location of source Grouper API test files.
# src.doc.css           Location of stylesheet to use with generated documentation.
#
src.dir=${basedir}/src
src.dir.doc=${src.dir}/doc
src.dir.grouper=${src.dir}/grouper
src.dir.test=${src.dir}/test
src.doc.css=${src.dir.doc}/stylesheet.css

#
# Parameters for target "test".
#
# test.log              Log testing output to this file.
#
test.log=${basedir}/test.log

# if using ldappcng (e.g. ant ldappcng) then set this to where the base dir for it is.  before running
# ant ldappcng you need to run "mvn package -DskipTests" in the ldappcng project
ldappcng.basedir=../ldappcng_trunk
