<?xml version="1.0" encoding="utf-8"?>

<!-- 
    * This template describes all of the available configuration options for
    * Ldappc, and can be used as a starting point when configuring your 
    * particular instance. Many of the elements are optional so only those 
    * necessary for your situation need be defined. 
    *
    * It is important to note that the XML schema used to validate this file
    * requires the elements to be in the order presented here.
-->

<!-- 
    * <ldappc> defines the configuration used for provisioning. It contains
    * the elements defined below.
    *
    *     <grouper> - This optional element contains the configuration elements
    *        needed for provisioning Grouper data.
    *
    *     <signet> - This optional element contains the configuration elements 
    *        needed for provisioning Signet data.
    *
    *     <source-subject-identifiers> - This required element contains the data
    *        necessary for locating subjects in the LDAP directory.
    *
    *     <ldap> - This required element contains the data necessary for 
    *        connecting with LDAP directory.
    *
    * Althought both <grouper> and <signet> are optional, either one or both
    * must be defined within <ldappc>.
-->
<ldappc>

    <!-- 
        * <grouper> is an optional element that contains the elements
        * specific to provisioning data from Grouper. Note, if <grouper>
        * is NOT defined, then <signet> must be. <grouper> contains the 
        * following elements.
        *
        *   <group-queries> - This required element defines which groups are 
        *      selected for the provisioning.
        *
        *   <groups> - This optional element defines the configuration
        *      elements necessary for provisioning groups.
        *
        *   <memberships> - This optional element defines the configuration
        *      elements necessary for provisioning memberships.
        *
        * Although both <groups> and <memberships> are optional, either one or
        * both must be defined within <grouper>.
    -->
    <grouper><!-- 0 or 1 allowed -->

        <!-- 
            * <group-queries> is a required element identifying the 
            * queries used to select the groups used during provisioning.
            * The set of groups created by the union of the results of each query
            * determine the groups used for provisioning. It contains the following
            * elements.
            *
            *    <subordinate-stem-queries>   - This optional element selects all
            *       groups that are subordinate to anyone of the naming 
            *       stems identified in its <stem-list> element.
            *
            *    <attribute-matching-queries> - This optional element selects all 
            *       groups having an attribute containing the same value
            *       as anyone of the attribute name/value pairs identified in its 
            *       <attribute-list> element.
            *
            * Although both <subordinate-stem-queries> and <attribute-matching-queries>
            * are optional, either one or both must be defined within <grouper>.
        -->
        <group-queries><!-- exactly 1 required -->

            <!--
                * <subordinate-stem-queries> is a optional element defining a
                * list of stems such that any group that is part of a subordinate
                * stem is selected for provisioning. It contains the following 
                * element.
                *
                *    <stem-list> - This required element defines the list of stems
                *
                * <stem-list> contains one or more of the following element.
                *
                *    <stem> - This required element defines the stem.
                *
                * <stem>'s content is the the stem (e.g., uc:faculty:art).
            -->
            <subordinate-stem-queries><!-- 0 or 1 allowed-->

                <stem-list><!-- exactly 1 required -->

                    <stem><!-- 1 or more required -->
                        stem1
                    </stem>

                    <stem><!-- 1 or more required -->
                        stem2
                    </stem>

                </stem-list>

            </subordinate-stem-queries>

            <!--
                * <attribute-matching-queries> is a optional element defining a
                * list of attribute name/value pairs such that any group having
                * one or more attributes with the given value is selected for 
                * provisioning. It contains the following element.
                *
                *    <attribute-list> - This required element defines the list of 
                *       attributes.
                *
                * <attribute-list> contains one or more of the following element.
                *
                *    <attribute> - This required element defines the attribute
                *       name and value.
                *
                * <attribute> defines an attribute name/value pair using the 
                * following attributes.
                *
                *    name  - Defines the attribute name.
                *
                *    value - Defines the attribute value.
            -->
            <attribute-matching-queries><!-- 0 or 1 allowed -->

                <attribute-list><!-- exactly 1 required -->

                    <attribute name="attribute1"
                        value="attributeValue1" /><!-- 1 or more required -->

                    <attribute name="attribute2"
                        value="attributeValue2" /><!-- 1 or more required -->

                </attribute-list>

            </attribute-matching-queries>

        </group-queries>

        <!-- 
            * <groups> is an optional element defining how the entries and DNs 
            * for provisioned groups are created.  This element is REQUIRED if 
            * groups are being provisioned. The following attributes of <groups>
            * define how the entries and DNs are created.
            *
            *   structure - Defines the DN naming structure for groups. Its 
            *      value must be one of the values "flat" or "bushy".
            *
            *   root-dn - Defines the DN of the entry to be used as the root
            *      for storing the provisioned groups (e.g., "ou=groups,dc=example,dc=edu").  
            *
            *  ldap-object-class - Defines the object class used to create
            *     each provisioned group's LDAP entry. Please note that if this
            *     object class has required attributes not populated by the
            *     provisioning process, then an error will occur.
            *
            *  ldap-rdn-attribute - Defines the attribute in the ldap-object-class
            *     used as the RDN.
            *
            *  grouper-attribute - Defines whether the id or name attribute value 
            *     of the group is to be used for the value of the 
            *     ldap-rdn-attribute in the directory. The allowed values are 
            *     "id" or "name".
            *
            * The <groups> element contains the following elements.
            *
            *    <group-members-dn-list> - This optional element defines in which 
            *       attribute the list of member DNs is maintained. If this 
            *       element is NOT present, the list is NOT maintained.
            *                                   
            *    <group-members-name-list> - This optional element defines in which
            *       attribute the list of member names is maintained. If this 
            *       element is NOT present, the list is NOT maintained.
            *
            *    <group-attribute-mapping> - This optional element defines how
            *       group attributes are mapped to the group's directory entry.
            *       If this element is NOT present, then attributes are NOT maintained.
            *
            * Although <grouper-members-dn-list> and <group-members-name-list> are
            * optional, either one or both must be defined within <groups>.
        -->
        <groups structure="flat" root-dn="ou=root"
            ldap-object-class="gLdapObjectClass"
            ldap-rdn-attribute="gLdapRdnAttribute"
            grouper-attribute="id"><!-- 0 or 1 allowed -->

            <!-- 
                * The <group-members-dn-list> is an optional element defining
                * whether or not provisioned group LDAP entries have an attribute
                * listing all of the DNs of each Member's LDAP entry. If the 
                * element is defined, then the DNs of the Member's LDAP entries 
                * are stored in the LDAP attribute identified by the value of
                * list-attribute.
                *
                *    list-object-class - Optional attribute defining the
                *       object class the group entry must have to support the
                *       list-attribute. Please note that if this object class 
                *       has required attributes not populated by the provisioning
                *       process, then an error may occur.
                *
                *    list-attribute - Defines the LDAP entry attribute in which
                *       to store DN list (e.g., groupList). 
                *
            -->
            <group-members-dn-list list-attribute="gmdlAttribute" /><!-- 0 or 1 allowed -->

            <!-- 
                * <group-members-name-list> is an optional element defining 
                * whether or not provisioned group LDAP entries have an attribute
                * listing all of the members by name which belong to it.  If this
                * element is defined, then the list of members for a group will be
                * stored in the group LDAP entry according to the following 
                * attributes.
                *
                *    list-object-class - Optional attribute defining the object
                *       class the group entry must have to support the list-attribute.
                *       Please note that if this object class has required 
                *       attributes not populated by the provisioning process,
                *       then an error may occur.
                *
                *    list-attribute - Defines the LDAP entry attribute in which
                *       to store group list (e.g., groupList).
                * 
                * <group-members-name-list> contains the following element.
                *
                *    <source-subject-name-mapping> - This required element defines
                *       for each Source the Subject attribute to be used as the name
                *       of the Subject.
            -->
            <group-members-name-list list-attribute="gmnlAttribute"><!-- 0 or 1 allowed -->

                <!-- 
                    * <source-subject-name-mapping> is a required element
                    * identifying for each Source which Subject attribute holds
                    * the value to be used as the name of the Subject. It contains
                    * one or more of the following element.
                    *
                    *    <source-subject-name-map> - This required element defines
                    *       single Source the Subject attribute holding the value
                    *       to be used as the Subject's name.
                -->
                <source-subject-name-mapping><!-- Exactly 1 required -->

                    <!-- 
                        * <source-subject-name-map> is a required element identifying
                        * for a source the subject attribute containing the name of 
                        * the subject.
                        *
                        *   source - Defines the ID of the Source (e.g., g:gsa).
                        *
                        *   subject-attribute - Defines the name of the Subject
                        *      attribute containing the name of the subject
                        *      (e.g., logonid).
                    -->
                    <source-subject-name-map source="source1"
                        subject-attribute="subjectAttribute1" /><!-- 1 or more required -->

                    <source-subject-name-map source="source2"
                        subject-attribute="subjectAttribute2" /><!-- 1 or more required -->

                </source-subject-name-mapping>

            </group-members-name-list>

            <!-- 
                * <group-attribute-mapping> is an optional element defining
                * how attributes from a group are mapped to attributes
                * of the group's LDAP entry.
                *
                *    ldap-object-class - Optional attribute defining the
                *       object class the group entry must have to support
                *       the attribute mapping. Please note that if this object
                *       class has required attributes not populated by the 
                *       provisioning process, then an error may occur.
                *
                * <group-attribute-mapping> contains one or more of the following
                * element.
                *
                *    <group-attribute-map> - This required element defines for
                *       a given group attribute which LDAP attribute will hold
                *       its value.
            -->
            <group-attribute-mapping><!-- 0 or 1 allowed -->

                <!-- 
                    * <group-attribute-map> is a required element identifing
                    * for a group attribute which LDAP attribute will hold
                    * its value. It requires the following attributes.
                    *
                    *    group-attribute - Defines the group attribute name.
                    *
                    *    ldap-attribute - Defines the LDAP attribute name for 
                    *       holding the group attribute value.
                -->
                <group-attribute-map
                    group-attribute="gamGroupAttribute1"
                    ldap-attribute="gamLdapAttribute1" /><!-- 1 or more required -->

                <group-attribute-map
                    group-attribute="gamGroupAttribute2"
                    ldap-attribute="gamLdapAttribute2" /><!-- 1 or more required -->

            </group-attribute-mapping>

        </groups>

        <!-- 
            * <memberships> is an optional element defining how memberships
            * are provisioned.  This element is REQUIRED if Memberships are 
            * being provisioned. <memberships> contains the following element.
            *
            *   <member-groups-list> - This required element defines how the
            *      list of groups to which a member belongs is maintained on
            *      the members LDAP entry.
            *                         
        -->
        <memberships><!--  0 or 1 allowed -->

            <!-- 
                * <member-groups-list> is a required element defining the 
                * attribute of provisioned group members LDAP entries that will
                * list all the groups to which they belong. 
                *
                *    list-object-class - Optional attribute defining the
                *       object class the Member's entry must have to support
                *       the group list. Please note that if this object class 
                *       has required attributes not populated by the provisioning
                *       process, then an error may occur.
                *
                *    list-attribute - Defines the LDAP entry attribute in which
                *       to store group list (e.g., groupList).
                *
                *    naming-attribute - Defines the group naming attribute to use
                *       when creating the list of groups for a member (e.g., "name" ).
            -->
            <member-groups-list list-attribute="mglListAttribute"
                naming-attribute="mglNamingAttribute" /><!-- exactly 1 required -->

        </memberships>

    </grouper>

    <!-- 
        * <signet> is an optional element that contains the elements specific to
        * provisioning information from Signet. Note, if <signet> is NOT defined,
        * then <grouper> must be. <signet> contains the following elements.
        *
        *   <permissions-listing> - This required element defines how permissions
        *      are stored when provisioned.
        *
        *   <permissions-queries> - This optional element defines additional
        *      criteria for determining which permissions are provisioned.
        *
    -->
    <signet><!-- 0 or 1 allowed -->

        <!-- 
            * <permissions-listing> is a required element that defines how
            * provisioned permissions are stored in a Subject's LDAP entry.
            * The method storing provisioned permissions is wholly defined by
            * the following attributes.
            *
            *   stored-as - Defines how the permissions are stored. Its value
            *      must be one of "string" or "eduPermission".
            *
            *   string-object-class - Optional attribute defining the object 
            *      class to add to the Member's subject LDAP entry in order to
            *      support the string-attribute. Please note that if this object
            *      class has required attributes not populated by the 
            *      provisioning process, then an error may occur.
            *
            *   string-attribute - Optional attribute defining the LDAP entry
            *      attribute in which to store permissions if stored-as is set
            *      to "string" (e.g., permissionStrings).  As implied this
            *      attribute is required if stored-as is "string".
            *
            *   string-prefix - Optional attribute defining the prefix to use
            *      when storing permissions as strings.
        -->
        <permissions-listing stored-as="string"
            string-attribute="stringAttribute"
            string-prefix="stringPrefix" /><!-- Exactly 1 required -->

        <!-- 
            * <permissions-queries> is an optional element identifying
            * the queries used to select Permissions for provisioning. All active
            * permissions meeting one or more of criteria below are selected for 
            * provisioning.
            *
            * The queries currently supported are defined below.
            *
            *   <subsystem-queries> - This optional element selects all Permissions
            *      associated with one or more of the identified subsystems in
            *      its <subsystem-list> element.
            *
            *   <function-queries> - This optional element selects all Permissions
            *      associated with one or more of the identified functions in
            *      its <function-list> element.
            *
            * Although both <subsystem-queries> and <function-queries> are
            * optional, either one or both must be defined within 
            * <permissions-queries>.
        -->
        <permissions-queries><!-- 0 or 1 allowed -->

            <!-- 
                * <subsystem-queries> is an optional element that defines a list
                * of subsystems to which a permission must be associated with one
                * or more in order to be included for provisioning. It requires the
                * following element.
                *
                *    <subsystem-list> - This required element defines the list of
                *       subsystems.
                *
                * <subsystem-list> contains one or more of the following element.
                *
                *    <subsystem> - This required element identifies a subsystem.
                *
                * <subsystem> identifies a subsystem by ID. It has one required
                * attribute.
                *
                *    id - The identifier for the subsystem.
            -->
            <subsystem-queries><!-- 0 or 1 allowed -->

                <subsystem-list><!-- Exactly 1 required -->

                    <subsystem id="subsystem1" /><!-- 1 or more required -->

                    <subsystem id="subsystem2" /><!-- 1 or more required -->

                    <subsystem id="subsystem3" /><!-- 1 or more required -->

                </subsystem-list>

            </subsystem-queries>

            <!-- 
                * <function-queries> is an optional element that defines a list
                * of functions to which a permission must be associated with one
                * or more in order to be included for provisioning. It requires the
                * following element.
                *
                *    <function-list> - This required element defines the list of
                *       functions.
                *
                * <function-list> contains one or more of the following element.
                *
                *    <function> - This required element identifies a function.
                *
                * <function> identifies a function by ID. It has one required
                * attribute.
                *
                *    id - The identifier for the function.
            -->
            <function-queries><!-- 0 or 1 allowed -->

                <function-list><!-- Exactly 1 required -->

                    <function id="function1" /><!-- 1 or more required -->

                    <function id="function2" /><!-- 1 or more required -->

                </function-list>

            </function-queries>

        </permissions-queries>

    </signet>

    <!-- 
        *
        * <source-subject-identifiers> is a required element identifying by
        * Subject Source how a Subject's LDAP entry is located. It contains
        * one or more of the following element.
        *
        *    <source-subject-identifier> - This required element identifies
        *       for a Subject Source how to locate a Subject's LDAP entry.
        *       One of these elements is to be defined for each Source.
    -->
    <source-subject-identifiers><!-- exactly 1 required -->

        <!-- 
            *
            * <source-subject-identifier> is a required element that identifies
            * for a given Subject Source the Subject naming attribute to be used for 
            * identifying Subjects in the directory, and an LDAP search filter
            * that will uniquely identify Subjects for the Source using the
            * given naming attribute value. It requires two attributes that define
            * the Subject Source and the Subject naming attribute.
            *
            *   source - The name of the Subject Source (e.g., "g:gsa")
            *
            *   subject-attribute - The name of the Subject naming attribute to
            *      be used (e.g., "account")
            * 
            * <source-subject-identifier> contains the following element.
            * 
            *     <ldap-search> - This required element identifies the LDAP search
            *        criteria for finding a Subject's entry.
        -->
        <!-- 
            *
            * <ldap-search> is a required element containing a parameterized
            * LDAP search filter that uniquely identifies a Subject from the
            * Subject Source. It has three required attributes defined below.
            *
            *   base - Identifies the DN of the context or object to search
            *      (e.g., cn=tom,dc=example,dc=edu).
            *
            *   scope - Identifies the scope of the search.  The valid values
            *      are, ignoring case, the names of the JNDI scope constants
            *      defined in the class javax.naming.directory.SearchContext.
            *      These are object_scope, onelevel_scope, and subtree_scope.
            *
            *   filter - Parameterized search filter (e.g., (&(uid={0})(objectclass=ucperson)))
            *      The string "{0}" will be replaced by the value of Subject's
            *      attribute identified by subject-attribute in
            *      source-subject-identifier element.
        -->

        <source-subject-identifier source="source1"
            subject-attribute="subjectAttr1">
            <!-- 1 or more required -->
            <ldap-search base="ldapSearchBase1" scope="object_scope"
                filter="ldapSearchFilter1" />
            <!-- exactly 1 required -->
        </source-subject-identifier>

        <source-subject-identifier source="source2"
            subject-attribute="subjectAttr2">
            <!-- 1 or more required -->
            <ldap-search base="ldapSearchBase2" scope="subtree_scope"
                filter="ldapSearchFilter2" />
            <!-- exactly 1 required -->
        </source-subject-identifier>

    </source-subject-identifiers>


    <!-- 
        * <ldap> is a required element containing the information necessary to
        * connect with the directory being populated. It contains the following
        * element.
        *
        *   <context> - This require element defines the parameters necessary
        *      to establish a JNDI LDAP context.
        *
    -->
    <ldap><!-- Exactly 1 required -->

        <!-- 
            * <context> is a required element holding the parameters necessary
            * to establish a JNDI LDAP context. It contains the following element.
            *
            *    <parameters-list> - This required element contains the list of 
            *       parameters needed to establish a JNDI LDAP context.
            *
            * <paramters-list> contains one or more of the follow element.
            *
            *    <parameter> - This required element holds a parameter name/value
            *       pair.
            *
            * The <parameter>'s necessary to establish a JNDI LDAP context are
            * listed below along with a description of the expected value. Note
            * the parameter names must be the same, ignoring case, as  the
            * equivalent JNDI constant defined in the class javax.naming.LdapContext
            * (e.g., a parameter name of provider_url for javax.naming.LdapContext.PROVIDER_URL).
            *
            *   initial_context_factory - Fully qualified class name of a context
            *      factory (e.g., com.sun.jndi.ldap.LdapCtxFactory).
            *
            *   provider_url - URL for the LDAP provider
            *      (e.g., ldap://localhost:389/o=JNDITutorial).
            *
            *   security_authentication - Value of "none", "simple", "strong", or a 
            *      provider-specific string (e.g., simple).
            *
            *   security_principal - Specifies the name of the user/program doing
            *      the authentication (e.g., "cn=S. User,ou=NewHires,o=JNDITutorial").
            *
            *   security_credentials - Specifies the credentials of the user/program 
            *      doing the authentication (e.g., mysecret).
        -->
        <context><!-- Exactly 1 required -->

            <parameter-list><!-- 0 or 1 allowed -->

                <!-- 1 or more <parameter> elements are required within <parameter-list> -->
                <parameter name="initial_context_factory"
                    value="initContextFactory" />

                <parameter name="provider_url" value="providerUrl" />

                <parameter name="security_authentication"
                    value="securityAuthentication" />

                <parameter name="security_principal"
                    value="securityPrincipal" />

                <parameter name="security_credentials"
                    value="securityCredentials" />

            </parameter-list>

        </context>

    </ldap>

</ldappc>
